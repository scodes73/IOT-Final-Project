<html><head><title>APKHunt Report</title></head><body>
<h1>APKHunt Report</h1>
<pre>

      _ _   __ __  _   __  _   _                _   
     / _ \ | _ _ \| | / / | | | |              | |  
    / /_\ \| |_/ /| |/ /  | |_| | _   _   _ _  | |_ 
    |  _  ||  __/ |    \  |  _  || | | |/  _  \|  _|
    | | | || |    | |\  \ | | | || |_| || | | || |_ 
    \_| |_/\_|    \_| \_/ \_| |_/\ _ _ /|_| |_|\_ _|
    ------------------------------------------------
    OWASP MASVS Static Analyzer                                
        
[+] APKHunt - a comprehensive static code analysis tool for Android apps
[+] Based on: OWASP MASVS - https://mobile-security.gitbook.io/masvs/
[+] Author: Sumit Kalaria & Mrunal Chawda
[*] Connect: Please do write to us for any suggestions/feedback.

[+] Log-file path: /home/sap/Downloads/Dev/apk-download/apks/todo/APKHunt_com-carolinegirvan-mobile_2025-4-27_15-19-38.txt

[+] HTML-file path: /home/sap/Downloads/Dev/apk-download/apks/todo/APKHunt_com-carolinegirvan-mobile_2025-4-27_15-19-38.html
</pre></body></html>

[+] Scan has been started at: 2025-04-27 15:19:38.021204584 -0400 EDT m=+0.000528630
[+] APK Base: com-carolinegirvan-mobile.apk
[+] APK Size: 34.183594 MB
[+] APK Directory: /home/sap/Downloads/Dev/apk-download/apks/todo/
[+] APK Static Analysis Path: /home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/
[+] APK Hash: MD5: a37a80eabd9b49eaadec68d60835a2db
[+] APK Hash: SHA256: 6e08a949631d832459506880da7213912de26c95670edaac84a450cdbb1fd6b1

[+] d2j-dex2jar has started converting APK to Java JAR file
[+] =======================================================
    dex2jar /home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile.apk -> /home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile.jar

[+] Jadx has started decompiling the application
[+] ============================================
exit status 1
INFO  - loading ...
INFO  - processing ...
INFO  - progress: 0 of 9241 (0%)INFO  - progress: 1088 of 9241 (11%)INFO  - progress: 2417 of 9241 (26%)INFO  - progress: 2417 of 9241 (26%)INFO  - progress: 2422 of 9241 (26%)INFO  - progress: 2450 of 9241 (26%)INFO  - progress: 2476 of 9241 (26%)INFO  - progress: 2519 of 9241 (27%)INFO  - progress: 2718 of 9241 (29%)INFO  - progress: 3385 of 9241 (36%)INFO  - progress: 3674 of 9241 (39%)INFO  - progress: 3848 of 9241 (41%)INFO  - progress: 4065 of 9241 (43%)INFO  - progress: 4280 of 9241 (46%)INFO  - progress: 4488 of 9241 (48%)INFO  - progress: 4709 of 9241 (50%)INFO  - progress: 4884 of 9241 (52%)INFO  - progress: 5077 of 9241 (54%)INFO  - progress: 5281 of 9241 (57%)INFO  - progress: 5467 of 9241 (59%)INFO  - progress: 5567 of 9241 (60%)INFO  - progress: 5733 of 9241 (62%)INFO  - progress: 5852 of 9241 (63%)INFO  - progress: 5991 of 9241 (64%)INFO  - progress: 6119 of 9241 (66%)INFO  - progress: 6344 of 9241 (68%)INFO  - progress: 6524 of 9241 (70%)INFO  - progress: 6621 of 9241 (71%)INFO  - progress: 6753 of 9241 (73%)INFO  - progress: 6913 of 9241 (74%)INFO  - progress: 7074 of 9241 (76%)INFO  - progress: 7267 of 9241 (78%)INFO  - progress: 7358 of 9241 (79%)INFO  - progress: 7478 of 9241 (80%)INFO  - progress: 7619 of 9241 (82%)INFO  - progress: 7697 of 9241 (83%)INFO  - progress: 7795 of 9241 (84%)INFO  - progress: 7913 of 9241 (85%)INFO  - progress: 8036 of 9241 (86%)INFO  - progress: 8154 of 9241 (88%)INFO  - progress: 8256 of 9241 (89%)INFO  - progress: 8319 of 9241 (90%)INFO  - progress: 8436 of 9241 (91%)INFO  - progress: 8499 of 9241 (91%)INFO  - progress: 8535 of 9241 (92%)INFO  - progress: 8596 of 9241 (93%)INFO  - progress: 8727 of 9241 (94%)INFO  - progress: 8809 of 9241 (95%)INFO  - progress: 8993 of 9241 (97%)INFO  - progress: 9117 of 9241 (98%)INFO  - progress: 9207 of 9241 (99%)INFO  - progress: 9240 of 9241 (99%)                                                             ERROR - finished with errors, count: 6

[+] Capturing the data from the AndroidManifest file
[+] ================================================

==>> The Basic Information...

    package="com.carolinegirvan.mobile"
    versionName="v1.2.2"
    minSdkVersion="26"
    targetSdkVersion="34"
    - android:networkSecurityConfig attribute has not been observed.
    

==>> The Activities...

67:        <activity
78:        <activity
91:        <activity
119:        <activity
124:        <activity
177:        <activity
196:        <activity
209:        <activity
235:        <activity
246:        <activity
276:        <activity
283:        <activity

[+] Looking for the Exported Activities specifically...

	- No exported activities have been observed.

    > Total exported activities are: 0

    > QuickNote: It is recommended to use exported activities securely, if observed.

==>> The Content Providers...

54:        <provider
63:        <provider
140:        <provider
213:        <provider
265:        <provider

[+] Looking for the Exported Content Providers specifically...

	- No exported Content Providers have been observed.

    > Total exported Content Providers are: 0

    > QuickNote: It is recommended to use exported Content Providers securely, if observed.

==>> The Brodcast Receivers...

186:        <receiver
219:        <receiver
262:        <receiver

[+] Looking for the Exported Brodcast Receivers specifically...

	- No exported Brodcast Receivers have been observed.

    > Total exported Brodcast Receivers are: 0

    > QuickNote: It is recommended to use exported Brodcast Receivers securely, if observed.

==>>  The Services...

110:        <service
114:        <service
145:        <service
189:        <service
193:        <service
201:        <service
223:        <service
227:        <service
251:        <service
258:        <service
289:        <service
297:        <service

[+] Looking for the Exported Services specifically...

	- No exported Services have been observed.

    > Total exported Services are: 0

    > QuickNote: It is recommended to use exported Services securely, if observed.

==>>  The Intents Filters...

25:            <action android:name="android.intent.action.VIEW"/>
74:                <action android:name="android.intent.action.MAIN"/>
75:                <category android:name="android.intent.category.LAUNCHER"/>
82:                <action android:name="android.intent.action.SEARCH"/>
95:                <action android:name="android.intent.action.VIEW"/>
96:                <category android:name="android.intent.category.DEFAULT"/>
97:                <category android:name="android.intent.category.BROWSABLE"/>
131:                <action android:name="android.intent.action.VIEW"/>
132:                <category android:name="android.intent.category.DEFAULT"/>
133:                <category android:name="android.intent.category.BROWSABLE"/>

    > QuickNote: It is recommended to use Intent Filters securely, if observed.

==>> APK Component Summary
[+] --------------------------------
    Exported Activities: 0
    Exported Content Providers: 0
    Exported Broadcast Receivers: 0
    Exported Services: 0

[+] Let's start the static assessment based on "OWASP MASVS"

[+] Hunting begins based on "V2: Data Storage and Privacy Requirements"
[+] -------------------------------------------------------------------

==>> The Shared Preferences related instances...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/cognito/clientcontext/datacollection/DeviceDataCollector.java
53:        SharedPreferences sharedPreferences = context.getSharedPreferences(LOCAL_STORAGE_PATH, 0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/internal/keyvaluestore/AWSKeyValueStore.java
278:                this.sharedPreferencesForData = this.context.getSharedPreferences(this.sharedPreferencesName, 0);
279:                this.sharedPreferencesForEncryptionMaterials = this.context.getSharedPreferences(this.sharedPreferencesName + SHARED_PREFERENCES_ENCRYPTION_KEY_NAMESPACE_SUFFIX, 0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoauth/util/LocalDataManager.java
36:            SharedPreferences.Editor edit = context.getSharedPreferences(ClientConstants.APP_LOCAL_CACHE, 0).edit();
52:            SharedPreferences.Editor edit = context.getSharedPreferences(ClientConstants.APP_LOCAL_CACHE, 0).edit();
72:            SharedPreferences.Editor edit = context.getSharedPreferences(ClientConstants.APP_LOCAL_CACHE, 0).edit();
94:            return context.getSharedPreferences(ClientConstants.APP_LOCAL_CACHE, 0).getString(str + ClientConstants.DOMAIN_QUERY_PARAM_CODE_CHALLENGE, null);
104:            return context.getSharedPreferences(ClientConstants.APP_LOCAL_CACHE, 0).getStringSet(str + ClientConstants.DOMAIN_QUERY_PARAM_SCOPES, hashSet);
125:            SharedPreferences sharedPreferences = context.getSharedPreferences(ClientConstants.APP_LOCAL_CACHE, 0);
138:            return context.getSharedPreferences(ClientConstants.APP_LOCAL_CACHE, 0).getString(String.format(Locale.US, "%s.%s.%s", ClientConstants.APP_LOCAL_CACHE_KEY_PREFIX, str, ClientConstants.APP_LAST_AUTH_USER), null);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoPinpointSharedContext.java
22:                SharedPreferences sharedPreferences = context.getSharedPreferences(str + PREFERENCES_AND_FILE_MANAGER_SUFFIX, 0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/cast/C4835j1.java
104:            final SharedPreferences sharedPreferences = this.f21005a.getApplicationContext().getSharedPreferences(format, 0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5801g4.java
104:        SharedPreferences sharedPreferences = this.f22669a.mo24877f().getSharedPreferences("com.google.android.gms.measurement.prefs", 0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5978w4.java
505:                        SharedPreferences.Editor edit = m25247N2.f22669a.f22924a.getSharedPreferences("google.analytics.deferred.deeplink.prefs", 0).edit();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/common/C6598g.java
324:        return context.getSharedPreferences("com.google.firebase.crashlytics", 0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/heartbeatinfo/C6697l.java
23:        this.f26133a = context.getSharedPreferences("FirebaseHeartBeat" + str, 0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/installations/local/C6714b.java
32:        this.f26192a = c6672d.m28970j().getSharedPreferences("com.google.android.gms.appid", 0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/perf/config/C6754w.java
60:        this.f26300a = context.getSharedPreferences("FirebasePerfSharedPrefs", 0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/remoteconfig/C6832c.java
83:        return new C6846n(context.getSharedPreferences(String.format("%s_%s_%s_%s", "frc", str, str2, "settings"), 0));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p094f2/C7120b.java
17:        this.f27899a = context.getSharedPreferences("com.apple.android.music.auth_preferences", 0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p094f2/SharedPreferencesOnSharedPreferenceChangeListenerC7119a.java
33:        SharedPreferences sharedPreferences = context.getSharedPreferences("com.apple.android.music.playback_preferences", 0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p194n0/C8654b.java
11:        return context.getSharedPreferences(m39728c(context), m39727b());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p239q6/CallableC9215a.java
20:        return this.f35800a.getSharedPreferences("google_sdk_flags", 0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p324x5/C10084c.java
31:        this.f37880b = context.getSharedPreferences("com.google.android.gms.signin", 0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p340y8/C10181a.java
30:        this.f38093b = m44044a.getSharedPreferences("com.google.firebase.common.prefs:" + str, 0);

[!] QuickNote:
    - It is recommended to use shared preferences appropriately, if observed. Please note that, Misuse of the SharedPreferences API can often lead to the exposure of sensitive data. MODE_WORLD_READABLE allows all applications to access and read the file contents. Applications compiled with an android:targetSdkVersion value less than 17 may be affected, if they run on an OS version that was released before Android 4.2 (API level 17).

[*] Reference:
    - OWASP MASVS: MSTG-STORAGE-2 | CWE-922: Insecure Storage of Sensitive Information
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x07-v2-data_storage_and_privacy_requirements

==>>  The SQLite Database Storage related instances...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/music/playback/queue/ThreadFactoryC1937c.java
716:            this.f10343x.getWritableDatabase().delete("provider_media_item", null, null);
1200:        return this.f10343x.getWritableDatabase();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/music/playback/reporting/C1948d.java
62:        SQLiteDatabase writableDatabase = getWritableDatabase();
118:        getWritableDatabase().delete("pafevents", null, null);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/datatransport/runtime/scheduling/persistence/C3507m0.java
894:                return C3521t0.this.getWritableDatabase();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5841k.java
22:    public final SQLiteDatabase getWritableDatabase() {
33:            return super.getWritableDatabase();
43:                SQLiteDatabase writableDatabase = super.getWritableDatabase();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5852l.java
364:            return this.f22541d.getWritableDatabase();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5856l3.java
23:    public final SQLiteDatabase getWritableDatabase() throws SQLiteException {
25:            return super.getWritableDatabase();
35:                return super.getWritableDatabase();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5867m3.java
67:        SQLiteDatabase writableDatabase = this.f22566c.getWritableDatabase();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p173l2/C8509b.java
17:        SQLiteDatabase writableDatabase = getWritableDatabase();

[!] QuickNote:
    - It is recommended that sensitive data should not be stored in unencrypted SQLite databases, if observed. Please note that, SQLite databases should be password-encrypted.

[*] Reference:
    - OWASP MASVS: MSTG-STORAGE-2 | CWE-922: Insecure Storage of Sensitive Information
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x07-v2-data_storage_and_privacy_requirements

==>> The Firebase Database instances...


==>> The Realm Database instances...


==>> The Internal Storage related instances...


==>> The External Storage related instances...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/content/C0524a.java
53:            return context.getExternalCacheDirs();
58:            return context.getExternalFilesDirs(str);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/content/FileProvider.java
240:                    file = context.getCacheDir();
242:                    file = Environment.getExternalStorageDirectory();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/graphics/C0584z.java
119:        File cacheDir = context.getCacheDir();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/airbnb/lottie/C1506c.java
59:            return new File(this.f9431a.getCacheDir(), "lottie_network_cache");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/engine/cache/C2018f.java
28:            File cacheDir = this.f10734a.getCacheDir();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/Loader.java
261:    public static File getCacheDir() {

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p119h3/C7299x.java
71:        File cacheDir = application.getCacheDir();
103:        File cacheDir = application.getCacheDir();
129:        File cacheDir = application.getCacheDir();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p160k3/C7503j.java
78:        File file = new File(requireActivity().getCacheDir(), "JPEG_" + format + "_.jpg");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p346z1/AbstractC10197a.java
133:        File file = new File(this.f38116a.getCacheDir(), "player");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p346z1/C10207k.java
94:        return new File(this.f38116a.getCacheDir(), "com.apple.android.music");

[!] QuickNote:
    - It is recommended that any sensitive data should not be stored in the external storage, if observed. Please note that, Files saved to external storage are world-readable and it can be used by an attacker to allow for arbitrary control of the application in some scenarios.

[*] Reference:
    - OWASP MASVS: MSTG-STORAGE-2 | CWE-922: Insecure Storage of Sensitive Information
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x07-v2-data_storage_and_privacy_requirements

==>> The Temporary File Creation instances...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/installations/local/C6715c.java
89:            createTempFile = File.createTempFile("PersistedInstallation", "tmp", this.f26195b.m28970j().getFilesDir());

[!] QuickNote:
    - It is recommended that the temporary files should be securely deleted upon their usage, if observed. Please note that, Creating and using insecure temporary files can leave application and system data vulnerable to attack.

[*] Reference:
    - OWASP MASVS: MSTG-STORAGE-2 | CWE-277: Insecure Inherited Permissions
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x07-v2-data_storage_and_privacy_requirements

==>> The Local Storage - Input Validation...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/cognito/clientcontext/datacollection/DeviceDataCollector.java
62:        SharedPreferences.Editor edit = sharedPreferences.edit();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoauth/util/LocalDataManager.java
36:            SharedPreferences.Editor edit = context.getSharedPreferences(ClientConstants.APP_LOCAL_CACHE, 0).edit();
52:            SharedPreferences.Editor edit = context.getSharedPreferences(ClientConstants.APP_LOCAL_CACHE, 0).edit();
72:            SharedPreferences.Editor edit = context.getSharedPreferences(ClientConstants.APP_LOCAL_CACHE, 0).edit();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/cast/C4947p7.java
93:        SharedPreferences.Editor edit = sharedPreferences.edit();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/cast/C4987rd.java
108:            SharedPreferences.Editor edit = c4987rd.f21177b.edit();
168:        SharedPreferences.Editor edit = this.f21177b.edit();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5741b4.java
34:        SharedPreferences.Editor edit = this.f22140e.m24652o().edit();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5753c4.java
94:        SharedPreferences.Editor edit = this.f22170d.m24652o().edit();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5765d4.java
43:        SharedPreferences.Editor edit = this.f22215e.m24652o().edit();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5777e4.java
47:        SharedPreferences.Editor edit = this.f22237e.m24652o().edit();
91:            SharedPreferences.Editor edit = this.f22237e.m24652o().edit();
100:        SharedPreferences.Editor edit2 = this.f22237e.m24652o().edit();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5789f4.java
39:        SharedPreferences.Editor edit = this.f22256d.m24652o().edit();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5801g4.java
109:            SharedPreferences.Editor edit = this.f22278c.edit();
175:        SharedPreferences.Editor edit = m24652o().edit();
188:        SharedPreferences.Editor edit = m24652o().edit();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5969v6.java
109:            SharedPreferences.Editor edit = m25240F.m24652o().edit();
186:        SharedPreferences.Editor edit = m25240F.m24652o().edit();
775:                SharedPreferences.Editor edit = m25240F.m24652o().edit();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5978w4.java
505:                        SharedPreferences.Editor edit = m25247N2.f22669a.f22924a.getSharedPreferences("google.analytics.deferred.deeplink.prefs", 0).edit();
637:                    SharedPreferences.Editor edit = m25240F4.m24652o().edit();
652:                SharedPreferences.Editor edit2 = m25240F5.m24652o().edit();
658:                SharedPreferences.Editor edit3 = m25240F6.m24652o().edit();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/settings/C6665f.java
151:        SharedPreferences.Editor edit = C6598g.m28431r(this.f26058a).edit();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/heartbeatinfo/C6697l.java
53:        SharedPreferences.Editor edit = this.f26133a.edit();

[!] QuickNote:
    - It is recommended that input validation needs to be applied on the sensitive data the moment it is read back again, if observed. Please note that, Any process can override the data for any publicly accessible data storage.

[*] Reference:
    - OWASP MASVS: MSTG-PLATFORM-2 | CWE-922: Insecure Storage of Sensitive Information
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x11-v6-interaction_with_the_environment

==>>  The Information Leaks via Logs...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/android/content/C1067b.java
345:                Log.w("ActivityNavigator", "Activity destinations do not support Animator resource. Ignoring popEnter resource " + resources.getResourceName(popEnterAnim) + " and popExit resource " + resources.getResourceName(popExitAnim) + " when launching " + destination);
372:        Log.w("ActivityNavigator", "Activity destinations do not support Animator resource. Ignoring enter resource " + resources.getResourceName(enterAnim) + " and exit resource " + resources.getResourceName(exitAnim) + "when launching " + destination);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/android/content/C1087m.java
298:            Log.i("NavController", "Ignoring add of destination " + c1084j.getDestination() + " outside of the call to navigate(). ");
964:            Log.i("NavController", "Ignoring popBackStack to destination " + C1092r.INSTANCE.m6875b(this.context, destinationId) + " as it was not found on the current back stack");
1671:            Log.i("NavController", "Ignoring pop of " + popUpTo + " as it was not found on the current back stack");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/android/support/v4/media/MediaBrowserCompat.java
72:            Log.w("MediaBrowserCompat", "Unknown result code: " + i10 + " (extras=" + this.f518t + ", resultData=" + bundle + ")");
190:                    Log.w("MediaBrowserCompat", "Unhandled message: " + message + "\n  Client version: 1\n  Service version: " + message.arg1);
199:                Log.e("MediaBrowserCompat", "Could not unparcel the data.");
388:                    Log.i("MediaBrowserCompat", "Remote error unregistering client messenger.");
408:                    Log.d("MediaBrowserCompat", "onLoadChildren for id that isn't subscribed id=" + str);
473:                        Log.i("MediaBrowserCompat", "Remote error registering client messenger.");
481:                Log.e("MediaBrowserCompat", "Unexpected IllegalStateException", e10);
712:        Log.d("MediaBrowserCompat", "Connecting to a MediaBrowserService.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/android/support/v4/media/MediaMetadataCompat.java
136:            Log.w("MediaMetadata", "Failed to retrieve a key as Bitmap.", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/android/support/v4/media/RatingCompat.java
150:        Log.e("Rating", "Invalid percentage-based rating value");
163:                Log.e("Rating", "Invalid rating style (" + i10 + ") for a star rating");
171:        Log.e("Rating", "Trying to set out of range star-based rating");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/android/support/v4/media/session/MediaControllerCompat.java
156:                        Log.e("MediaControllerCompat", "Dead object in unregisterCallback.", e10);
183:                    Log.e("MediaControllerCompat", "Dead object in getPlaybackState.", e10);
213:                        Log.e("MediaControllerCompat", "Dead object in registerCallback.", e10);
235:                    Log.e("MediaControllerCompat", "Dead object in registerCallback.", e10);
785:            Log.w("MediaControllerCompat", "the callback has already been registered");
801:            Log.w("MediaControllerCompat", "the callback has never been registered");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/android/support/v4/media/session/MediaSessionCompat.java
373:                    Log.e("MediaSessionCompat", "Could not unparcel the extra data.");
426:                    Log.e("MediaSessionCompat", "Could not unparcel the data.");
1279:                Log.e("MediaSessionCompat", "Cannot execute MediaSession.getCallingPackage()", e10);
1415:                    Log.w("MediaSessionCompat", "Exception happened while accessing MediaSession.mCallback.", e10);
1518:            Log.e("MediaSessionCompat", "Could not unparcel the data.");
1617:                    Log.w("MediaSessionCompat", "Couldn't find a unique registered media button receiver in the given context.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/android/view/result/ActivityResultRegistry.java
341:            Log.w("ActivityResultRegistry", "Dropping pending result for request " + str + ": " + this.f730g.get(str));
345:            Log.w("ActivityResultRegistry", "Dropping pending result for request " + str + ": " + this.f731h.getParcelable(str));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/app/C0244i.java
218:            Log.i("AppCompatViewInflater", "app:theme is now deprecated. Please move to using android:theme instead.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/app/C0248m.java
82:            Log.d("TwilightManager", "Failed to get last known location", e10);
130:        Log.i("TwilightManager", "Could not get last known location. This is probably because the app does not have any location permissions. Falling back to hardcoded sunrise/sunset values.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/app/LayoutInflaterFactory2C0241f.java
1088:            Log.i("AppCompatDelegate", "You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR id when requesting this feature.");
1094:        Log.i("AppCompatDelegate", "You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR_OVERLAY id when requesting this feature.");
1684:                Log.d("AppCompatDelegate", "Exception while getting ActivityInfo", e10);
1745:                Log.w("AppCompatDelegate", "Couldn't get audio manager");
2102:                    Log.i("AppCompatDelegate", "Failed to instantiate custom view inflater " + string + ". Falling back to default.", th);
2359:            Log.i("AppCompatDelegate", "The Activity's LayoutInflater already has a Factory installed so we can not install AppCompat's");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/view/menu/C0260i.java
463:                Log.e("MenuItemImpl", "Can't find activity to handle intent; ignoring", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/view/menu/MenuItemC0261j.java
303:            Log.w("MenuItemWrapper", "Error while calling setExclusiveCheckable", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/widget/C0331g1.java
462:        Log.i("ToolbarWidgetWrapper", "Progress display unsupported");
468:        Log.i("ToolbarWidgetWrapper", "Progress display unsupported");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/widget/C0340j1.java
26:            Log.d("ViewUtils", "Could not find method computeFitSystemWindows. Oh well.");
40:                Log.d("ViewUtils", "Could not invoke computeFitSystemWindows", e10);
59:            Log.d("ViewUtils", "Could not invoke makeOptionalFitsSystemWindows", e10);
61:            Log.d("ViewUtils", "Could not find method makeOptionalFitsSystemWindows. Oh well...");
63:            Log.d("ViewUtils", "Could not invoke makeOptionalFitsSystemWindows", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/widget/C0355q0.java
268:                Log.i("ListPopupWindow", "Could not find method setClipToScreenEnabled() on PopupWindow. Oh well.");
273:                Log.i("ListPopupWindow", "Could not find method setEpicenterBounds(Rect) on PopupWindow. Oh well.");
304:                Log.i("ListPopupWindow", "Could not call setClipToScreenEnabled() on PopupWindow. Oh well.");
345:                    Log.e("ListPopupWindow", "Invalid hint position " + this.f1765F);
574:                    Log.e("ListPopupWindow", "Could not invoke setEpicenterBounds on PopupWindow", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/widget/C0360t.java
59:                Log.i("ReceiveContent", "Can't handle drop: no activity: view=" + view);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/widget/C0361t0.java
160:            Log.i("MenuPopupWindow", "Could not find method setTouchModal() on PopupWindow. Oh well.");
194:                Log.i("MenuPopupWindow", "Could not invoke setTouchModal() on PopupWindow. Oh well.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/widget/C0363u0.java
298:                Log.e("ResourceManagerInternal", "Exception while inflating drawable", e10);
333:            Log.d("ResourceManagerInternal", "Mutated drawable is not the same instance as the input.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/widget/C0364v.java
140:            Log.e("AppCompatSpinner", "Cannot set popup background for MODE_DIALOG, ignoring");
161:            Log.e("AppCompatSpinner", "Cannot set horizontal offset for MODE_DIALOG, ignoring");
185:            Log.e("AppCompatSpinner", "Cannot set vertical offset for MODE_DIALOG, ignoring");
191:            Log.e("AppCompatSpinner", "Cannot set horizontal (original) offset for MODE_DIALOG, ignoring");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/widget/C0372z.java
199:            Log.w("ACTVAutoSizeHelper", "Failed to obtain TextDirectionHeuristic, auto size may be incorrect");
237:            Log.w("ACTVAutoSizeHelper", "Failed to retrieve TextView#" + str + "() method", e10);
247:            Log.w("ACTVAutoSizeHelper", "Failed to invoke TextView#" + str + "() method", e10);
265:                    Log.w("ACTVAutoSizeHelper", "Failed to invoke TextView#nullLayouts() method", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/widget/C0373z0.java
56:                Log.e("ThemeUtils", "View " + view.getClass() + " is an AppCompat widget that can only be used with a Theme.AppCompat theme (or descendant).");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/widget/SearchView.java
836:            Log.w("SearchView", "Search suggestions cursor at row " + i11 + " returned exception.", e10);
934:            Log.e("SearchView", "Failed launch activity: " + intent, e10);
1207:            Log.w("SearchView", "Could not find voice search activity");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/widget/ViewOnClickListenerC0371y0.java
167:            Log.w("SuggestionsAdapter", "Invalid icon resource " + iconResource + " for " + componentName.flattenToShortString());
170:            Log.w("SuggestionsAdapter", e10.toString());
221:                    Log.e("SuggestionsAdapter", "Error closing icon stream for " + uri, e10);
225:            Log.w("SuggestionsAdapter", "Icon not found: " + uri + ", " + e11.getMessage());
228:        Log.w("SuggestionsAdapter", "Icon not found: " + uri + ", " + e11.getMessage());
248:            Log.w("SuggestionsAdapter", "Icon resource not found: " + str);
288:            Log.e("SuggestionsAdapter", "unexpected error retrieving valid column from cursor, did the remote process die?", e10);
326:            Log.w("SuggestionsAdapter", "Tried to change cursor after adapter was closed.");
344:            Log.e("SuggestionsAdapter", "error changing cursor and caching columns", e10);
360:                Log.w("SuggestionsAdapter", "Search suggestions query threw an exception.", e10);
445:            Log.w("SuggestionsAdapter", "Search suggestions cursor threw exception.", e10);
459:            Log.w("SuggestionsAdapter", "Search suggestions cursor threw exception.", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/browser/customtabs/C0380c.java
259:        Log.w("CustomTabsClient", "Unable to find any Custom Tabs packages, you may need to add a <queries> element to your manifest. See the docs for CustomTabsClient#getPackageName.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/AbstractC0419g.java
253:                    Log.e("KeyCycleOscillator", "unable to setProgress", e10);
255:                    Log.e("KeyCycleOscillator", "unable to setProgress", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/AbstractC0431s.java
187:                    Log.e("SplineSet", "unable to setProgress", e10);
189:                    Log.e("SplineSet", "unable to setProgress", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/AbstractC0432t.java
222:                        Log.e("SplineSet", "unable to setProgress", e10);
224:                        Log.e("SplineSet", "unable to setProgress", e11);
528:            Log.e("SplineSet", "Error no points added to " + this.f2503f);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/C0413a.java
50:            Log.v(str, str2 + str3 + (".(" + stackTrace[i11].getFileName() + ":" + stackTrace[i11].getLineNumber() + ") " + stackTrace[i11].getMethodName()) + str3);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/C0416d.java
115:                        Log.e("KeyAttribute", "unused attribute 0x" + Integer.toHexString(index) + "   " + f2266a.get(index));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/C0418f.java
193:                        Log.e("KeyCycle", "unused attribute 0x" + Integer.toHexString(index) + "   " + f2286a.get(index));
252:                Log.v("WARNING! KeyCycle", "  UNKNOWN  " + str);
306:                    Log.v("WARNING KeyCycle", "  UNKNOWN  " + str);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/C0420h.java
36:            Log.e("KeyFrames", "unable to load", e10);
63:                            Log.e("KeyFrames", "unable to create ", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/C0421i.java
143:                        Log.e("KeyPosition", "unused attribute 0x" + Integer.toHexString(index) + "   " + f2328a.get(index));
148:                Log.e("KeyPosition", "no frame position");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/C0423k.java
116:                        Log.e("KeyTimeCycle", "unused attribute 0x" + Integer.toHexString(index) + "   " + f2347a.get(index));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/C0424l.java
156:                Log.e("KeyTrigger", "unused attribute 0x" + Integer.toHexString(index) + "   " + f2368a.get(index));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/C0425m.java
255:                                Log.e("MotionPaths", str + " splineSet not a CustomSet frame = " + i10 + ", value" + c0450a.m2938d() + abstractC0431s);
259:                            Log.e("MotionPaths", "UNKNOWN customName " + str2);
263:                        Log.e("MotionPaths", "UNKNOWN spline " + str);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/C0426n.java
213:            Log.e("MotionController", " KeyPath positon \"" + c0429q.f2438s + "\" outside of range");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/C0430r.java
163:                        System.out.println("parsing = " + name);
245:                                Log.v("MotionScene", " OnSwipe (" + context.getResources().getResourceEntryName(i10) + ".xml:" + xml.getLineNumber() + ")");
262:                            Log.v("MotionScene", "WARNING UNKNOWN ATTRIBUTE " + name);
286:                System.out.println("id string = " + attributeValue);
334:                Log.e("MotionScene", "ERROR! invalid deriveConstraintsFrom: @id/" + C0413a.m2405b(this.f2446a.getContext(), i11));
354:                System.out.println("id getMap res = " + i10);
365:        Log.e("MotionScene", "error in parsing id");
467:                Log.e("MotionScene", "Cannot be derived from yourself");
750:            System.out.println("id " + i10);
751:            System.out.println("size " + this.f2453h.size());
760:        Log.e("MotionScene", "Warning could not find ConstraintSet id/" + C0413a.m2405b(this.f2446a.getContext(), i10) + " In MotionScene");
1017:                    Log.e("MotionScene", "OnClick could not find id " + this.f2486q);
1063:                Log.e("MotionScene", " (*)  could not find id " + this.f2486q);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/C0433u.java
407:                Log.e("TouchResponse", "cannot find TouchAnchorId @id/" + C0413a.m2405b(this.f2530o.getContext(), this.f2519d));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/MotionLayout.java
803:                            Log.e("MotionLayout", C0413a.m2404a() + "no widget for  " + C0413a.m2406c(childAt2) + " (" + childAt2.getClass().getName() + ")");
811:                            Log.e("MotionLayout", C0413a.m2404a() + "no widget for  " + C0413a.m2406c(childAt2) + " (" + childAt2.getClass().getName() + ")");
1223:            Log.e("MotionLayout", "CHECK: motion scene not set! set \"app:layoutDescription=\"@xml/file\"");
1235:                Log.v("MotionLayout", "CHECK: CURRENT");
1243:                Log.e("MotionLayout", "CHECK: two transitions with the same start and end " + m2405b + "->" + m2405b2);
1246:                Log.e("MotionLayout", "CHECK: you can't have reverse transitions" + m2405b + "->" + m2405b2);
1251:                Log.e("MotionLayout", " no such constraintSetStart " + m2405b);
1254:                Log.e("MotionLayout", " no such constraintSetEnd " + m2405b);
1267:                Log.w("MotionLayout", "CHECK: " + m2405b + " ALL VIEWS SHOULD HAVE ID's " + childAt.getClass().getName() + " does not!");
1270:                Log.w("MotionLayout", "CHECK: " + m2405b + " NO CONSTRAINTS for " + C0413a.m2406c(childAt));
1278:                Log.w("MotionLayout", "CHECK: " + m2405b + " NO View matches id " + m2405b2);
1281:                Log.w("MotionLayout", "CHECK: " + m2405b + "(" + m2405b2 + ") no LAYOUT_HEIGHT");
1284:                Log.w("MotionLayout", "CHECK: " + m2405b + "(" + m2405b2 + ") no LAYOUT_HEIGHT");
1291:        Log.v("MotionLayout", "CHECK: transition = " + bVar.m2674u(getContext()));
1292:        Log.v("MotionLayout", "CHECK: transition.setDuration = " + bVar.m2675x());
1294:            Log.e("MotionLayout", "CHECK: start and end constraint set should not be the same!");
1435:                Log.e("MotionLayout", "WARNING NO app:layoutDescription tag");
1879:        Log.w("MotionLayout", "WARNING could not find view id " + resourceName);
2450:            Log.v("MotionLayout", C0413a.m2404a() + " transitionToStart ");
2458:            Log.e("MotionLayout", "MotionScene not defined");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/solver/widgets/C0439f.java
180:                System.out.println("EXCEPTION : " + e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/widget/AbstractC0451b.java
74:        Log.w("ConstraintHelper", "Could not find id of \"" + trim + "\"");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/widget/C0450a.java
215:                Log.e("TransitionLayout", " Custom Attribute \"" + str + "\" not found on " + cls.getName());
218:                Log.e("TransitionLayout", e11.getMessage());
219:                Log.e("TransitionLayout", " Custom Attribute \"" + str + "\" not found on " + cls.getName());
224:                Log.e("TransitionLayout", sb2.toString());
226:                Log.e("TransitionLayout", " Custom Attribute \"" + str + "\" not found on " + cls.getName());
338:            Log.e("TransitionLayout", "cannot access method " + str + "on View \"" + C0413a.m2406c(view) + "\"");
341:            Log.e("TransitionLayout", "no method " + str + "on View \"" + C0413a.m2406c(view) + "\"");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/widget/C0452c.java
141:                    Log.v("ConstraintLayoutStates", "Unknown tag");
228:                            Log.v("ConstraintLayoutStates", "unknown tag " + name);
254:                        Log.e("ConstraintLayoutStates", "error in parsing id");
303:            Log.v("ConstraintLayoutStates", "NO Constraint set found ! id=" + i10 + ", dim =" + f10 + ", " + f11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/widget/C0453d.java
733:                                                    Log.e("ConstraintSet", "CURRENTLY UNSUPPORTED");
748:                                                    Log.w("ConstraintSet", "unused attribute 0x" + Integer.toHexString(index) + "   " + f2893k0.get(index));
754:                                                    Log.w("ConstraintSet", "Unknown attribute 0x" + Integer.toHexString(index) + "   " + f2893k0.get(index));
1468:                    Log.e("ConstraintSet", "CURRENTLY UNSUPPORTED");
1509:                    Log.w("ConstraintSet", "unused attribute 0x" + Integer.toHexString(index) + "   " + f2882f.get(index));
1512:                    Log.w("ConstraintSet", "Unknown attribute 0x" + Integer.toHexString(index) + "   " + f2882f.get(index));
1627:                Log.v("ConstraintSet", "id unknown " + C0413a.m2406c(childAt));
1665:                Log.w("ConstraintSet", "id unknown " + C0413a.m2406c(childAt));
1727:                        Log.v("ConstraintSet", "WARNING NO CONSTRAINTS for view " + id);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/widget/C0459j.java
136:                    Log.v("ConstraintLayoutStates", "Unknown tag");
218:                            Log.v("ConstraintLayoutStates", "unknown tag " + name);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/widget/ConstraintLayout.java
1564:                            Log.e("ConstraintLayout", "layout_constraintWidth_default=\"wrap\" is deprecated.\nUse layout_width=\"WRAP_CONTENT\" and layout_constrainedWidth=\"true\" instead.");
1573:                            Log.e("ConstraintLayout", "layout_constraintHeight_default=\"wrap\" is deprecated.\nUse layout_height=\"WRAP_CONTENT\" and layout_constrainedHeight=\"true\" instead.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/coordinatorlayout/widget/CoordinatorLayout.java
775:            Log.e("CoordinatorLayout", "No keylines defined for " + this + " - attempted index lookup " + i10);
781:        Log.e("CoordinatorLayout", "Keyline index " + i10 + " out of range for " + this);
1630:                    Log.e("CoordinatorLayout", "Attached behavior class is null");
1646:                        Log.e("CoordinatorLayout", "Default behavior class " + interfaceC0464d.value().getName() + " could not be instantiated. Did you forget a default constructor?", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/app/C0485g.java
109:                Log.e("ActivityRecreator", "Exception while invoking performStopActivity", th);
283:            Log.e("ActivityRecreator", "Exception while fetching field values", th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/app/C0501o.java
55:            Log.e("NavUtils", "getParentActivityIntent: bad parentActivityName '" + m3232c + "' in manifest");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/app/C0516v0.java
99:            Log.e("TaskStackBuilder", "Bad ComponentName while traversing activity parent metadata");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/content/res/C0537c.java
68:            Log.e("CSLCompat", "Failed to inflate ColorStateList.", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/content/res/C0538d.java
77:            Log.e("ComplexColorCompat", "Failed to inflate ComplexColor.", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/content/res/C0542h.java
179:                            Log.i("ResourcesCompat", "Failed to retrieve rebase() method", e10);
188:                            Log.i("ResourcesCompat", "Failed to invoke rebase() method via reflection", e11);
331:            Log.w("ResourcesCompat", "Failed to inflate ColorStateList, leaving it to the framework", e10);
402:            android.util.Log.e(r13, r0)     // Catch: java.io.IOException -> L8a org.xmlpull.v1.XmlPullParserException -> La0
443:            android.util.Log.e(r13, r1, r0)
453:            android.util.Log.e(r13, r1, r0)

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/graphics/C0563e.java
614:                Log.w("PathParser", " Points are coincident");
619:                Log.w("PathParser", "Points are too far apart " + d27);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/graphics/C0565g.java
94:            Log.e("TypefaceCompatApi21Impl", e10.getClass().getName(), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/graphics/C0566h.java
64:            Log.e("TypefaceCompatApi26Impl", "Unable to collect necessary methods for class " + e10.getClass().getName(), e10);
129:            Log.w("TypefaceCompatApi26Impl", "Unable to collect necessary private methods. Fallback to legacy implementation.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/graphics/C0583y.java
112:            Log.e("TypefaceCompatBaseImpl", "Could not retrieve font from family.", e10);
115:            Log.e("TypefaceCompatBaseImpl", "Could not retrieve font from family.", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/graphics/C0584z.java
104:            Log.e("TypefaceCompatUtil", "Error copying resource contents to temp file: " + e.getMessage());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/graphics/drawable/IconCompat.java
95:                Log.e("IconCompat", "Unable to get icon resource", e10);
98:                Log.e("IconCompat", "Unable to get icon resource", e11);
101:                Log.e("IconCompat", "Unable to get icon resource", e12);
114:                Log.e("IconCompat", "Unable to get icon package", e10);
117:                Log.e("IconCompat", "Unable to get icon package", e11);
120:                Log.e("IconCompat", "Unable to get icon package", e12);
133:                Log.e("IconCompat", "Unable to get icon type " + obj, e10);
136:                Log.e("IconCompat", "Unable to get icon type " + obj, e11);
139:                Log.e("IconCompat", "Unable to get icon type " + obj, e12);
152:                Log.e("IconCompat", "Unable to get icon uri", e10);
155:                Log.e("IconCompat", "Unable to get icon uri", e11);
158:                Log.e("IconCompat", "Unable to get icon uri", e12);
419:                Log.w("IconCompat", "Unable to load image from URI: " + m3575j, e10);
426:            Log.w("IconCompat", "Unable to load image from path: " + m3575j, e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/os/C0595k.java
55:                Log.i("TraceCompat", "Unable to initialize via reflection.", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/view/AbstractC0655b.java
94:            Log.w("ActionProvider(support)", "setVisibilityListener: Setting a new ActionProvider.VisibilityListener when one is already set. Are you reusing this " + getClass().getSimpleName() + " instance while it is still in use somewhere else?");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/view/C0701m1.java
60:            Log.e("ViewParentCompat", "ViewParent " + viewParent + " does not implement interface method onNestedFling", e10);
70:            Log.e("ViewParentCompat", "ViewParent " + viewParent + " does not implement interface method onNestedPreFling", e10);
85:                Log.e("ViewParentCompat", "ViewParent " + viewParent + " does not implement interface method onNestedPreScroll", e10);
106:                Log.e("ViewParentCompat", "ViewParent " + viewParent + " does not implement interface method onNestedScroll", e10);
121:                Log.e("ViewParentCompat", "ViewParent " + viewParent + " does not implement interface method onNestedScrollAccepted", e10);
137:            Log.e("ViewParentCompat", "ViewParent " + viewParent + " does not implement interface method onStartNestedScroll", e10);
152:                Log.e("ViewParentCompat", "ViewParent " + viewParent + " does not implement interface method onStopNestedScroll", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/view/C0704n0.java
1494:                    Log.e("ViewCompat", view.getParent().getClass().getSimpleName() + " does not fully implement ViewParent", e10);
1581:            Log.d("ViewCompat", "performReceiveContent: " + c0659c + ", view=" + view.getClass().getSimpleName() + "[" + view.getId() + "]");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/view/C0733u1.java
59:                Log.w("WindowInsetsCompat", "Failed to get visible insets from AttachInfo " + e10.getMessage(), e10);
82:                    Log.w("WindowInsetsCompat", "Failed to get insets from AttachInfo. " + e10.getMessage(), e10);
654:                    Log.i("WindowInsetsCompat", "Could not retrieve WindowInsets.CONSUMED field", e10);
666:                    Log.i("WindowInsetsCompat", "Could not get value from WindowInsets.CONSUMED field", e11);
673:                    Log.i("WindowInsetsCompat", "Could not retrieve WindowInsets(Rect) constructor", e12);
682:                    Log.i("WindowInsetsCompat", "Could not invoke WindowInsets(Rect) constructor", e13);
904:                        Log.w("WindowInsetsCompat", "Failed to get visible insets. getViewRootImpl() returned null from the provided view. This means that the view is either not attached or the method has been overridden", new NullPointerException());
913:                    Log.e("WindowInsetsCompat", "Failed to get visible insets. (Reflection error). " + e10.getMessage(), e10);
931:                Log.e("WindowInsetsCompat", "Failed to get visible insets. (Reflection error). " + e10.getMessage(), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/view/C0750z.java
92:        Log.w("MenuItemCompat", "setActionProvider: item does not implement SupportMenuItem; ignoring");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/view/accessibility/C0650p.java
284:                    Log.e("A11yActionCompat", "Failed to execute command with argument class ViewCommandArgument: " + (cls2 == null ? "null" : cls2.getName()), e);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/widget/C0772p.java
52:            Log.d("ReceiveContent", "onReceive: " + c0659c);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/widget/NestedScrollView.java
1146:                            Log.e("NestedScrollView", "Invalid pointerId=" + i11 + " in onInterceptTouchEvent");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/customview/widget/C0777d.java
500:        Log.e("ViewDragHelper", "Ignoring pointerId=" + i10 + " because ACTION_DOWN was not received for this pointer before ACTION_MOVE. It likely happened because  ViewDragHelper did not receive all the events in the event stream.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/databinding/MergedDataBinderMapper.java
36:                Log.e("MergedDataBinderMapper", "unable to add feature mapper for " + str, e10);
38:                Log.e("MergedDataBinderMapper", "unable to add feature mapper for " + str, e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/databinding/ViewDataBinding.java
771:            Log.w("DataBinding", "Setting the fragment as the LifecycleOwner might cause memory leaks because views lives shorter than the Fragment. Consider using Fragment's view lifecycle");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/fragment/app/AbstractC0901n0.java
140:                        Log.v("FragmentManager", "Clearing focus " + requireView.findFocus() + " on view " + requireView + " for Fragment " + m5450k);
152:                    Log.v("FragmentManager", "requestFocus: Saved focused view " + findFocus + " for Fragment " + m5450k2);
242:            Log.v("FragmentManager", "SpecialEffectsController: Enqueuing add operation for fragment " + c0883e0.m5450k());
250:            Log.v("FragmentManager", "SpecialEffectsController: Enqueuing hide operation for fragment " + c0883e0.m5450k());
258:            Log.v("FragmentManager", "SpecialEffectsController: Enqueuing remove operation for fragment " + c0883e0.m5450k());
266:            Log.v("FragmentManager", "SpecialEffectsController: Enqueuing show operation for fragment " + c0883e0.m5450k());
292:                        Log.v("FragmentManager", "SpecialEffectsController: Cancelling operation " + eVar);
304:                    Log.v("FragmentManager", "SpecialEffectsController: Executing pending operations");
313:                    Log.v("FragmentManager", "SpecialEffectsController: Finished executing pending operations");
324:            Log.v("FragmentManager", "SpecialEffectsController: Forcing all operations to complete");
347:                    Log.v("FragmentManager", sb2.toString());
365:                    Log.v("FragmentManager", sb3.toString());
376:                Log.v("FragmentManager", "SpecialEffectsController: Forcing postponed operations");
500:                Log.v("FragmentManager", "SpecialEffectsController: " + this + " has called complete.");
553:                        Log.v("FragmentManager", "SpecialEffectsController: For fragment " + this.f4744c + " mFinalState = REMOVED -> VISIBLE. mLifecycleImpact = " + this.f4743b + " to ADDING.");
563:                    Log.v("FragmentManager", "SpecialEffectsController: For fragment " + this.f4744c + " mFinalState = " + this.f4742a + " -> REMOVED. mLifecycleImpact  = " + this.f4743b + " to REMOVING.");
571:                    Log.v("FragmentManager", "SpecialEffectsController: For fragment " + this.f4744c + " mFinalState = " + this.f4742a + " -> " + cVar + ". ");
602:                            Log.v("FragmentManager", "SpecialEffectsController: Removing view " + view + " from container " + viewGroup);
611:                        Log.v("FragmentManager", "SpecialEffectsController: Setting view " + view + " to VISIBLE");
618:                        Log.v("FragmentManager", "SpecialEffectsController: Setting view " + view + " to GONE");
627:                    Log.v("FragmentManager", "SpecialEffectsController: Setting view " + view + " to INVISIBLE");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/fragment/app/C0874a.java
255:            Log.v("FragmentManager", "Run: " + this);
360:                Log.v("FragmentManager", "Bump nesting in " + this + " by " + i10);
369:                        Log.v("FragmentManager", "Bump nesting of " + aVar.f4678b + " to " + aVar.f4678b.mBackStackNesting);
409:            Log.v("FragmentManager", "Commit: " + this);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/fragment/app/C0875a0.java
90:            Log.d("FragmentManager", "onCleared called for " + this);
103:                Log.v("FragmentManager", "Ignoring addRetainedFragment as the state is already saved");
111:                Log.v("FragmentManager", "Updating retained Fragments: Added " + fragment);
119:            Log.d("FragmentManager", "Clearing non-config state for " + fragment);
127:            Log.d("FragmentManager", "Clearing non-config state for saved state of Fragment " + str);
173:                Log.v("FragmentManager", "Ignoring removeRetainedFragment as the state is already saved");
179:            Log.v("FragmentManager", "Updating retained Fragments: Removed " + fragment);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/fragment/app/C0876b.java
147:                Log.v("FragmentManager", "Instantiate " + c0874a + " op #" + i11 + " base fragment #" + this.f4550p[i12]);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/fragment/app/C0880d.java
116:                Log.v("FragmentManager", "Animator from operation " + this.f4570d + " has ended.");
139:                Log.v("FragmentManager", "Animator from operation " + this.f4574b + " has been canceled.");
183:                Log.v("FragmentManager", "Animation from operation " + this.f4576a + " has ended.");
194:                Log.v("FragmentManager", "Animation from operation " + this.f4576a + " has reached onAnimationStart.");
227:                Log.v("FragmentManager", "Animation from operation " + this.f4585d + " has been cancelled.");
318:                Log.v("FragmentManager", "Transition for operation " + this.f4599q + "has completed");
506:                                Log.v("FragmentManager", "Ignoring Animator set on " + m5598f + " as this Fragment was involved in a Transition.");
525:                                Log.v("FragmentManager", sb2.toString());
543:                    Log.v("FragmentManager", "Ignoring Animation set on " + m5598f2 + " as Animations cannot run alongside Transitions.");
548:                    Log.v("FragmentManager", "Ignoring Animation set on " + m5598f2 + " as Animations cannot run alongside Animators.");
571:                        Log.v("FragmentManager", "Animation from operation " + m5409b2 + " has started.");
696:                    Log.v("FragmentManager", ">>> entering view names <<<");
698:                        Log.v("FragmentManager", "Name: " + it2.next());
700:                    Log.v("FragmentManager", ">>> exiting view names <<<");
702:                        Log.v("FragmentManager", "Name: " + it3.next());
710:                        Log.v("FragmentManager", "Executing exit callback for operation " + eVar6);
740:                        Log.v("FragmentManager", "Executing enter callback for operation " + eVar7);
944:                        Log.v(str2, "SpecialEffectsController: Container " + m5589m() + " has not been laid out. Completing operation " + m5409b2);
960:            Log.v(str7, ">>>>> Beginning transition <<<<<");
961:            Log.v(str7, ">>>>> SharedElementFirstOutViews <<<<<");
965:                Log.v(str7, "View: " + next2 + " Name: " + C0704n0.m4138J(next2));
967:            Log.v(str7, ">>>>> SharedElementLastInViews <<<<<");
971:                Log.v(str7, "View: " + next3 + " Name: " + C0704n0.m4138J(next3));
998:            Log.v("FragmentManager", "Executing operations from " + eVar + " to " + eVar2);
1036:            Log.v("FragmentManager", "Completed executing operations from " + eVar + " to " + eVar2);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/fragment/app/C0883e0.java
143:            Log.d("FragmentManager", "moveto ACTIVITY_CREATED: " + this.f4646c);
162:            Log.d("FragmentManager", "moveto ATTACHED: " + this.f4646c);
238:            Log.v("FragmentManager", "computeExpectedState() of " + i10 + " for " + this.f4646c);
246:            Log.d("FragmentManager", "moveto CREATED: " + this.f4646c);
269:            Log.d("FragmentManager", "moveto CREATE_VIEW: " + this.f4646c);
332:                        Log.v("FragmentManager", "requestFocus: Saved focused view " + findFocus + " for Fragment " + this.f4646c);
345:            Log.d("FragmentManager", "movefrom CREATED: " + this.f4646c);
396:            Log.d("FragmentManager", "movefrom CREATE_VIEW: " + this.f4646c);
416:            Log.d("FragmentManager", "movefrom ATTACHED: " + this.f4646c);
431:                Log.d("FragmentManager", "initState called for fragment: " + this.f4646c);
442:                Log.d("FragmentManager", "moveto CREATE_VIEW: " + this.f4646c);
476:                Log.v("FragmentManager", "Ignoring re-entrant call to moveToExpectedState() for " + m5450k());
491:                            Log.d("FragmentManager", "Cleaning up state of never attached fragment: " + this.f4646c);
496:                            Log.d("FragmentManager", "initState called for fragment: " + this.f4646c);
543:                                Log.d("FragmentManager", "movefrom ACTIVITY_CREATED: " + this.f4646c);
609:            Log.d("FragmentManager", "movefrom RESUMED: " + this.f4646c);
650:            Log.d("FragmentManager", "moveto RESUMED: " + this.f4646c);
665:                Log.v("FragmentManager", sb2.toString());
715:            Log.v("FragmentManager", "Saving view state for fragment " + this.f4646c + " with view " + this.f4646c.mView);
738:            Log.d("FragmentManager", "moveto STARTED: " + this.f4646c);
747:            Log.d("FragmentManager", "movefrom STARTED: " + this.f4646c);
759:            Log.v("FragmentManager", "Instantiated fragment " + m5418b);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/fragment/app/C0885f0.java
267:            Log.v("FragmentManager", "Added fragment to active set " + m5450k);
278:            Log.v("FragmentManager", "Removed fragment from active set " + m5450k);
328:                    Log.v("FragmentManager", "restoreSaveState: added (" + str + "): " + m5468f);
354:                    Log.v("FragmentManager", "Saved state of " + m5450k + ": " + m5450k.mSavedFragmentState);
373:                    Log.v("FragmentManager", "saveAllState: adding fragment (" + next.mWho + "): " + next);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/fragment/app/C0899m0.java
23:            Log.d(this.f4727p, this.f4728q.toString());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/fragment/app/DialogInterfaceOnCancelListenerC0882e.java
136:                    Log.d("FragmentManager", "DialogFragment " + this + " setting the content view on " + DialogInterfaceOnCancelListenerC0882e.this.f4622A);
269:            Log.d("FragmentManager", "onCreateDialog called for DialogFragment " + this);
314:            Log.d("FragmentManager", "Setting style and theme for DialogFragment " + this + " to " + i10 + ", " + i11);
419:            Log.d("FragmentManager", "onDismiss called for DialogFragment " + this);
430:                Log.d("FragmentManager", "get layout inflater for DialogFragment " + this + " from dialog context");
438:                Log.d("FragmentManager", "mCreatingDialog = true: " + str);
440:                Log.d("FragmentManager", "mShowsDialog = false: " + str);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/fragment/app/Fragment.java
714:            Log.d("FragmentManager", "Could not find Application instance from Context " + requireContext().getApplicationContext() + ", you will not be able to use AndroidViewModel with the default ViewModelProvider.Factory");
748:                Log.d("FragmentManager", "Could not find Application instance from Context " + requireContext().getApplicationContext() + ", you will need CreationExtras to use AndroidViewModel with the default ViewModelProvider.Factory");
1108:            Log.v("FragmentManager", "Fragment " + this + " received the following in onActivityResult(): requestCode: " + i10 + " resultCode: " + i11 + " data: " + intent);
1854:            Log.v("FragmentManager", "Fragment " + this + " received the following in startIntentSenderForResult() requestCode: " + i10 + " IntentSender: " + intentSender + " fillInIntent: " + intent + " options: " + bundle);
2045:            Log.d("FragmentManager", "moveto RESTORE_VIEW_STATE: " + this);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/fragment/app/FragmentManager.java
244:                Log.w("FragmentManager", "No permissions were requested for " + this);
254:            Log.w("FragmentManager", "Permission request result delivered for unknown Fragment " + str);
363:                Log.w("FragmentManager", "No Activities were started for result for " + this);
373:            Log.w("FragmentManager", "Activity result delivered for unknown Fragment " + str);
387:                Log.w("FragmentManager", "No IntentSenders were started for " + this);
397:            Log.w("FragmentManager", "Intent Sender result delivered for unknown Fragment " + str);
421:                Log.v("FragmentManager", "CreateIntent created the following intent: " + intent);
634:        Log.e("FragmentManager", runtimeException.getMessage());
635:        Log.e("FragmentManager", "Activity state:");
643:                Log.e("FragmentManager", "Failed dumping state", e10);
651:            Log.e("FragmentManager", "Failed dumping state", e11);
1139:            Log.v("FragmentManager", "Setting fragment result with key " + str + " and result " + bundle);
1186:            Log.v("FragmentManager", "Setting FragmentResultListener with key " + str + " lifecycleOwner " + lifecycle + " and listener " + interfaceC0879c0);
1325:            Log.v("FragmentManager", "show: " + fragment);
1374:            Log.v("FragmentManager", "hide: " + fragment);
1658:                Log.v("FragmentManager", "ActivityOptions " + bundle + " were added to fillInIntent " + intent2 + " for fragment " + fragment);
1667:            Log.v("FragmentManager", "Fragment " + fragment + "is launching an IntentSender for result ");
1842:            Log.v("FragmentManager", "add: " + fragment);
1914:            Log.v("FragmentManager", "remove: " + fragment + " nesting=" + fragment.mBackStackNesting);
2020:            Log.v("FragmentManager", "attach: " + fragment);
2029:                Log.v("FragmentManager", "add from attach: " + fragment);
2152:                        Log.v("FragmentManager", "restoreSaveState: re-attaching retained " + m5383n);
2161:                    Log.v("FragmentManager", "restoreSaveState: active (" + m5450k.mWho + "): " + m5450k);
2171:                    Log.v("FragmentManager", "Discarding retained Fragment " + fragment + " that was not found in the set of active Fragments " + c0915z.f4775p);
2193:                    Log.v("FragmentManager", "restoreAllState: back stack #" + i10 + " (index " + m5393e.f4537v + "): " + m5393e);
2263:            Log.v("FragmentManager", "Clearing fragment result with key " + str);
2290:                        Log.v("FragmentManager", "saveAllState: adding back stack #" + i10 + ": " + this.f4485d.get(i10));
2318:            Log.v("FragmentManager", "saveAllState: no fragments!");
2460:            Log.v("FragmentManager", "detach: " + fragment);
2468:                Log.v("FragmentManager", "remove from detach: " + fragment);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/fragment/app/LayoutInflaterFactory2C0907r.java
95:                Log.v("FragmentManager", "Fragment " + m5289i0 + " has been inflated via the <fragment> tag: id=0x" + Integer.toHexString(resourceId));
108:                Log.v("FragmentManager", "Retained Fragment " + m5289i0 + " has been re-attached via the <fragment> tag: id=0x" + Integer.toHexString(resourceId));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/loader/app/C0971b.java
66:                Log.v("LoaderManager", "onLoadComplete: " + this);
73:                Log.w("LoaderManager", "onLoadComplete was incorrectly called on a background thread");
82:                Log.v("LoaderManager", "  Starting: " + this);
91:                Log.v("LoaderManager", "  Stopping: " + this);
119:                Log.v("LoaderManager", "  Destroying: " + this);
226:                Log.v("LoaderManager", "  onLoadFinished in " + this.f4941a + ": " + this.f4941a.m5827d(d10));
248:                    Log.v("LoaderManager", "  Resetting: " + this.f4941a);
372:                Log.v("LoaderManager", "  Created new loader " + aVar2);
401:            Log.v("LoaderManager", "initLoader in " + this + ": args=" + bundle);
407:            Log.v("LoaderManager", "  Re-using existing loader " + m5805m);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/loader/content/AbstractC0974c.java
101:                Log.w("AsyncTask", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/media/AudioAttributesImplBase.java
80:                    Log.e("AudioAttributesCompat", "Invalid stream type " + i10 + " for AudioAttributesCompat");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/mediarouter/app/DialogC0997a.java
161:                    Log.w("MediaRouteChooserDialog", "Failed to load " + m6458j, e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/mediarouter/app/DialogC0999c.java
369:                Log.e("MediaRouteCtrlDialog", m747d + " was not sent, it had been canceled.");
550:                Log.w("MediaRouteCtrlDialog", "Can't fetch the given art bitmap because it's already recycled.");
689:                Log.d("MediaRouteCtrlDialog", "onRouteVolumeChanged(), route.getVolume:" + m6467s);
729:                    Log.d("MediaRouteCtrlDialog", "onProgressChanged(): calling MediaRouter.RouteInfo.requestSetVolume(" + i10 + ")");
1066:                    Log.w("MediaRouteCtrlDialog", "Can't set artwork image with recycled bitmap: " + this.f5142p0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/mediarouter/app/DialogC1003g.java
186:                    Log.w("RecyclerAdapter", "Wrong type of data passed to Item constructor");
283:                    Log.w("RecyclerAdapter", "Failed to load " + m6458j, e10);
325:                Log.w("RecyclerAdapter", "Cannot bind item to ViewHolder because of wrong view type");
340:            Log.w("RecyclerAdapter", "Cannot create ViewHolder because of wrong view type");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/mediarouter/app/DialogC1004h.java
259:                Log.w("MediaRouteCtrlDialog", "Can't fetch the given art bitmap because it's already recycled.");
510:                Log.d("MediaRouteCtrlDialog", "onRouteVolumeChanged(), route.getVolume:" + m6467s);
948:                    Log.w("MediaRouteCtrlDialog", "Failed to load " + m6458j, e10);
1078:                    Log.w("MediaRouteCtrlDialog", "Cannot bind item to ViewHolder because of wrong view type");
1100:            Log.w("MediaRouteCtrlDialog", "Cannot create ViewHolder because of wrong view type");
1358:                Log.w("MediaRouteCtrlDialog", "Can't set artwork image with recycled bitmap: " + this.f5263d0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/mediarouter/app/MediaRouteActionProvider.java
108:            Log.e("MRActionProvider", "onCreateActionView: this ActionProvider is already associated with a menu item. Don't reuse MediaRouteActionProvider instances! Abandoning the old menu item...");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/mediarouter/app/MediaRouteButton.java
308:                Log.w("MediaRouteButton", "showDialog(): Route chooser dialog already showing!");
321:                Log.w("MediaRouteButton", "showDialog(): Route controller dialog already showing!");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/mediarouter/app/MediaRouteVolumeSlider.java
45:                Log.e("MediaRouteVolumeSlider", "Volume slider progress and thumb color cannot be translucent: #" + Integer.toHexString(i10));
51:                Log.e("MediaRouteVolumeSlider", "Volume slider background color cannot be translucent: #" + Integer.toHexString(i11));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/mediarouter/media/C1032j0.java
619:                    Log.d("MediaRouter", "A RouteController unrelated to the selected route is released. controller=" + eVar);
648:                Log.w("MediaRouter", "onSelectRoute: The target RouteInfo is not found for descriptorId=" + str);
780:                    Log.d("MediaRouter", "Updated MediaRoute2Provider's discovery request: " + this.f5520z);
793:                    Log.w("MediaRouter", "Ignoring invalid provider descriptor: " + c1025g0);
802:                            Log.w("MediaRouter", "Ignoring invalid system route descriptor: " + c1016d0);
816:                                        Log.d("MediaRouter", "Route added: " + hVar);
822:                                Log.w("MediaRouter", "Ignoring route descriptor with duplicate id: " + c1016d0);
840:                            Log.d("MediaRouter", "Route added: " + hVar3);
860:                        Log.d("MediaRouter", "Route removed: " + remove);
865:                    Log.d("MediaRouter", "Provider changed: " + gVar);
972:                    Log.w("MediaRouter", "Ignoring attempt to remove the last member route.");
979:            Log.w("MediaRouter", "Ignoring attempt to remove a non-unselectable member route : " + hVar);
1021:                Log.w("MediaRouter", "Ignoring attempt to select removed route: " + hVar);
1025:                Log.w("MediaRouter", "Ignoring attempt to select disabled route: " + hVar);
1054:                    Log.w("MediaRouter", "setSelectedRouteInternal is called while sGlobal is null: pkgName=" + this.f5495a.getPackageName() + ", callers=" + sb2.toString());
1056:                    Log.w("MediaRouter", "Default route is selected while a BT route is available: pkgName=" + this.f5495a.getPackageName() + ", callers=" + sb2.toString());
1080:                Log.w("MediaRouter", "setSelectedRouteInternal: Failed to create dynamic group route controller. route=" + hVar);
1087:                Log.d("MediaRouter", "Route selected: " + hVar);
1138:                Log.w("MediaRouter", "Ignoring attempt to transfer to a non-transferable route.");
1196:                Log.d("MediaRouter", "Updated discovery request: " + this.f5519y);
1199:                Log.i("MediaRouter", "Forcing passive route discovery on a low-RAM device, system performance may be affected.  Please consider using CALLBACK_FLAG_REQUEST_DISCOVERY instead of CALLBACK_FLAG_FORCE_DISCOVERY.");
1260:                        Log.d("MediaRouter", "Route changed: " + hVar);
1266:                        Log.d("MediaRouter", "Route volume changed: " + hVar);
1272:                        Log.d("MediaRouter", "Route presentation display changed: " + hVar);
1284:                Log.i("MediaRouter", "Clearing the default route because it is no longer selectable: " + this.f5512r);
1296:                        Log.i("MediaRouter", "Found default route: " + this.f5512r);
1303:                Log.i("MediaRouter", "Clearing the bluetooth route because it is no longer selectable: " + this.f5513s);
1315:                        Log.i("MediaRouter", "Found bluetooth route: " + this.f5513s);
1329:            Log.i("MediaRouter", "Unselecting the current route because it is no longer selectable: " + this.f5514t);
1360:                    Log.d("MediaRouter", "Provider added: " + gVar);
1378:                    Log.d("MediaRouter", "Provider removed: " + m6369j);
1395:            Log.w("MediaRouter", "Ignoring attempt to add a non-groupable route to dynamic group : " + hVar);
1413:            Log.w("MediaRouter", "Either " + str + " isn't unique in " + flattenToShortString + " or we're trying to assign a unique ID for an already added route");
1719:                Log.w("MediaRouter", "Router is released. Cancel transfer");
2427:            Log.d("MediaRouter", "addCallback: selector=" + c1030i0 + ", callback=" + aVar + ", flags=" + Integer.toHexString(i10));
2531:            Log.d("MediaRouter", "removeCallback: callback=" + aVar);
2556:            Log.d("MediaRouter", "selectRoute: " + hVar);
2565:            Log.d("MediaRouter", "setMediaSessionCompat: " + mediaSessionCompat);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/mediarouter/media/C1055v.java
150:                    Log.w("MR2Provider", "Pending callback not found for control request.");
228:                Log.w("MR2Provider", "onAddMemberRoute: Ignoring null or empty routeId.");
236:            Log.w("MR2Provider", "onAddMemberRoute: Specified route not found. routeId=" + str);
243:                Log.w("MR2Provider", "onRemoveMemberRoute: Ignoring null or empty routeId.");
251:            Log.w("MR2Provider", "onRemoveMemberRoute: Specified route not found. routeId=" + str);
258:                Log.w("MR2Provider", "onUpdateMemberRoutes: Ignoring null or empty routeIds.");
267:            Log.w("MR2Provider", "onUpdateMemberRoutes: Specified route not found. routeId=" + str);
308:                    Log.e("MR2Provider", "Could not send control request to service.", e10);
335:                    Log.e("MR2Provider", "Could not send control request to service.", e10);
411:            Log.w("MR2Provider", "onStop: No matching routeController found. routingController=" + routingController);
427:                Log.w("MR2Provider", "Selected routes are empty. This shouldn't happen.");
438:            Log.w("MR2Provider", "Transfer failed. requestedRoute=" + mediaRoute2Info);
555:                Log.w("MR2Provider", "Cannot find the original route Id. route=" + mediaRoute2Info2);
584:            Log.w("MR2Provider", "setDynamicRouteDescriptors: No matching routeController found. routingController=" + routingController);
589:            Log.w("MR2Provider", "setDynamicRouteDescriptors: No selected routes. This may happen when the selected routes become invalid.routingController=" + routingController);
608:                Log.w("MR2Provider", "Exception while unparceling control hints.", e10);
627:            Log.w("MR2Provider", "setDynamicRouteDescriptors: providerDescriptor is not set.");
649:        Log.w("MR2Provider", "transferTo: Specified route not found. routeId=" + str);
680:        Log.w("MR2Provider", "Could not find the matching GroupRouteController. routeId=" + str + ", routeGroupId=" + str2);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/mediarouter/media/C1060x0.java
283:            Log.w("MediaRouterJellybean", "Failed to remove user route", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/mediarouter/media/C1062y0.java
40:                Log.w("MediaRouterJellybeanMr1", "Cannot get presentation display for the route.", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/mediarouter/media/ServiceConnectionC1014c1.java
131:                Log.e("MediaRouteProviderProxy", "Could not send message to service.", e10);
441:                    Log.w("MediaRouteProviderProxy", "No further information on the dynamic group controller");
467:            Log.d("MediaRouteProviderProxy", "Unhandled message from server: " + message);
506:                Log.d("MediaRouteProviderProxy", "Error: " + str + ", data: " + bundle);
797:            Log.d("MediaRouteProviderProxy", this + ": Binding");
807:            Log.d("MediaRouteProviderProxy", this + ": Bind failed");
810:                Log.d("MediaRouteProviderProxy", this + ": Bind failed", e10);
902:                Log.d("MediaRouteProviderProxy", this + ": Unbinding");
909:                Log.e("MediaRouteProviderProxy", this + ": unbindService failed", e10);
953:                Log.d("MediaRouteProviderProxy", this + ": Descriptor changed, descriptor=" + c1025g0);
963:                Log.d("MediaRouteProviderProxy", this + ": Service connection died");
973:                Log.d("MediaRouteProviderProxy", this + ": Service connection error - " + str);
1002:                Log.d("MediaRouteProviderProxy", this + ": DynamicRouteDescriptors changed, descriptors=" + list);
1030:            Log.d("MediaRouteProviderProxy", this + ": Starting");
1040:                Log.d("MediaRouteProviderProxy", this + ": Stopping");
1051:            Log.d("MediaRouteProviderProxy", this + ": Connected");
1057:                Log.e("MediaRouteProviderProxy", this + ": Service returned invalid messenger binder");
1064:                Log.d("MediaRouteProviderProxy", this + ": Registration failed");
1072:            Log.d("MediaRouteProviderProxy", this + ": Service disconnected");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/preference/ListPreference.java
157:        Log.w("ListPreference", "Setting a summary with a String formatting marker is no longer supported. You should use a SummaryProvider instead.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/preference/PreferenceGroup.java
88:            Log.e("PreferenceGroup", getClass().getSimpleName() + " should have a key defined if it contains an expandable preference");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/preference/SeekBarPreference.java
105:            Log.e("SeekBarPreference", "SeekBar view is null and hence cannot be adjusted.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/recyclerview/widget/C1167i.java
34:            Log.w("DividerItem", "@android:attr/listDivider was not set in the theme used for this DividerItemDecoration. Please set that attribute all call setDrawable()");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/recyclerview/widget/GridLayoutManager.java
393:        Log.w("GridLayoutManager", "Cannot find span size for pre layout position. " + i10);
410:        Log.w("GridLayoutManager", "Cannot find span size for pre layout position. It is not cached, not in the adapter. Pos:" + i10);
427:        Log.w("GridLayoutManager", "Cannot find span size for pre layout position. It is not cached, not in the adapter. Pos:" + i10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/recyclerview/widget/RecyclerView.java
438:                        Log.e("RecyclerView", "Smooth Scroll action is being updated too frequently. Make sure you are not changing it unless necessary");
476:            Log.w("RecyclerView", "You should override computeScrollVectorForPosition when the LayoutManager does not implement " + b.class.getCanonicalName());
545:                    Log.e("RecyclerView", "Passed over target position while smooth scrolling.");
588:                Log.w("RecyclerView", "An instance of " + getClass().getSimpleName() + " was started more than once. Each instance of" + getClass().getSimpleName() + " is intended to only be used once. You should create a new instance for each use.");
1268:                Log.e("View", "isRecyclable decremented below 0: unmatched pair of setIsRecyable() calls for " + this);
2707:            Log.e("RecyclerView", "You must override smoothScrollToPosition to support smooth scrolling");
2903:            Log.e("RecyclerView", "You must override onLayoutChildren(Recycler recycler, State state) ");
4300:            Log.e("RecyclerView", "Cannot scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");
4944:        Log.e("RecyclerView", "Problem while matching changed view holders with the newones. The pre-layout information for the change holder " + abstractC1131e02 + " cannot be found but it is necessary for " + abstractC1131e0 + m7267Q());
5156:            Log.w("RecyclerView", "No adapter attached; skipping layout");
5160:            Log.e("RecyclerView", "No layout manager attached; skipping layout");
5684:            Log.e("RecyclerView", "Cannot fling without a LayoutManager set. Call setLayoutManager with a non-null argument.");
6249:            Log.e("RecyclerView", "Cannot scroll to position a LayoutManager set. Call setLayoutManager with a non-null argument.");
6589:                Log.e("RecyclerView", "Error processing scroll; pointer index for id " + this.f6143h0 + " not found. Did any MotionEvents get skipped?");
6776:            Log.w("RecyclerView", "Cannot call this method in a scroll callback. Scroll callbacks mightbe run during a measure & layout pass where you cannot change theRecyclerView data. Any method call that might change the structureof the RecyclerView or the adapter contents should be postponed tothe next frame.", new IllegalStateException(HttpUrl.FRAGMENT_ENCODE_SET + m7267Q()));
6800:            Log.e("RecyclerView", "Cannot smooth scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");
6836:            Log.e("RecyclerView", "Cannot smooth scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");
6912:            Log.e("RecyclerView", "Cannot scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");
6933:        Log.w("RecyclerView", "RecyclerView does not support scrolling to an absolute position. Use scrollToPosition instead");
7096:            Log.w("RecyclerView", "setScrollingTouchSlop(): bad argument constant " + i10 + "; using default value");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/transition/C1212m0.java
42:            Log.i("ViewUtilsBase", "Failed to retrieve setFrame method", e10);
100:                Log.i("ViewUtilsBase", "fetchViewFlagsField: ");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/viewpager/widget/C1238b.java
1177:            android.util.Log.e(r4, r0)
1916:            Log.w("ViewPager", "Requested offscreen page limit " + i10 + " too small; defaulting to 1");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/airbnb/lottie/LottieAnimationView.java
537:            Log.v(f9394G, "Set Composition \n" + c1516h);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/airbnb/lottie/utils/C1597c.java
23:        Log.w("LOTTIE", str, th);
36:            Log.d("LOTTIE", str, th);
48:            Log.d("LOTTIE", str, th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/cognito/clientcontext/data/UserContextDataProvider.java
66:            Log.e(TAG, "Exception in creating JSON from context data");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/cognito/clientcontext/datacollection/ApplicationDataCollector.java
27:            Log.i(TAG, "Unable to get app version. Provided package name could not be found.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/cognito/clientcontext/util/SignatureGenerator.java
17:        Log.w(TAG, "Exception while completing context data signature", exc);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/internal/keyvaluestore/AWSKeyValueStore.java
157:            log.info("Deleting the encryption key identified by the keyAlias: " + str);
282:                log.info("Detected Android API Level = " + Build.VERSION.SDK_INT);
283:                log.info("Creating the AWSKeyValueStore with key for sharedPreferencesForData = " + this.sharedPreferencesName);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/logging/AndroidLog.java
22:            android.util.Log.d(this.tag, obj.toString());
29:            android.util.Log.e(this.tag, obj.toString());
36:            android.util.Log.i(this.tag, obj.toString());
73:            android.util.Log.v(this.tag, obj.toString());
80:            android.util.Log.w(this.tag, obj.toString());
87:            android.util.Log.d(this.tag, obj.toString(), th);
94:            android.util.Log.e(this.tag, obj.toString(), th);
101:            android.util.Log.i(this.tag, obj.toString(), th);
108:            android.util.Log.v(this.tag, obj.toString(), th);
115:            android.util.Log.w(this.tag, obj.toString(), th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/logging/ApacheCommonsLogging.java
40:            this.log.info(obj);
105:            this.log.info(obj, th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/logging/ConsoleLog.java
20:        System.out.printf("%s/%s: %s\n", this.tag, level.name(), obj);
22:            System.out.println(th.toString());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobile/auth/core/DefaultSignInResultHandler.java
12:        Log.d(LOG_TAG, String.format("%s Sign-In flow is canceled", identityProvider.getDisplayName()));
17:        Log.e(LOG_TAG, String.format(activity.getString(C1629R.string.sign_in_failure_message_format), identityProvider.getDisplayName(), exc.getMessage()), exc);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobile/auth/core/IdentityManager.java
75:                    Log.d(IdentityManager.LOG_TAG, "Got Amazon Cognito Federated Identity ID: " + identityId);
78:                    Log.e(IdentityManager.LOG_TAG, e10.getMessage(), e10);
79:                    Log.d(IdentityManager.LOG_TAG, "Got Amazon Cognito Federated Identity ID: " + ((String) null));
113:                Log.d(IdentityManager.LOG_TAG, "Got Amazon Cognito Federated Identity ID: " + ((String) null));
147:            Log.d(IdentityManager.LOG_TAG, "Looking for a previously signed-in session.");
151:                Log.d(IdentityManager.LOG_TAG, "Refreshing credentials with sign-in provider " + previouslySignedInProvider.getDisplayName());
161:                            Log.e(IdentityManager.LOG_TAG, String.format("Federate with Cognito with %s Sign-in provider failed. Error: %s", identityProvider.getDisplayName(), exc.getMessage()), exc);
163:                            Log.e(IdentityManager.LOG_TAG, String.format("Federate with Cognito failed. Error: %s", exc.getMessage()), exc);
176:                        Log.d(IdentityManager.LOG_TAG, "Successfully got AWS Credentials.");
195:                    Log.i(IdentityManager.LOG_TAG, "Interrupted while waiting for resume session timeout.");
245:                Log.d(this.LOG_TAG, "Storing the Refresh token in the loginsMap.");
262:            Log.d(IdentityManager.LOG_TAG, "SignInProviderResultAdapter.onCognitoError()", exc);
270:            Log.d(IdentityManager.LOG_TAG, "SignInProviderResultAdapter.onCognitoSuccess()");
276:            Log.d(IdentityManager.LOG_TAG, String.format("SignInProviderResultAdapter.onCancel(): %s provider sign-in canceled.", identityProvider.getDisplayName()));
282:            Log.e(IdentityManager.LOG_TAG, String.format("SignInProviderResultAdapter.onError(): %s provider error. %s", identityProvider.getDisplayName(), exc.getMessage()), exc);
288:            Log.d(IdentityManager.LOG_TAG, String.format("SignInProviderResultAdapter.onSuccess(): %s provider sign-in succeeded.", identityProvider.getDisplayName()));
317:        Log.d(LOG_TAG, "Creating the Cognito Caching Credentials Provider with a refreshing Cognito Identity Provider.");
354:            Log.d(LOG_TAG, "refresh credentials");
368:                    Log.d(IdentityManager.LOG_TAG, "Interrupted while waiting for startup auth minimum delay.");
395:            Log.d(LOG_TAG, "Credentials are EXPIRED.");
403:        Log.d(str, sb2.toString());
421:        Log.d(LOG_TAG, "federate with provider: Populate loginsMap with token.");
494:            Log.e(LOG_TAG, "Error in instantiating SignInManager. Check the context and completion handler.", e10);
505:        Log.d(LOG_TAG, "Resume Session called.");
531:        Log.d(LOG_TAG, "Signing out...");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobile/auth/core/signin/SignInManager.java
84:                Log.e(LOG_TAG, "Unable to instantiate " + cls.getSimpleName() + " . Skipping this provider.");
86:                Log.e(LOG_TAG, "Unable to instantiate " + cls.getSimpleName() + " . Skipping this provider.");
115:        Log.d(LOG_TAG, "Providers: " + Collections.singletonList(this.signInProviders));
118:                Log.d(LOG_TAG, "Refreshing provider: " + signInProvider.getDisplayName());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobile/client/AWSMobileClient.java
198:                            Log.d(AWSMobileClient.TAG, "onUserSignedIn: Updating user state from drop-in UI");
205:                                    Log.w(AWSMobileClient.TAG, "onError: User sign-in had errors from drop-in UI", exc);
213:                                    Log.d(AWSMobileClient.TAG, "onResult: showSignIn federated");
223:                            Log.d(AWSMobileClient.TAG, "onUserSignedOut: Updating user state from drop-in UI");
291:                                Log.d(AWSMobileClient.TAG, "initialize: OAuth2 client detected");
346:                Log.i(AWSMobileClient.TAG, "onResult: OAuth2 callback occurred, exchanging code for token");
526:                            Log.d(AWSMobileClient.TAG, "onFailure: Ignoring failure because HostedUI has signaled success at least once.");
539:                        Log.d(AWSMobileClient.TAG, "onSignout: HostedUI signed-out");
544:                        Log.d(AWSMobileClient.TAG, "onSuccess: HostedUI signed-in");
551:                                    Log.e(AWSMobileClient.TAG, "onError: Federation from the Hosted UI failed", exc);
556:                                    Log.d(AWSMobileClient.TAG, "onResult: Federation from the Hosted UI succeeded");
844:            Log.d(TAG, String.format("_federatedSignIn: Putting provider and token in store", new Object[0]));
988:                            Log.w(AWSMobileClient.TAG, "signalTokensNotAvailable");
1055:        Log.d(TAG, "initialize: Cognito HostedUI client detected");
1143:                        Log.d(AWSMobileClient.TAG, "run: showSignIn completed");
1182:                            Log.d(AWSMobileClient.TAG, "Sending password.");
1200:                                    Log.d(AWSMobileClient.TAG, "Using USER_SRP_AUTH for flow type.");
1210:                                Log.w(AWSMobileClient.TAG, "Exception while attempting to read authenticationFlowType from config.", e10);
1257:                                Log.w(AWSMobileClient.TAG, "Failed to federate tokens during sign-in", e11);
1422:            Log.d(TAG, "Fetching the Cognito Identity.");
1431:            Log.e(TAG, "Error occurred in fetching the Cognito Identity and resuming the auth session", e10);
1451:        Log.d(TAG, "hasFederatedToken: " + equals + " provider: " + str);
1466:            Log.e(TAG, "Error in initializing the AWSMobileClient. Check if AWS Cloud Config `awsconfiguration.json` is present in the application.");
1507:        Log.d(TAG, "Using the SignInProviderConfig from `awsconfiguration.json`.");
1524:        Log.d(TAG, "Using the SignInProviderConfig supplied by the user.");
1652:        Log.d(str, "Retrieving the client instance for class: " + cls);
1660:            Log.d(str, "Created the new client: " + aWSConfigurable.toString());
1663:            Log.e(TAG, "Error occurred in creating and initializing client. Check the context and the clientClass passed in: " + cls, e10);
1682:                Log.d(TAG, "getCredentials: Validated user is signed-in");
1688:            Log.w(TAG, "getCredentials: Failed to getCredentials from Cognito Identity", e10);
1767:        Log.d(str3, "Inspecting user state details");
1778:                        Log.i(str3, "Token was refreshed using drop-in UI internal mechanism");
1781:                        Log.i(str3, "Token used for federation has become null");
1785:                        Log.d(str3, "getUserStateDetails: token already federated just fetch credentials");
1794:                    Log.w(TAG, "Failed to federate the tokens.", e10);
1833:                                Log.w(TAG, "Failed to get or refresh credentials from Cognito Identity", e12);
1848:                    Log.w(TAG, tokens == null ? "Tokens are invalid, please sign-in again." : "Failed to federate the tokens", e);
1927:            Log.w(TAG, "Could not access network state", e10);
2079:                Log.d(TAG, "waitForSignIn: userState:" + userStateDetails.getUserState());
2219:            Log.d(TAG, str + " not found in `awsconfiguration.json`");
2243:                Log.w(TAG, "Failed to parse HostedUI settings from store. Defaulting to awsconfiguration.json", e10);
2253:            Log.d(TAG, "getHostedUIJSON: Failed to read config", e11);
2266:            Log.w(TAG, "getHostedUIJSONFromJSON: Failed to read config", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobile/client/activities/HostedUIRedirectActivity.java
20:        Log.d("AuthClient", "Handling auth redirect response");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobile/client/internal/InternalCallback.java
72:            Log.w(TAG, "Library attempted to call user callback twice, expected only once");
80:            Log.e(TAG, "Duplicate call to execute code.", new RuntimeException("Internal error, duplicate call"));
98:            Log.e(TAG, "Duplicate call to execute code.", new RuntimeException("Internal error, duplicate call"));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobile/client/internal/oauth2/OAuth2Client.java
131:        Log.d(TAG, "OAuth2Client: Failed to pre-warm custom tab, first page load may be slower");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java
169:            Log.w(TAG, "Context is null. Failed to inspect packages.");
185:            Log.w(TAG, "HostedUIRedirectActivity is not declared in AndroidManifest.");
187:            Log.w(TAG, "Failed to inspect packages.");
443:                        Log.d(AuthClient.TAG, "Sign-out was successful.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoauth/activities/CustomTabsManagerActivity.java
37:            Log.d(TAG, "CustomTabsManagerActivity was created with a null state.");
46:        Log.d(TAG, "Authorization flow canceled by user");
51:        Log.d(TAG, "Authorization flow completed successfully");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoauth/util/LocalDataManager.java
25:            Log.e(TAG, "Application context, and application domain cannot be null");
46:            Log.e(TAG, "Failed while writing to SharedPreferences", e10);
56:            Log.e(TAG, "Failed while writing to SharedPreferences", e10);
80:            Log.e(TAG, "Failed while writing to SharedPreferences", e10);
88:            Log.e(TAG, "Failed while clearing data from SharedPreferences", e10);
96:            Log.e(TAG, "Failed to read from SharedPreferences", e10);
106:            Log.e(TAG, "Failed to read from SharedPreferences", e10);
128:            Log.e(TAG, "Failed to read from SharedPreferences", e10);
140:            Log.e(TAG, "Failed to read from SharedPreferences", e10);
173:            Log.e(TAG, "Failed to read from SharedPreferences", e10);
183:            Log.e(TAG, "Failed while writing to SharedPreferences", e10);
192:            Log.e(TAG, "Failed to read from SharedPreferences", e10);
202:                Log.e(TAG, "Failed to read from SharedPreferences", e10);
228:            Log.e(TAG, "Failed while writing to SharedPreferences", e10);
252:                Log.e(TAG, "Failed while writing to SharedPreferences", e10);
256:        Log.e(TAG, "Application context, and application domain cannot be null");
269:                Log.e(TAG, "Failed to read from SharedPreferences", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserSession.java
53:                Log.w(TAG, "CognitoUserSession is not valid because idToken is null.");
57:                Log.w(TAG, "CognitoUserSession is not valid because accessToken is null.");
69:                Log.w(TAG, "CognitoUserSession is not valid because idToken is null.");
73:                Log.w(TAG, "CognitoUserSession is not valid because accessToken is null.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amplifyframework/hub/HubSubscriber.java
23:            Log.w("amplify:aws-hub", "Unable to cast event data for event type " + hubEvent.getName(), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amplifyframework/logging/AndroidLogger.java
25:        Log.d(this.namespace, String.valueOf(str));
33:        Log.e(this.namespace, String.valueOf(str));
52:        Log.i(this.namespace, String.valueOf(str));
61:        Log.v(this.namespace, String.valueOf(str));
69:        Log.w(this.namespace, String.valueOf(str));
77:        Log.e(this.namespace, str, th);
85:        Log.w(this.namespace, str, th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amplifyframework/logging/JavaLogger.java
92:        System.out.println(sb2.toString());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/sdk/authentication/C1950a.java
34:        Log.d("AuthUtils", "sendMarketIntent : uri = " + str);
38:        Log.d("AuthUtils", "sendMarketIntent: uri = " + Uri.parse(str2));
57:            Log.d("AuthUtils", "deeplinkAppleMusic: uri = " + Uri.parse(str2));
58:            Log.d(f10455a, "deeplinkAppleMusic: isAppleMusicInstalled(activity) = " + m10753a(activity));
62:                Log.d("AuthUtils", "deeplinkAppleMusic: activityNotFound!");
66:            Log.e(f10455a, "deeplinkAppleMusic: activity still not found?!!?");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/sdk/authentication/SDKUriHandlerActivity.java
19:        Log.d(str, "handleIntentData: uri = " + uri);
23:                Log.d(str, "handleIntentData: setting token:" + uri.getQueryParameter("usertoken"));
36:        Log.d(str, "onActivityResult: " + i10 + ", data = " + intent);
39:                Log.d(str, "onActivityResult: token passed is " + intent.getStringExtra("music_user_token"));
53:        Log.d(str, "onCreate: " + getIntent().getStringExtra("developer_token"));
60:                Log.d(str, "onCreate: we shouldn't be here ideally. Debug.");
64:        Log.d(str, "onCreate: deeplink.. uri = " + getIntent().getData());
70:        Log.d(f10449r, "onNewIntent: " + intent.getData());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/sdk/authentication/StartAuthenticationActivity.java
52:            Log.e(f10450v, "getDrawableForDpi: " + e10.getMessage());
60:        Log.d(f10450v, "refreshButton: isAppleMusicInstalled? " + m10753a);
77:        Log.d(f10450v, "handleIntentData: setting token:" + uri.getQueryParameter("usertoken"));
94:        Log.d(str, "onActivityResult: " + i10 + ", data = " + intent + ", resultCode = " + i11);
97:                Log.d(str, "onActivityResult: token passed is " + intent.getStringExtra("music_user_token"));
149:        Log.d(f10450v, "onNewIntent: " + intent);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/ComponentCallbacks2C1955c.java
243:                Log.w("Glide", "Failed to find GeneratedAppGlideModule. You should include an annotationProcessor compile dependency on com.github.bumptech.glide:compiler in your application and a @GlideModule annotated AppGlideModule implementation or LibraryGlideModules will be silently ignored");
286:                        Log.d("Glide", "AppGlideModule excludes manifest GlideModule: " + next);
295:                Log.d("Glide", "Discovered GlideModule from manifest: " + it2.next().getClass());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/GeneratedAppGlideModuleImpl.java
17:            Log.d("Glide", "Discovered AppGlideModule from annotation: com.carolinegirvan.mobile.util.CarolineGirvanGlideModule");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/gifdecoder/C1963d.java
86:                    Log.d("GifHeaderParser", "Error Reading Block n: " + i10 + " count: " + i11 + " blockSize: " + this.f10540d, e10);
114:                Log.d("GifHeaderParser", "Format Error Reading Color Table", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/gifdecoder/C1964e.java
563:                Log.d(str, "Unable to decode frame, frameCount=" + this.f10553l.f10526c + ", framePointer=" + this.f10552k);
584:                    Log.d(str2, "No valid color table found for frame #" + this.f10552k);
602:            Log.d(str3, "Unable to decode frame, status=" + this.f10556o);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/data/AbstractC1977b.java
63:                Log.d("AssetPathFetcher", "Failed to load data from asset manager", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/data/AbstractC1987l.java
64:                Log.d("LocalUriFetcher", "Failed to open Uri", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/data/C1985j.java
94:            Log.d("HttpUrlFetcher", "Failed to get a response code", e10);
106:                    Log.d("HttpUrlFetcher", "Got non empty content encoding: " + httpURLConnection.getContentEncoding());
221:                    Log.d("HttpUrlFetcher", "Failed to load data for url", e10);
234:                Log.v("HttpUrlFetcher", sb2.toString());
238:                Log.v("HttpUrlFetcher", "Finished http url fetcher fetch in " + C2160g.m11734a(m11735b));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/data/mediastore/C1991c.java
135:                Log.d("MediaStoreThumbFetcher", "Failed to find thumbnail file", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/data/mediastore/C1993e.java
87:            android.util.Log.d(r0, r7, r3)     // Catch: java.lang.Throwable -> L47
135:                Log.d("ThumbStreamOpener", "Failed to open uri: " + uri, e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/engine/C2030i.java
69:                    Log.v("DecodePath", "Failed to decode data for " + interfaceC2051j, e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/engine/C2032k.java
253:        Log.v("Engine", str + " in " + C2160g.m11734a(j10) + "ms, key: " + interfaceC2047f);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/engine/C2046y.java
87:                Log.v("SourceGenerator", "Finished encoding source to cache, key: " + c2023d + ", data: " + obj + ", encoder: " + m11139q + ", duration: " + C2160g.m11734a(m11735b));
96:                Log.d("SourceGenerator", "Attempt to write: " + this.f10967v + ", data: " + obj + " to the disk cache failed, maybe the disk cache is disabled? Trying to decode the data directly...");
142:                    Log.d("SourceGenerator", "Failed to properly rewind or write data to cache", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/engine/GlideException.java
160:            Log.i(str, sb2.toString(), m10987k.get(i10));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/engine/RunnableC2029h.java
567:        Log.v("DecodeJob", sb2.toString());
765:                    Log.d("DecodeJob", "DecodeJob threw unexpectedly, isCancelled: " + this.f10820T + ", stage: " + this.f10807G, th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/engine/bitmap_recycle/C2007i.java
137:                Log.v(m11032h.mo11002p(), "evicted: " + m11032h.mo11001b(m11023f));
181:            Log.v(m11033i.mo11002p(), "Allocated " + aVar.f10688b + " bytes");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/engine/bitmap_recycle/C2008j.java
108:        Log.v("LruBitmapPool", "Hits=" + this.f10697g + ", misses=" + this.f10698h + ", puts=" + this.f10699i + ", evictions=" + this.f10700j + ", currentSize=" + this.f10696f + ", maxSize=" + this.f10695e + "\nStrategy=" + this.f10691a);
137:                Log.d("LruBitmapPool", "Missing bitmap=" + this.f10691a.mo11058a(i10, i11, config));
147:            Log.v("LruBitmapPool", "Get bitmap=" + this.f10691a.mo11058a(i10, i11, config));
171:                    Log.w("LruBitmapPool", "Size mismatch, resetting");
181:                Log.d("LruBitmapPool", "Evicting bitmap=" + this.f10691a.mo11062e(removeLast));
193:            Log.d("LruBitmapPool", "trimMemory, level=" + i10);
206:            Log.d("LruBitmapPool", "clearMemory");
228:                    Log.v("LruBitmapPool", "Put bitmap in pool=" + this.f10691a.mo11062e(bitmap));
235:                Log.v("LruBitmapPool", "Reject bitmap from pool, bitmap: " + this.f10691a.mo11062e(bitmap) + ", is mutable: " + bitmap.isMutable() + ", is allowed config: " + this.f10692b.contains(bitmap.getConfig()));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/engine/cache/C2017e.java
56:                Log.v("DiskLruCacheWrapper", "Put: Obtained: " + m11103b + " for for Key: " + interfaceC2047f);
62:                    Log.w("DiskLruCacheWrapper", "Unable to put to disk cache", e10);
91:            Log.v("DiskLruCacheWrapper", "Get: Obtained: " + m11103b + " for for Key: " + interfaceC2047f);
103:            Log.w("DiskLruCacheWrapper", "Unable to get from disk cache", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/engine/cache/C2021i.java
142:            Log.d("MemorySizeCalculator", sb2.toString());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/engine/executor/ExecutorServiceC2025a.java
206:                Log.e("GlideExecutor", "Request threw uncaught throwable", th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/model/C2056c.java
22:                Log.d("ByteBufferEncoder", "Failed to write data", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/model/C2057d.java
57:                    Log.d("ByteBufferFileLoader", "Failed to obtain ByteBuffer for file", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/model/C2059f.java
128:                    Log.d("FileLoader", "Failed to open file", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/model/C2072s.java
103:            Log.w("ResourceLoader", "Received invalid resource id: " + num, e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/model/C2073t.java
42:                            Log.d("StreamEncoder", "Failed to encode data onto the OutputStream", e);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/resource/bitmap/C2084b0.java
130:                Log.v("TransformationUtils", "requested target size too big for input, fit centering instead");
135:            Log.v("TransformationUtils", "requested target size larger or equal to input, returning input");
183:                Log.v("TransformationUtils", "requested target size matches input, returning input");
192:                Log.v("TransformationUtils", "adjusted target size matches input, returning input");
199:            Log.v("TransformationUtils", "request: " + i10 + "x" + i11);
200:            Log.v("TransformationUtils", "toFit:   " + bitmap.getWidth() + "x" + bitmap.getHeight());
201:            Log.v("TransformationUtils", "toReuse: " + mo11013d.getWidth() + "x" + mo11013d.getHeight());
205:            Log.v("TransformationUtils", sb2.toString());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/resource/bitmap/C2085c.java
101:            android.util.Log.d(r0, r4, r9)     // Catch: java.lang.Throwable -> L56
134:            android.util.Log.v(r0, r8)     // Catch: java.lang.Throwable -> Lc2

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/resource/bitmap/C2089e.java
27:            Log.v("BitmapImageDecoder", "Decoded [" + decodeBitmap.getWidth() + "x" + decodeBitmap.getHeight() + "] for [" + i10 + "x" + i11 + "]");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/resource/bitmap/C2092f0.java
231:            Log.d("VideoDecoder", "Exception trying to decode a scaled frame on oreo+, falling back to a fullsize frame", th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/resource/bitmap/C2101o.java
144:                Log.d("Downsampler", "Cannot determine whether the image has alpha or not from header, format " + enumC1972b, e10);
163:                Log.d("Downsampler", "Unable to determine dimensions for: " + imageType + " with target [" + i13 + "x" + i14 + "]");
228:            Log.v("Downsampler", "Calculate scaling, source: [" + i11 + "x" + i12 + "], degreesToRotate: " + i10 + ", target: [" + i13 + "x" + i14 + "], power of two scaled: [" + floor + "x" + floor2 + "], exact scale factor: " + mo11427b + ", power of 2 sample size: " + max + ", adjusted scale factor: " + mo11427b2 + ", target density: " + options.inTargetDensity + ", density: " + options.inDensity);
292:                    Log.v(str, "Calculated target [" + round + "x" + round2 + "] for source [" + i14 + "x" + i15 + "], sampleSize: " + i19 + ", targetDensity: " + options.inTargetDensity + ", density: " + options.inDensity + ", density multiplier: " + f10);
368:            android.util.Log.d(r0, r2, r1)     // Catch: java.lang.Throwable -> L25
451:        Log.v("Downsampler", "Decoded " + m11434j(bitmap) + " from [" + i10 + "x" + i11 + "] " + str + " with inBitmap " + m11438n(options) + " for [" + i12 + "x" + i13 + "], sample size: " + options.inSampleSize + ", density: " + options.inDensity + ", target density: " + options.inTargetDensity + ", thread: " + Thread.currentThread().getName() + ", duration: " + C2160g.m11734a(j10));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/resource/bitmap/C2102p.java
58:                Log.w("DrawableToBitmap", "Unable to draw " + drawable + " to Bitmap with Target.SIZE_ORIGINAL because the Drawable has no intrinsic width");
64:                Log.w("DrawableToBitmap", "Unable to draw " + drawable + " to Bitmap with Target.SIZE_ORIGINAL because the Drawable has no intrinsic height");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/resource/bitmap/C2106t.java
103:                Log.w("Downsampler", "Excluding HARDWARE bitmap config because we're over the file descriptor limit, file descriptors " + length + ", limit " + m11460c);
140:                Log.v("HardwareConfig", "Hardware config disallowed by caller");
146:                Log.v("HardwareConfig", "Hardware config disallowed by device model");
152:                Log.v("HardwareConfig", "Hardware config disallowed by sdk");
158:                Log.v("HardwareConfig", "Hardware config disallowed by app state");
164:                Log.v("HardwareConfig", "Hardware config disallowed because exif orientation is required");
171:                Log.v("HardwareConfig", "Hardware config disallowed because width is too small");
177:                Log.v("HardwareConfig", "Hardware config disallowed because height is too small");
185:            Log.v("HardwareConfig", "Hardware config disallowed because there are insufficient FDs");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser.java
201:                    Log.d("DfltImageHeaderParser", "Parser doesn't handle magic number: " + mo11367a);
208:                    Log.d("DfltImageHeaderParser", "Failed to parse exif segment length, or exif segment not found");
304:                    Log.d("DfltImageHeaderParser", "Unknown segmentId=" + ((int) mo11369c2));
314:                    Log.d("DfltImageHeaderParser", "Found MARKER_EOI in exif segment");
326:            Log.d("DfltImageHeaderParser", "Unable to skip enough data, type: " + ((int) mo11369c) + ", wanted to skip: " + mo11367a + ", but actually skipped: " + skip);
339:                Log.d("DfltImageHeaderParser", "Unknown endianness = " + ((int) m11371a));
357:                            Log.d("DfltImageHeaderParser", "Got tagIndex=" + i10 + " tagType=" + ((int) m11371a3) + " formatCode=" + ((int) m11371a4) + " componentCount=" + m11372b2);
367:                                    Log.d("DfltImageHeaderParser", "Illegal number of bytes for TI tag data tagType=" + ((int) m11371a3));
370:                                Log.d("DfltImageHeaderParser", "Illegal tagValueOffset=" + i12 + " tagType=" + ((int) m11371a3));
373:                            Log.d("DfltImageHeaderParser", "Got byte count > 4, not orientation, continuing, formatCode=" + ((int) m11371a4));
376:                        Log.d("DfltImageHeaderParser", "Negative tiff component count");
379:                    Log.d("DfltImageHeaderParser", "Got invalid format code = " + ((int) m11371a4));
394:                Log.d("DfltImageHeaderParser", "Missing jpeg exif preamble");
399:            Log.d("DfltImageHeaderParser", "Unable to read exif segment data, length: " + i10 + ", actually read: " + mo11368b);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/resource/gif/C2113a.java
107:                    Log.v("BufferGifDecoder", "Decoded GIF from stream in " + C2160g.m11734a(m11735b));
112:                Log.v("BufferGifDecoder", "Decoded GIF from stream in " + C2160g.m11734a(m11735b));
117:                Log.v("BufferGifDecoder", "Decoded GIF from stream in " + C2160g.m11734a(m11735b));
127:            Log.v("BufferGifDecoder", "Downsampling GIF, sampleSize: " + max + ", target dimens: [" + i10 + "x" + i11 + "], actual dimens: [" + c1962c.m10836d() + "x" + c1962c.m10833a() + "]");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/resource/gif/C2116d.java
29:                Log.w("GifEncoder", "Failed to encode GIF drawable data", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/resource/gif/C2122j.java
53:            Log.w("StreamGifDecoder", "Error reading data from stream", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/manager/C2128f.java
16:            Log.d("ConnectivityMonitor", z10 ? "ACCESS_NETWORK_STATE permission granted, registering connectivity monitor" : "ACCESS_NETWORK_STATE permission missing, cannot register connectivity monitor");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/manager/C2138p.java
260:                    Log.w("RMRetriever", "Parent was destroyed before our Fragment could be added");
262:                    Log.w("RMRetriever", "Tried adding Fragment twice and failed twice, giving up!");
275:            Log.d("RMRetriever", "We failed to add our Fragment the first time around, trying again...");
293:                    Log.w("RMRetriever", "Parent was destroyed before our Fragment could be added, all requests for the destroyed parent are cancelled");
296:                Log.e("RMRetriever", "ERROR: Tried adding Fragment twice and failed twice, giving up and cancelling all associated requests! This probably means you're starting loads in a unit test with an Activity that you haven't created and never create. If you're using Robolectric, create the Activity as part of your test setup");
308:            Log.d("RMRetriever", "We failed to add our Fragment the first time around, trying again...");
349:            Log.w("RMRetriever", "Failed to remove expected request manager fragment, manager: " + fragmentManager);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/manager/C2140r.java
106:            Log.v("RequestTracker", "Paused, delaying request");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/manager/C2141s.java
162:                    Log.w("ConnectivityMonitor", "Failed to register callback", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/manager/C2142t.java
176:                Log.w("SupportRMFragment", "Unable to register fragment with root, ancestor detached");
183:                    Log.w("SupportRMFragment", "Unable to register fragment with root", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/manager/FragmentC2137o.java
171:                Log.w("RMFragment", "Unable to register fragment with root", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/request/C2152i.java
165:            Log.d("Glide", "Finished loading " + r10.getClass().getSimpleName() + " from " + enumC1971a + " for " + this.f11313i + " with size [" + this.f11301A + "x" + this.f11302B + "] in " + C2160g.m11734a(this.f11325u) + " ms");
309:        Log.v("GlideRequest", str + " this: " + this.f11306b);
346:                Log.w("Glide", "Load failed for " + this.f11313i + " with size [" + this.f11301A + "x" + this.f11302B + "]", glideException);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/util/pool/C2166a.java
94:                    Log.v("FactoryPools", "Created new " + mo3853b.getClass());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/carolinegirvan/mobile/features/AuthenticationViewModel.java
170:                    C9792b.m43236b(Log.e("Error Tag: ", message));
296:                    C9792b.m43236b(Log.e("Error Tag: ", message));
422:                    C9792b.m43236b(Log.e("Error Tag: ", message));
601:                int r1 = android.util.Log.e(r2, r1)
893:                    Log.e("Error Tag: ", message);
923:                    C9792b.m43236b(Log.e("Error Tag: ", message));
1058:                    C9792b.m43236b(Log.e("Error Tag: ", message));
1304:                int r1 = android.util.Log.e(r2, r1)
1428:                    C9792b.m43236b(Log.e("Error Tag: ", message));
1582:                int r1 = android.util.Log.e(r2, r1)
1726:                    C9792b.m43236b(Log.e("Error Tag: ", message));
1851:                    C9792b.m43236b(Log.e("Error Tag: ", message));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/carolinegirvan/mobile/features/account/viewmodels/ChangePasswordViewModel.java
149:                    C9792b.m43236b(Log.e("Error Tag: ", message));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/carolinegirvan/mobile/features/account/viewmodels/SettingsViewModel.java
347:                    C9792b.m43236b(Log.e("Error Tag: ", message));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/carolinegirvan/mobile/features/discovery/apple/C2768a.java
135:            Log.e("APPLE MUSIC EXCEPTION", String.valueOf(mediaPlayerException.getMessage()));
293:            Log.e("APPLE EXCEPTION", e10.getCause() + " - " + e10.getMessage());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/datatransport/runtime/backends/C3432k.java
47:                Log.w("BackendRegistry", "Could not retrieve metadata, returning empty list of transport backends.");
78:                    Log.w("BackendRegistry", "Context has no PackageManager.");
85:                Log.w("BackendRegistry", "TransportBackendDiscovery has no service info.");
88:                Log.w("BackendRegistry", "Application info not found.");
102:                Log.w("BackendRegistry", String.format("Class %s is not found.", str2), e10);
105:                Log.w("BackendRegistry", String.format("Could not instantiate %s.", str2), e11);
108:                Log.w("BackendRegistry", String.format("Could not instantiate %s.", str2), e12);
111:                Log.w("BackendRegistry", String.format("Could not instantiate %s", str2), e13);
114:                Log.w("BackendRegistry", String.format("Could not instantiate %s", str2), e14);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/util/C4170r.java
38:                Log.w(str, str2);
44:                Log.e(str, str2);
50:                Log.d(str, str2);
56:                Log.i(str, str2);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/auth/api/signin/RevocationBoundService.java
14:            Log.w("RevocationService", "Unknown action sent to RevocationBoundService: ".concat(String.valueOf(intent.getAction())));
18:            Log.v("RevocationService", "RevocationBoundService handling ".concat(String.valueOf(intent.getAction())));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/auth/api/signin/internal/SignInHubActivity.java
67:            Log.w("AuthSignInClient", "Could not launch sign in Intent. Google Play Service is probably being updated...");
125:            Log.e("AuthSignInClient", "Unknown action: ".concat(String.valueOf(intent.getAction())));
133:            Log.e("AuthSignInClient", "Activity started with invalid configuration.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/cast/C4236a.java
79:            Log.w("AdBreakClipInfo", String.format(Locale.ROOT, "Error creating AdBreakClipInfo: %s", e10.getMessage()));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/cast/CastDevice.java
89:                Log.i("CastDevice", "Unable to convert host address (" + this.f19527q + ") to ipaddress: " + e10.getMessage());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/cast/internal/C4325b.java
31:            Log.d(this.f19912a, m20979h(str, objArr));
38:            Log.d(this.f19912a, m20979h(str, objArr), th);
44:        Log.e(this.f19912a, m20979h(str, objArr));
49:        Log.e(this.f19912a, m20979h(str, objArr), th);
54:        Log.i(this.f19912a, m20979h(str, objArr));
59:        Log.w(this.f19912a, m20979h(str, objArr));
64:        Log.w(this.f19912a, m20979h(str, objArr), th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/AbstractBinderC4635u.java
50:                Log.e("GoogleCertificates", "Failed to get Google certificates from remote", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/C4529d0.java
41:                    Log.e("GoogleCertificatesQuery", "Could not unwrap certificate");
44:                Log.e("GoogleCertificatesQuery", "Could not unwrap certificate", e10);
65:            Log.w("GoogleCertificatesQuery", "certificate binder is null");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/C4530e.java
142:        Log.w("GoogleApiAvailability", String.format("Creating dialog for Google Play services availability issue. ConnectionResult=%s", Integer.valueOf(i10)), new IllegalArgumentException());
192:        Log.w("GoogleApiAvailability", String.format("GMS core API Availability. ConnectionResult=%s, tag=%s", Integer.valueOf(i10), null), new IllegalArgumentException());
199:                Log.w("GoogleApiAvailability", "Missing resolution for ConnectionResult.RESOLUTION_REQUIRED. Call GoogleApiAvailability#showErrorNotification(Context, ConnectionResult) instead.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/C4536h.java
52:            Log.w("GooglePlayServicesUtil", "Google Play services is missing.");
85:            Log.w("GooglePlayServicesUtil", "Cannot find Google Play services package name.", e10);
99:            Log.e("GooglePlayServicesUtil", "The Google Play services resources were not found. Check your project configuration to ensure that the resources are included.");
118:                Log.w("GooglePlayServicesUtil", String.valueOf(packageName).concat(" requires the Google Play Store, but it is missing."));
130:                        Log.w("GooglePlayServicesUtil", String.valueOf(packageName).concat(" requires Google Play Store, but its signature is invalid."));
146:                    Log.w("GooglePlayServicesUtil", "Google Play services out of date for " + packageName + ".  Requires " + i10 + " but found " + packageInfo2.versionCode);
149:                Log.w("GooglePlayServicesUtil", String.valueOf(packageName).concat(" requires Google Play Store, but its signature doesn't match that of Google Play services."));
151:                Log.w("GooglePlayServicesUtil", String.valueOf(packageName).concat(" requires Google Play services, but their signature is invalid."));
155:            Log.w("GooglePlayServicesUtil", String.valueOf(packageName).concat(" requires Google Play services, but they are missing."));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/C4538i.java
52:            Log.w("GoogleSignatureVerifier", "Package has more than one signature.");
130:            Log.w("GoogleSignatureVerifier", "Test-keys aren't accepted on this build.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/C4539i0.java
70:            Log.d("GoogleCertificatesRslt", mo21623a(), this.f20524c);
72:            Log.d("GoogleCertificatesRslt", mo21623a());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/C4639y.java
72:                Log.w("GoogleCertificates", "GoogleCertificates has been initialized already");
90:            Log.e("GoogleCertificates", "Failed to get Google certificates from remote", e10);
109:                Log.e("GoogleCertificates", "Failed to get Google certificates from remote", e10);
113:            Log.e("GoogleCertificates", "Failed to get Google certificates from remote", e11);
141:                    Log.e("GoogleCertificates", "Failed to get Google certificates from remote", e10);
145:                Log.e("GoogleCertificates", "Failed to get Google certificates from remote", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/HandlerC4626l.java
35:            Log.w("GoogleApiAvailability", sb2.toString());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/api/AbstractC4516k.java
22:                Log.w("ResultCallbacks", "Unable to release ".concat(String.valueOf(r10)), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/api/GoogleApiActivity.java
39:            Log.e("GoogleApiActivity", "Activity started without extras");
46:            Log.e("GoogleApiActivity", "Activity started without resolution");
71:                Log.e("GoogleApiActivity", sb3, e10);
76:            Log.e("GoogleApiActivity", "Failed to launch pendingIntent", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/api/internal/BasePendingResult.java
134:                Log.w("BasePendingResult", "Unable to release ".concat(String.valueOf(interfaceC4429i)), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/api/internal/C4455g.java
506:                Log.w("GoogleApiManager", sb4.toString());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/api/internal/C4459h0.java
258:        Log.w("GoogleApiManager", sb2.toString());
386:            Log.w("GoogleApiManager", sb2.toString());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/api/internal/C4475m1.java
101:                Log.w("TransformedResultImpl", "Unable to release ".concat(String.valueOf(interfaceC4429i)), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/api/internal/C4484p1.java
29:            Log.w("ApiCallRunner", "Exception reporting failure", e10);
45:            Log.w("ApiCallRunner", "Exception reporting failure", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/api/internal/HandlerC4469k1.java
26:                Log.e("TransformedResultImpl", valueOf.length() != 0 ? "Runtime exception on the transformation worker thread: ".concat(valueOf) : new String("Runtime exception on the transformation worker thread: "));
32:            Log.e("TransformedResultImpl", sb2.toString());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/api/internal/RunnableC4468k0.java
54:            Log.e("GoogleApiManager", "Failed to get service from broker. ", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/internal/AbstractC4546c.java
262:                    Log.e("GmsClient", "Calling connect() while still connected, missing disconnect() for " + c4610v1.m21864c() + " on " + c4610v1.m21863b());
280:                    Log.w("GmsClient", "unable to connect to service: " + this.f20542g.m21864c() + " on " + this.f20542g.m21863b());
466:                    Log.w("GmsClient", "mServiceBroker is null, client disconnected");
470:            Log.w("GmsClient", "IGmsServiceBroker.getService failed", e10);
474:            Log.w("GmsClient", "IGmsServiceBroker.getService failed", e);
480:            Log.w("GmsClient", "IGmsServiceBroker.getService failed", e);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/internal/AbstractC4548c1.java
36:                Log.w("GmsClient", "Callback proxy " + toString() + " being reused. This is not safe.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/internal/AbstractDialogInterfaceOnClickListenerC4553e0.java
32:            Log.e("DialogRedirect", true == Build.FINGERPRINT.contains("generic") ? "Failed to start resolution intent. This may occur when resolving Google Play services connection issues on emulators with Google APIs but not Google Play Store." : "Failed to start resolution intent.", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/internal/BinderC4540a.java
21:                    Log.w("AccountAccessor", "Remote account accessor probably died");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/internal/C4544b0.java
113:                Log.e("GoogleApiAvailability", "An invalid account was specified when connecting. Please provide a valid account.");
116:                Log.e("GoogleApiAvailability", "Network error occurred. Please retry request later.");
119:                Log.e("GoogleApiAvailability", "Internal error occurred. Please see logs for detailed information");
122:                Log.e("GoogleApiAvailability", "Google Play services is invalid. Cannot recover.");
125:                Log.e("GoogleApiAvailability", "Developer error occurred. Please see logs for detailed information");
128:                Log.e("GoogleApiAvailability", "The application is not licensed to the user.");
139:                Log.e("GoogleApiAvailability", sb2.toString());
142:                Log.e("GoogleApiAvailability", "One of the API components you attempted to connect to is not available.");
145:                Log.e("GoogleApiAvailability", "The specified account could not be signed in.");
148:                Log.e("GoogleApiAvailability", "The current user profile is restricted and could not use authenticated features.");
182:                Log.w("GoogleApiAvailability", str.length() != 0 ? "Missing resource: ".concat(str) : new String("Missing resource: "));
187:                Log.w("GoogleApiAvailability", str.length() != 0 ? "Got empty resource: ".concat(str) : new String("Got empty resource: "));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/internal/C4557f1.java
47:                Log.w("GmsClient", "service descriptor mismatch: " + this.f20614h.mo8555F() + " vs. " + interfaceDescriptor);
65:            Log.w("GmsClient", "service probably died");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/internal/C4581n1.java
64:                Log.w("ConnectionStatusConfig", "Dynamic intent resolution failed: ".concat(e10.toString()));
69:                Log.w("ConnectionStatusConfig", "Dynamic lookup for intent failed for action: ".concat(String.valueOf(this.f20650a)));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/internal/C4593r1.java
53:                Log.e("GmsClientSupervisor", "Timeout waiting for ServiceConnection callback " + String.valueOf(c4581n12), new Exception());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/dynamite/C4643b.java
42:                    Log.w("DynamiteLoaderV2CL", "Failed to get thread context classloader " + e10.getMessage());
107:                            Log.w("DynamiteLoaderV2CL", "Failed to enumerate thread/threadgroup " + e10.getMessage());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/dynamite/DynamiteModule.java
139:            Log.e("DynamiteModule", "Module descriptor id '" + String.valueOf(declaredField.get(null)) + "' didn't match expected id '" + str + "'");
142:            Log.w("DynamiteModule", "Local module descriptor class for " + str + " not found.");
145:            Log.e("DynamiteModule", "Failed to load module descriptor class: ".concat(String.valueOf(e10.getMessage())));
173:            Log.i("DynamiteModule", "Considering local module " + str + ":" + mo21900a.f20759a + " and remote module " + str + ":" + mo21900a.f20760b);
213:                                    Log.i("DynamiteModule", "Selected remote version of " + str + ", version >= " + i11);
231:                                        Log.v("DynamiteModule", "Dynamite loader version >= 2, using loadModule2NoCrashUtils");
234:                                        Log.w("DynamiteModule", "Dynamite loader version < 2, falling back to loadModule2");
243:                                    Log.i("DynamiteModule", "Selected remote version of " + str + ", version >= " + i11);
256:                                        Log.w("DynamiteModule", "IDynamite loader version = 2");
259:                                        Log.w("DynamiteModule", "Dynamite loader version < 2, falling back to createModuleContext");
288:                            Log.w("DynamiteModule", "Failed to load remote module: " + e12.getMessage());
346:                        Log.w("DynamiteModule", "Failed to load module via V2: " + e11.toString());
404:                        Log.w("DynamiteModule", "Failed to retrieve remote module version: " + e12.getMessage());
430:                                            Log.w("DynamiteModule", "Failed to retrieve remote module version: " + e10.getMessage());
444:                                    Log.w("DynamiteModule", "Failed to retrieve remote module version.");
452:                                Log.w("DynamiteModule", "IDynamite loader version = 2, no high precision latency measurement.");
455:                                Log.w("DynamiteModule", "IDynamite loader version < 2, falling back to getModuleVersion2");
582:            android.util.Log.w(r11, r12)     // Catch: java.lang.Exception -> L9b java.lang.Throwable -> Lc5
618:        Log.i("DynamiteModule", "Selected local version of ".concat(String.valueOf(str)));
667:                Log.i("DynamiteModule", "Non-system-image GmsCore APK, forcing V1");
672:            Log.e("DynamiteModule", "Invalid GmsCore APK, remote loading disabled.");
698:                Log.e("DynamiteModule", "Failed to load IDynamiteLoader from GmsCore: " + e10.getMessage());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/flags/impl/FlagProviderImpl.java
35:            Log.w("FlagDataUtils", valueOf2.length() != 0 ? "Flag value not available, returning default: ".concat(valueOf2) : new String("Flag value not available, returning default: "));
51:            Log.w("FlagDataUtils", valueOf2.length() != 0 ? "Flag value not available, returning default: ".concat(valueOf2) : new String("Flag value not available, returning default: "));
67:            Log.w("FlagDataUtils", valueOf2.length() != 0 ? "Flag value not available, returning default: ".concat(valueOf2) : new String("Flag value not available, returning default: "));
81:            Log.w("FlagDataUtils", valueOf.length() != 0 ? "Flag value not available, returning default: ".concat(valueOf) : new String("Flag value not available, returning default: "));
98:            Log.w("FlagProviderImpl", valueOf.length() != 0 ? "Could not retrieve sdk flags, continuing with defaults: ".concat(valueOf) : new String("Could not retrieve sdk flags, continuing with defaults: "));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/BinderC5145b1.java
26:            Log.w("AM", String.format("Unexpected object type. Expected, Received: %s, %s", cls.getCanonicalName(), obj.getClass().getCanonicalName()), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5215f6.java
71:            Log.e("GservicesLoader", "Unable to read GServices for: ".concat(String.valueOf(str)), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5231g6.java
20:        android.util.Log.e("HermeticFileOverrides", "no data dir", r13);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5247h6.java
30:            android.util.Log.e(r5, r6)

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5327m6.java
18:            Log.e("PhenotypeFlag", "Invalid long value for " + super.m23856c() + ": " + ((String) obj));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5343n6.java
22:        Log.e("PhenotypeFlag", "Invalid boolean value for " + super.m23856c() + ": " + ((String) obj));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5359o6.java
18:            Log.e("PhenotypeFlag", "Invalid double value for " + super.m23856c() + ": " + ((String) obj));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5450u1.java
73:                Log.w(str4, "Failed to connect to measurement client.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5451u2.java
84:                Log.w(this.f21763a, "Disabling data collection. Found google_app_id in strings.xml but Google Analytics for Firebase is missing. Remove this value or add Google Analytics for Firebase to resume data collection.");
95:                    Log.w(this.f21763a, "Specified origin or custom app id is null. Both parameters will be ignored.");
98:                Log.v(this.f21763a, "Deferring to Google Analytics for Firebase for event data collection. https://goo.gl/J1sWQy");
104:            Log.w(this.f21763a, "Unable to register lifecycle notifications. Application null.");
120:            Log.w(this.f21763a, "Data collection startup failed. No data will be collected.", exc);
126:        Log.w(this.f21763a, "Error with data collection. Data lost.", exc);
195:                    Log.w(this.f21763a, "OnEventListener already registered.");
206:                    Log.w(this.f21763a, "Failed to register event listener on calling thread. Trying again on the dynamite thread.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5465v0.java
28:                Log.e("JobSchedulerCompat", "No scheduleAsPackage method available, falling back to schedule");
37:                Log.e("JobSchedulerCompat", "No myUserId method available");
83:            android.util.Log.e(r1, r0, r5)
113:            android.util.Log.e(r2, r8, r5)

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5502x5.java
118:                        Log.e("ConfigurationContentLdr", "PhenotypeFlag unable to load ContentProvider, using default values");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/play_billing/C5552b0.java
123:                Log.v(str, str2);
129:                Log.v(str, str2.substring(0, min));
139:            Log.w(str, str2);
146:            Log.w(str, str2, th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/material/bottomsheet/BottomSheetBehavior.java
1077:            Log.w("BottomSheetBehavior", "Cannot set state: " + i10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/material/button/MaterialButton.java
528:            Log.w("MaterialButton", "MaterialButton manages its own background to control elevation, shape, color and states. Consider using backgroundTint, shapeAppearance and other attributes where available. A custom background will ignore these attributes and you should consider handling interaction states such as pressed, focused and disabled");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/material/button/MaterialButtonToggleGroup.java
224:            Log.e(f23443z, "Button ID is not valid: " + i10);
402:            Log.e(f23443z, "Child views must be of type MaterialButton.");
455:        Log.w(f23443z, "Child order wasn't updated");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/material/card/MaterialCardView.java
227:                Log.i("MaterialCardView", "Setting a custom background is not supported.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/material/chip/Chip.java
307:            Log.w("Chip", "Do not set the background; Chip manages its own background drawable.");
325:            Log.w("Chip", "Chip text must be vertically center and start aligned");
959:            Log.w("Chip", "Do not set the background; Chip manages its own background drawable.");
965:        Log.w("Chip", "Do not set the background color; Chip manages its own background drawable.");
973:            Log.w("Chip", "Do not set the background drawable; Chip manages its own background drawable.");
979:        Log.w("Chip", "Do not set the background resource; Chip manages its own background drawable.");
984:        Log.w("Chip", "Do not set the background tint list; Chip manages its own background drawable.");
989:        Log.w("Chip", "Do not set the background tint mode; Chip manages its own background drawable.");
1410:            Log.w("Chip", "Chip text must be vertically center and start aligned");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/material/floatingactionbutton/FloatingActionButton.java
509:        Log.i("FloatingActionButton", "Setting a custom background is not supported.");
514:        Log.i("FloatingActionButton", "Setting a custom background is not supported.");
519:        Log.i("FloatingActionButton", "Setting a custom background is not supported.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/material/internal/C6171b.java
617:            Log.e("CollapsingTextHelper", e10.getCause().getMessage(), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/material/navigation/AbstractC6188a.java
602:            Log.w("NavigationBar", "Multiple badges shouldn't be attached to one item.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/material/shape/C6209g.java
336:            Log.w(f24174M, "Compatibility shadow requested but can't be drawn for all operations in this shape.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/material/snackbar/BaseTransientBottomBar.java
681:            Log.w(f24299s, "Unable to update margins because layout params are not MarginLayoutParams");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/material/tabs/TabLayout.java
1458:            Log.w("TabLayout", "MODE_SCROLLABLE + GRAVITY_FILL is not supported, GRAVITY_START will be used instead");
1477:                Log.w("TabLayout", "GRAVITY_START is not supported with the current tab mode, GRAVITY_CENTER will be used instead");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/material/textfield/TextInputLayout.java
1027:            Log.i("TextInputLayout", "EditText added is not a TextInputEditText. Please switch to using that class instead.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/play/core/internal/C6395a.java
33:            return Log.i("PlayCore", m27574g(this.f25121a, str, objArr));
45:                Log.e("PlayCore", valueOf.length() != 0 ? "Unable to format ".concat(valueOf) : new String("Unable to format "), e10);
75:            Log.e("PlayCore", m27574g(this.f25121a, str, objArr), th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/play/core/internal/C6438x.java
19:                System.err.println("Failed to retrieve value from android.os.Build$VERSION.SDK_INT due to the following exception.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/common/base/C6476s.java
63:            logger.log(level, valueOf.length() != 0 ? "Exception during lenientFormat for ".concat(valueOf) : new String("Exception during lenientFormat for "), (Throwable) e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/C6672d.java
231:            Log.i("FirebaseApp", "Device in Direct Boot Mode: postponing initialization of Firebase APIs for app " + m28971l());
235:        Log.i("FirebaseApp", "Device unlocked: initializing all Firebase APIs for app " + m28971l());
248:                Log.w("FirebaseApp", "Default FirebaseApp failed to initialize because no default options were found. This usually means that com.google.gms:google-services was not applied to your gradle project.");
302:        Log.d("FirebaseApp", "Notifying background state change listeners.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/components/C6559g.java
37:                    Log.w("ComponentDiscovery", "Context has no PackageManager.");
44:                Log.w("ComponentDiscovery", this.f25501a + " has no service info.");
47:                Log.w("ComponentDiscovery", "Application info not found.");
57:                Log.w("ComponentDiscovery", "Could not retrieve metadata, returning empty list of registrars.");
100:            Log.w("ComponentDiscovery", String.format("Class %s is not an found.", str));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/components/C6566n.java
125:                    Log.w("ComponentDiscovery", "Invalid component registrar.", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/common/C6610m.java
225:        Log.e("FirebaseCrashlytics", ".");
226:        Log.e("FirebaseCrashlytics", ".     |  | ");
227:        Log.e("FirebaseCrashlytics", ".     |  |");
228:        Log.e("FirebaseCrashlytics", ".     |  |");
229:        Log.e("FirebaseCrashlytics", ".   \\ |  | /");
230:        Log.e("FirebaseCrashlytics", ".    \\    /");
231:        Log.e("FirebaseCrashlytics", ".     \\  /");
232:        Log.e("FirebaseCrashlytics", ".      \\/");
233:        Log.e("FirebaseCrashlytics", ".");
234:        Log.e("FirebaseCrashlytics", "The Crashlytics build ID is missing. This occurs when Crashlytics tooling is absent from your app's build configuration. Please review Crashlytics onboarding instructions and ensure you have a valid Crashlytics account.");
235:        Log.e("FirebaseCrashlytics", ".");
236:        Log.e("FirebaseCrashlytics", ".      /\\");
237:        Log.e("FirebaseCrashlytics", ".     /  \\");
238:        Log.e("FirebaseCrashlytics", ".    /    \\");
239:        Log.e("FirebaseCrashlytics", ".   / |  | \\");
240:        Log.e("FirebaseCrashlytics", ".     |  |");
241:        Log.e("FirebaseCrashlytics", ".     |  |");
242:        Log.e("FirebaseCrashlytics", ".     |  |");
243:        Log.e("FirebaseCrashlytics", ".");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/installations/C6702b.java
78:            android.util.Log.e(r2, r3, r1)
96:            Log.e("CrossProcessLock", "encountered error while releasing, ignoring", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/installations/local/C6714b.java
69:            Log.w("ContentValues", "Unexpected error, device missing required algorithms");
88:            Log.w("ContentValues", "Invalid key stored " + e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/installations/remote/C6721c.java
111:            Log.e("ContentValues", "Could not get fingerprint hash for package: " + this.f26219a.getPackageName());
114:            Log.e("ContentValues", "No such package: " + this.f26219a.getPackageName(), e10);
140:        Log.e("Firebase-Installations", "Firebase Installations can not communicate with Firebase server APIs due to invalid configuration. Please update your Firebase initialization process and set valid Firebase options (API key, Project ID, Application ID) when initializing Firebase.");
149:        Log.w("Firebase-Installations", m29176o);
150:        Log.w("Firebase-Installations", m29164a(str, str2, str3));
171:                    Log.w("ContentValues", "Failed to get heartbeats header", e10);
173:                    Log.w("ContentValues", "Failed to get heartbeats header", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/perf/C6731c.java
92:            Log.d("isEnabled", "No perf enable meta data found " + e10.getMessage());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/provider/FirebaseInitProvider.java
47:            Log.i("FirebaseInitProvider", "FirebaseApp initialization unsuccessful");
50:        Log.i("FirebaseInitProvider", "FirebaseApp initialization successful");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/remoteconfig/C6830a.java
150:        Log.e("FirebaseRemoteConfig", "Activated configs written to disk are null.");
258:            Log.w("FirebaseRemoteConfig", "Could not update ABT experiments.", e10);
260:            Log.e("FirebaseRemoteConfig", "Could not parse ABT experiments from the JSON response.", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/remoteconfig/internal/C6837e.java
173:                Log.d("FirebaseRemoteConfig", "Reading from storage file failed.", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/remoteconfig/internal/C6845m.java
99:        Log.w("FirebaseRemoteConfig", String.format("No value of type '%s' exists for parameter key '%s'.", str2, str));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/remoteconfig/internal/ConfigFetchHttpClient.java
196:            Log.e("FirebaseRemoteConfig", "Could not get fingerprint hash for package: " + this.f26492a.getPackageName());
199:            Log.e("FirebaseRemoteConfig", "No such package: " + this.f26492a.getPackageName(), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/Util.java
828:            System.out.println(list);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/platform/Platform.java
228:        logger.log(i10 == 5 ? Level.WARNING : Level.INFO, str, th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/logging/HttpLoggingInterceptor.java
107:        this.logger.log(headers.name(i10) + ": " + value);
147:        this.logger.log(sb4);
153:                    this.logger.log(C0128r.m618m("Content-Type: ", contentType));
156:                    this.logger.log(C0128r.m618m("Content-Length: ", Long.valueOf(body.contentLength())));
164:                this.logger.log(C0128r.m618m("--> END ", request.method()));
166:                this.logger.log("--> END " + request.method() + " (encoded body omitted)");
168:                this.logger.log("--> END " + request.method() + " (duplex request body omitted)");
170:                this.logger.log("--> END " + request.method() + " (one-shot body omitted)");
180:                this.logger.log(HttpUrl.FRAGMENT_ENCODE_SET);
182:                    this.logger.log(c8811c.mo40205D(charset2));
183:                    this.logger.log("--> END " + request.method() + " (" + body.contentLength() + "-byte body)");
185:                    this.logger.log("--> END " + request.method() + " (binary " + body.contentLength() + "-byte body omitted)");
222:            logger.log(sb5.toString());
230:                    this.logger.log("<-- END HTTP");
232:                    this.logger.log("<-- END HTTP (encoded body omitted)");
259:                        this.logger.log(HttpUrl.FRAGMENT_ENCODE_SET);
260:                        this.logger.log("<-- END HTTP (binary " + bufferField.getSize() + str);
264:                        this.logger.log(HttpUrl.FRAGMENT_ENCODE_SET);
265:                        this.logger.log(bufferField.clone().mo40205D(charset3));
268:                        this.logger.log("<-- END HTTP (" + bufferField.getSize() + "-byte, " + l10 + "-gzipped-byte body)");
270:                        this.logger.log("<-- END HTTP (" + bufferField.getSize() + "-byte body)");
276:            this.logger.log(C0128r.m618m("<-- HTTP FAILED: ", e10));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/logging/LoggingEventListener.java
38:        this.logger.log('[' + millis + " ms] " + str);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okio/C8838z.java
47:            logger.log(Level.WARNING, C0128r.m618m("Failed to close timed out socket ", this.socket), (Throwable) e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/tools/BuildMojo.java
220:                log.info("Skipping execution of JavaCPP Builder");
238:                    log.info(str5);
253:            log.info(sb12.toString());
272:            log.info(sb13.toString());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/tools/Builder.java
149:        System.out.println("JavaCPP version " + implementationVersion + "\nCopyright (C) 2011-2018 Samuel Audet <samuel.audet@gmail.com>\nProject site: https://github.com/bytedeco/javacpp");
150:        System.out.println();
151:        System.out.println("Usage: java -jar javacpp.jar [options] [class or package (suffixed with .* or .**)] [commands]");
152:        System.out.println();
153:        System.out.println("where options include:");
154:        System.out.println();
155:        System.out.println("    -classpath <path>      Load user classes from path");
156:        System.out.println("    -encoding <name>       Character encoding used for input and output files");
157:        System.out.println("    -d <directory>         Output all generated files to directory");
158:        System.out.println("    -o <name>              Output everything in a file named after given name");
159:        System.out.println("    -nogenerate            Do not try to generate C++ source files, only try to parse header files");
160:        System.out.println("    -nocompile             Do not compile or delete the generated C++ source files");
161:        System.out.println("    -nodelete              Do not delete generated C++ JNI files after compilation");
162:        System.out.println("    -header                Generate header file with declarations of callbacks functions");
163:        System.out.println("    -copylibs              Copy to output directory dependent libraries (link and preload)");
164:        System.out.println("    -copyresources         Copy to output directory resources listed in properties");
165:        System.out.println("    -jarprefix <prefix>    Also create a JAR file named \"<prefix>-<platform>.jar\"");
166:        System.out.println("    -properties <resource> Load all properties from resource");
167:        System.out.println("    -propertyfile <file>   Load all properties from file");
168:        System.out.println("    -D<property>=<value>   Set property to value");
169:        System.out.println("    -Xcompiler <option>    Pass option directly to compiler");
170:        System.out.println();
171:        System.out.println("and where optional commands include:");
172:        System.out.println();
173:        System.out.println("    -exec [args...]        After build, call java command on the first class");
174:        System.out.println();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/tools/Logger.java
20:        System.out.println(str);
24:        System.err.println("Error: " + str);
28:        System.out.println(str);
48:        System.err.println("Warning: " + str);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p001a0/C0002a.java
462:            Log.d("ExifInterface", "Currently unsupported");
932:        Log.d("ExifInterface", "Unsupported data type value");
985:                        Log.w("ExifInterface", "Invalid image: ExifInterface got an unsupported image format file(ExifInterface supports JPEG and some RAW image formats only) or a corrupted JPEG file to ExifInterface.", e10);
1070:            Log.d("ExifInterface", "The size of tag group[" + i10 + "]: " + this.f61f[i10].size());
1073:                Log.d("ExifInterface", "tagName: " + entry.getKey() + ", tagType: " + value.toString() + ", tagValue: '" + value.m75j(this.f63h) + "'");
1083:                Log.d("ExifInterface", "readExifSegment: Byte Align II");
1089:                Log.d("ExifInterface", "readExifSegment: Byte Align MM");
1171:                Log.d("ExifInterface", "Cannot perform swap since only one image data exists");
1182:                Log.d("ExifInterface", "First image does not contain valid size information");
1189:                Log.d("ExifInterface", "Second image does not contain valid size information");
1237:                Log.w("ExifInterface", "Invalid crop size values. cropSize=" + Arrays.toString(eVarArr));
1245:                Log.w("ExifInterface", "Invalid crop size values. cropSize=" + Arrays.toString(iArr));
1274:        Log.d("ExifInterface", "No image meets the size requirements of a thumbnail image.");
1329:                Log.d("ExifInterface", "getExifAttribute: Replacing TAG_ISO_SPEED_RATINGS with TAG_PHOTOGRAPHIC_SENSITIVITY.");
1401:                Log.d("ExifInterface", "Heif meta: " + str + "x" + str2 + ", rotation " + str3);
1489:                    Log.w("ExifInterface", "Invalid aspect frame values. frame=" + Arrays.toString(iArr));
1515:            Log.d("ExifInterface", "getPngAttributes starting with: " + bVar);
1578:            Log.d("ExifInterface", "numberOfDirectoryEntry: " + readInt);
1591:                    Log.d("ExifInterface", "Updated to length: " + ((int) readShort) + ", width: " + ((int) readShort2));
1649:            Log.d("ExifInterface", "getWebpAttributes starting with: " + bVar);
1721:            Log.d("ExifInterface", "Setting thumbnail attributes with offset: " + m74i + ", length: " + min);
1735:            Log.w("ExifInterface", "stripOffsets should not be null or have zero length.");
1739:            Log.w("ExifInterface", "stripByteCounts should not be null or have zero length.");
1743:            Log.w("ExifInterface", "stripOffsets and stripByteCounts should have same length.");
1765:                Log.d("ExifInterface", "Invalid strip offset value");
1826:                Log.d("ExifInterface", "Exception parsing HEIF file type box.", e);
2001:            Log.d("ExifInterface", "The file descriptor for the given input is not seekable");
2019:                    Log.w("ExifInterface", "GPS Timestamp format is not rational. format=" + m38f.f87a);
2029:                Log.w("ExifInterface", "Invalid GPS Timestamp array. array=" + Arrays.toString(eVarArr));
2068:                Log.w("ExifInterface", "Given data does not follow the structure of an Exif-only data.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p004a3/AbstractC0020i.java
77:                    Log.v("ViewTarget", "OnGlobalLayoutListener called attachStateListener=" + this);
120:                Log.i("ViewTarget", "Glide treats LayoutParams.WRAP_CONTENT as a request for an image the size of this device's screen dimensions. If you want to load the original image and are ok with the corresponding memory cost and OOMs (depending on the input size), use override(Target.SIZE_ORIGINAL). Otherwise, use LayoutParams.MATCH_PARENT, set layout_width and layout_height to fixed dimension, or use .override() with fixed dimensions.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p022b7/C1298a.java
99:            Log.w("SignInClientImpl", "Remote service probably died when signIn is called");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p024b9/C1317c.java
29:        Log.d("FirebasePerformance", str);
34:        Log.e("FirebasePerformance", str);
39:        Log.i("FirebasePerformance", str);
44:        Log.w("FirebasePerformance", str);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p026c0/C1329b.java
132:            Log.d("FragmentStrictMode", "Policy violation in " + name, violation);
149:        Log.e("FragmentStrictMode", "Policy violation with PENALTY_DEATH in " + str, violation);
156:            Log.d("FragmentManager", "StrictMode violation in " + violation.getFragment().getClass().getName(), violation);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p073d7/C7027h.java
59:            Log.w("MotionSpec", "Can't load animation resource ID #0x" + Integer.toHexString(i10), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p079e0/AbstractC7075a.java
36:            Log.w("WakefulBroadcastReceiv.", "No active wake lock id #" + intExtra);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p098f6/C7131a.java
53:            Log.d(this.f27922a, m31738c(str, objArr));
59:        Log.e(this.f27922a, m31738c(str, objArr));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p110g5/C7214k.java
54:            Log.w("RtpPcmReader", C4167p0.m20042C("Received RTP packet with unexpected sequence number. Expected: %d; received: %d.", Integer.valueOf(m31715b), Integer.valueOf(i10)));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p111g6/C7218b.java
63:                    Log.w("ConnectionTracker", "Attempted to bind to a service in a STOPPED package.");
74:            Log.w("ConnectionTracker", String.format("Duplicate binding with the same ServiceConnection: %s, %s, %s.", serviceConnection, str, intent.getAction()));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p113g8/C7228f.java
40:            Log.d(this.f28219a, str, th);
52:            Log.e(this.f28219a, str, th);
64:            Log.i(this.f28219a, str, th);
76:            Log.v(this.f28219a, str, th);
88:            Log.w(this.f28219a, str, th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p116h0/C7255a.java
187:                Log.v("LocalBroadcastManager", "Resolving type " + resolveTypeIfNeeded + " scheme " + scheme + " of intent " + intent);
192:                    Log.v("LocalBroadcastManager", "Action list: " + arrayList3);
199:                        Log.v("LocalBroadcastManager", "Matching against filter " + cVar.f28243a);
203:                            Log.v("LocalBroadcastManager", "  Filter's target already added");
219:                                Log.v("LocalBroadcastManager", "  Filter matched!  match=0x" + Integer.toHexString(match));
229:                            Log.v("LocalBroadcastManager", "  Filter did not match: " + (match != -4 ? match != -3 ? match != -2 ? match != -1 ? "unknown reason" : "type" : "data" : "action" : "category"));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p122h6/C7314g.java
21:            Log.e("CrashUtils", "Error adding exception to DropBox!", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p122h6/C7324q.java
25:                Log.d("UidVerifier", "Package manager can't find google play services package, defaulting to false");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p128i/C7347g.java
210:                Log.w("SupportMenuInflater", "Cannot instantiate class: " + str, e10);
244:                    Log.w("SupportMenuInflater", "Ignoring attribute 'itemActionViewLayout'. Action view already specified.");
330:                    Log.w("SupportMenuInflater", "Ignoring attribute 'actionProviderClass'. Action view already specified.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p129i0/C7350a.java
86:        Log.w("MediaButtonReceiver", "More than one BroadcastReceiver that handles android.intent.action.MEDIA_BUTTON was found, returning null.");
109:            Log.d("MediaButtonReceiver", "Ignore unsupported intent: " + intent);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p171l0/C8482c.java
213:                Log.i("DialogFragmentNavigator", "Dialog " + dialogInterfaceOnCancelListenerC0882e2 + " was dismissed while it was not the top of the back stack, popping all dialogs above this dismissed dialog");
236:            Log.i("DialogFragmentNavigator", "Ignoring navigate() call: FragmentManager has already saved its state");
274:            Log.i("DialogFragmentNavigator", "Ignoring popBackStack() call: FragmentManager has already saved its state");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p171l0/C8484e.java
186:            Log.i("FragmentNavigator", "Ignoring navigate() call: FragmentManager has already saved its state");
221:            Log.i("FragmentNavigator", "Ignoring popBackStack() call: FragmentManager has already saved its state");
230:                    Log.i("FragmentNavigator", "FragmentManager cannot save the state of the initial destination " + c1084j3);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p175l4/C8516a.java
15:            Log.d(m39405d, String.format(str2, obj));
23:            Log.d(m39405d, String.format(str2, objArr));
31:            Log.e(m39405d, str2, th);
44:            Log.i(m39405d, String.format(str2, obj));
52:            Log.w(m39405d, String.format(str2, obj));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p185m3/C8584a.java
93:            Log.e(f32889e, String.valueOf(e10.getMessage()));
123:            Log.e(f32889e, String.valueOf(e10.getMessage()));
138:            Log.e(f32889e, String.valueOf(e10.getMessage()));
149:            Log.e(f32889e, String.valueOf(e10.getMessage()));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p193n/C8648c.java
125:                Log.e("ConstraintSet", "transitionEasing syntax error syntax:transitionEasing=\"cubic(1.0,0.5,0.0,0.6)\" or " + Arrays.toString(f33147c));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p209o3/C8745l0.java
48:            Log.d("RemoteConfig", "Fetch and activate succeeded");
51:            Log.e("RemoteConfigError", String.valueOf(mo25307k != null ? mo25307k.getMessage() : null));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p223p2/EnumC8904h.java
26:        Log.e("TokenError", "getErrorFromValue: mapping not found for error value :" + i10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p245r0/C9239b.java
41:        Log.v("Trace", "Unable to call " + str + " via reflection", exc);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p247r2/C9249a.java
452:                System.out.println("DiskLruCache " + file + " is corrupt: " + e10.getMessage() + ", removing");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p252r7/C9398d.java
201:                Log.d("TextAppearance", "Error loading font " + this.f36330d, e10);
236:            Log.d("TextAppearance", "Error loading font " + this.f36330d, e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p265s7/C9604b.java
89:            Log.w(f36931l, "Use a non-transparent color for the default color as it will be used to finish ripple animations.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p271t2/C9689h.java
90:            Log.v("ImageDecoder", "Resizing from [" + size.getWidth() + "x" + size.getHeight() + "] to [" + round + "x" + round2 + "] scaleFactor: " + mo11427b);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p281u/C9814d.java
91:                Log.w("InputConnectionCompat", "Can't insert content from IME; requestPermission() failed", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p287u5/C9825a.java
140:                Log.i("AdvertisingIdClient", "GMS remote exception ", e11);
178:                Log.i("AdvertisingIdClient", "AdvertisingIdClient unbindService failed.", th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p287u5/C9828d.java
26:                        Log.w("HttpUrlPinger", sb2.toString());
44:            Log.w("HttpUrlPinger", sb3.toString(), e);
53:            Log.w("HttpUrlPinger", sb4.toString(), e11);
63:            Log.w("HttpUrlPinger", sb32.toString(), e);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p312w6/BinderC10053y0.java
25:                Log.v("Fitness", "Received batch result " + this.f37829b);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p324x5/C10088g.java
43:            Log.i("GACSignInLoader", "Unexpected InterruptedException", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p334y2/C10166d.java
88:            Log.d("ManifestParser", "Loading Glide modules");
95:                    Log.d("ManifestParser", "Got null app info metadata");
100:                Log.v("ManifestParser", "Got app info metadata: " + applicationInfo.metaData);
106:                        Log.d("ManifestParser", "Loaded Glide module: " + str);
111:                Log.d("ManifestParser", "Finished loading Glide modules");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p335y3/C10169c.java
116:                System.out.println((Object) ("STEPS LAST WEEK: " + dataPoint.m21929r0(c8597c).m39589n0()));
121:                System.out.println((Object) ("CALORIES LAST WEEK: " + m8724a6));
132:                System.out.println((Object) ("STEPS BEFORE LAST WEEK: " + dataPoint.m21929r0(c8597c3).m39589n0()));
137:                System.out.println((Object) ("CALORIES BEFORE LAST WEEK: " + m8724a2));

[+] Total file sources are: 298 & its total instances are: 1192 

[!] QuickNote:
    - It is recommended that any sensitive data should not be part of the log's output or revealed into Stacktraces, if observed.

[*] Reference:
    - OWASP MASVS: MSTG-STORAGE-3 | CWE-532: Insertion of Sensitive Information into Log File
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x07-v2-data_storage_and_privacy_requirements

==>> The Push Notification instances...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/app/C0519y.java
56:        builder.setWhen(notification.when).setSmallIcon(notification.icon, notification.iconLevel).setContent(notification.contentView).setTicker(notification.tickerText, dVar.f3633i).setVibrate(notification.vibrate).setLights(notification.ledARGB, notification.ledOnMS, notification.ledOffMS).setOngoing((notification.flags & 2) != 0).setOnlyAlertOnce((notification.flags & 8) != 0).setAutoCancel((notification.flags & 16) != 0).setDefaults(notification.defaults).setContentTitle(dVar.f3629e).setContentText(dVar.f3630f).setContentInfo(dVar.f3635k).setContentIntent(dVar.f3631g).setDeleteIntent(notification.deleteIntent).setFullScreenIntent(dVar.f3632h, (notification.flags & 128) != 0).setLargeIcon(dVar.f3634j).setNumber(dVar.f3636l).setProgress(dVar.f3644t, dVar.f3645u, dVar.f3646v);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/play/core/assetpacks/ExtractionForegroundService.java
7:import android.app.NotificationManager;
28:    NotificationManager f24763s;
40:        timeoutAfter.setSmallIcon(R.drawable.stat_sys_download).setOngoing(false).setContentTitle(stringExtra).setSubText(stringExtra2);
72:        this.f24763s = (NotificationManager) this.f24761q.getSystemService("notification");

[!] QuickNote:
    - It is recommended that any sensitive data should not be notified via the push notifications, if observed. Please note that, It would be necessary to understand how the application is generating the notifications and which data ends up being shown.

[*] Reference:
    - OWASP MASVS: MSTG-STORAGE-4 | CWE-829: Inclusion of Functionality from Untrusted Control Sphere
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x07-v2-data_storage_and_privacy_requirements

==>> The Keyboard Cache instances...


==>>  The Sensitive Data Disclosure through the User Interface...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/resources/res/layout/fragment_change_password.xml
49:                android:inputType="textPassword"
69:                android:inputType="textPassword"

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/resources/res/layout/fragment_email_and_password.xml
90:                    android:inputType="textPassword"

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/resources/res/layout/fragment_reset_password.xml
161:                android:inputType="textPassword"

[!] QuickNote:
    - It seems that the application has implemented inputType="textPassword" attribute to hide the certain information, if observed. Make sure that the application is not disclosing any sensitive data such as password, card details, etc. in the clear-text format via User Interface.

[*] Reference:
    - OWASP MASVS: MSTG-STORAGE-7 | CWE-359: Exposure of Private Personal Information to an Unauthorized Actor
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x07-v2-data_storage_and_privacy_requirements

==>>  The allowBackup flag configuration...

    - android:allowBackup="true" flag has not been observed in the AndroidManifest.xml file.

==>> The Auto-Generated Screenshots protection...

[!] QuickNote:
    - It is recommended to set the FLAG_SECURE option to protect from Auto-Generated Screenshots issue. Please note that, When the application goes into background, a screenshot of the current activity is taken which may leak sensitive information.

[*] Reference:
    - OWASP MASVS: MSTG-STORAGE-9 | CWE-200: Exposure of Sensitive Information to an Unauthorized Actor
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x07-v2-data_storage_and_privacy_requirements

==>> The flush instances utilized for clearing the Memory...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/auth/policy/internal/JsonPolicyWriter.java
131:        this.jsonWriter.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/http/UrlHttpClient.java
246:                outputStream.flush();
256:        outputStream.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/util/json/GsonFactory.java
180:            this.writer.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/util/json/JsonUtils.java
114:                    jsonWriter.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/music/playback/p059e/p060b/AbstractC1910b.java
860:            this.f10203F.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/music/playback/queue/C1941g.java
195:            objectOutputStream.flush();
219:            objectOutputStream.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/music/playback/reporting/C1949e.java
134:        jsonWriter.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/data/C1978c.java
67:        this.f10605p.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/resource/gif/C2122j.java
44:                    byteArrayOutputStream.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/carolinegirvan/mobile/features/onboarding/viewmodels/ProfilePictureViewModel.java
464:                fileOutputStream.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/audio/C3573l0.java
266:            this.f15283X0.flush();
300:            this.f15283X0.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/audio/DefaultAudioSink.java
229:                this.f15179p.flush();
832:            audioProcessor.flush();
1128:                audioProcessor.flush();
1719:            this.f15173u.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/mediacodec/C3800b.java
223:        this.f16778a.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/mediacodec/C3824z.java
128:        this.f16853a.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/mediacodec/MediaCodecRenderer.java
1092:            this.f16736Z.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/metadata/emsg/C3834c.java
43:            this.f16870b.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/text/C4085p.java
166:            ((InterfaceC4079j) C4136a.m19828e(this.f18597L)).flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/play/core/internal/C6425n.java
162:                outputStream.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/settings/C6660a.java
87:                fileWriter.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/remoteconfig/internal/ConfigFetchHttpClient.java
227:        bufferedOutputStream.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/gson/stream/C6892c.java
317:        this.f26685p.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/p037a/p038a/p039a/p040a/C1379h.java
224:                this.f8172p.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/p037a/p038a/p039a/p046e/AbstractC1440b.java
795:            this.f8882F.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/io/jsonwebtoken/impl/compression/AbstractCompressionCodec.java
65:            wrap.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/io/jsonwebtoken/impl/compression/DeflateCompressionCodec.java
50:                    inflaterOutputStream.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/Cache.java
238:        this.cache.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/cache/DiskLruCache.java
725:            interfaceC8813d.flush();
740:        interfaceC8813d.flush();
775:            interfaceC8813d.flush();
818:            interfaceC8813d.flush();
975:                interfaceC8813d.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/cache/FaultHidingSink.java
47:            super.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/connection/Exchange.java
81:                super.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/http1/Http1ExchangeCodec.java
137:            this.this$0.sink.flush();
341:            this.this$0.sink.flush();
499:        this.sink.flush();
504:        this.sink.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/http2/Http2Connection.java
878:        this.writer.flush();
1485:            r11.flush()

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/http2/Http2ExchangeCodec.java
157:        this.http2Connection.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/http2/Http2Stream.java
701:            this.connection.flush();
787:                Http2Stream.this.getConnection().flush();
805:                Http2Stream.this.getConnection().flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/http2/Http2Writer.java
56:        this.sink.flush();
75:            this.sink.flush();
99:        this.sink.flush();
138:        this.sink.flush();
172:        this.sink.flush();
202:        this.sink.flush();
220:        this.sink.flush();
232:        this.sink.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/p219ws/MessageDeflater.java
51:        this.deflaterSink.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/p219ws/WebSocketWriter.java
75:        this.sink.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okio/AbstractC8820h.java
35:        this.delegate.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okio/C8807a.java
205:                interfaceC8837y.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okio/DeflaterSink.java
104:        this.sink.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okio/sink.java
33:        this.out.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p008a7/C0090x.java
28:                        objectOutputStream.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p071d5/C7006d.java
706:        newSerializer.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p075d9/C7033b.java
49:            this.f27535p.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p134i5/C7361a.java
668:        super.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p134i5/C7363c.java
1081:        super.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p246r1/C9247g.java
97:                        fileOutputStream.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p247r2/C9249a.java
415:            writer.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p277t8/C9790e.java
283:        this.f37356c.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p343yb/C10190a.java
101:            printWriter.flush();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p346z1/C10206j.java
101:            objectOutputStream.flush();

[!] QuickNote:
    - It is recommended that the sensitive data should be flushed appropriately after its usage. Please note that, all the sensitive data should be removed from memory as soon as possible.

[*] Reference:
    - OWASP MASVS: MSTG-STORAGE-10 | CWE-316: Cleartext Storage of Sensitive Information in Memory
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x07-v2-data_storage_and_privacy_requirements

==>> The Clipboard Copying instances...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amplifyframework/devmenu/DeveloperMenu.java
4:import android.content.ClipboardManager;
43:        ((ClipboardManager) this.context.getSystemService("clipboard")).setPrimaryClip(ClipData.newPlainText("Copied Text", str));

[!] QuickNote:
    - It is recommended that any sensitive data should not be copied to the clipboard. Please note that, The data can be accessed by other malicious applications if copied to the clipboard.

[*] Reference:
    - OWASP MASVS: MSTG-STORAGE-10 | CWE-316: Cleartext Storage of Sensitive Information in Memory
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x07-v2-data_storage_and_privacy_requirements

==>> The possible Hard-coded Information...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/auth/CognitoCredentialsProvider.java
179:        return Regions.CN_NORTH_1.getName().equals(this.region) ? "cognito-identity.cn-north-1.amazonaws.com.cn" : "cognito-identity.amazonaws.com";

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/auth/policy/Principal.java
17:        AWSDataPipeline("datapipeline.amazonaws.com"),
18:        AmazonElasticTranscoder("elastictranscoder.amazonaws.com"),
19:        AmazonEC2("ec2.amazonaws.com"),
20:        AWSOpsWorks("opsworks.amazonaws.com"),
21:        AWSCloudHSM("cloudhsm.amazonaws.com"),

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/cognito/clientcontext/data/UserContextDataProvider.java
24:        private static final String USERNAME = "username";

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobile/client/AWSMobileClient.java
274:                            AWSMobileClient.this.userpoolsLoginKey = String.format("cognito-idp.%s.amazonaws.com/%s", optJsonObject.m43820l("Region"), optJsonObject.m43820l("PoolId"));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobile/client/IdentityProvider.java
9:    DEVELOPER("cognito-identity.amazonaws.com");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/regions/RegionDefaults.java
16:        updateRegion(region, ServiceAbbreviations.Autoscaling, "autoscaling.af-south-1.amazonaws.com", false, true);
17:        updateRegion(region, ServiceAbbreviations.Dynamodb, "dynamodb.af-south-1.amazonaws.com", false, true);
18:        updateRegion(region, ServiceAbbreviations.EC2, "ec2.af-south-1.amazonaws.com", false, true);
19:        updateRegion(region, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.af-south-1.amazonaws.com", false, true);
20:        updateRegion(region, "kms", "kms.af-south-1.amazonaws.com", false, true);
21:        updateRegion(region, "lambda", "lambda.af-south-1.amazonaws.com", false, true);
22:        updateRegion(region, "logs", "logs.af-south-1.amazonaws.com", false, true);
23:        updateRegion(region, ServiceAbbreviations.f9824S3, "s3.af-south-1.amazonaws.com", false, true);
24:        updateRegion(region, ServiceAbbreviations.SNS, "sns.af-south-1.amazonaws.com", false, true);
25:        updateRegion(region, ServiceAbbreviations.SQS, "sqs.af-south-1.amazonaws.com", false, true);
26:        updateRegion(region, ServiceAbbreviations.STS, "sts.af-south-1.amazonaws.com", false, true);
29:        updateRegion(region2, ServiceAbbreviations.Autoscaling, "autoscaling.ap-northeast-1.amazonaws.com", false, true);
30:        updateRegion(region2, "cognito-identity", "cognito-identity.ap-northeast-1.amazonaws.com", false, true);
31:        updateRegion(region2, "cognito-idp", "cognito-idp.ap-northeast-1.amazonaws.com", false, true);
32:        updateRegion(region2, "cognito-sync", "cognito-sync.ap-northeast-1.amazonaws.com", false, true);
33:        updateRegion(region2, "data.iot", "data.iot.ap-northeast-1.amazonaws.com", false, true);
34:        updateRegion(region2, ServiceAbbreviations.Dynamodb, "dynamodb.ap-northeast-1.amazonaws.com", false, true);
35:        updateRegion(region2, ServiceAbbreviations.EC2, "ec2.ap-northeast-1.amazonaws.com", false, true);
36:        updateRegion(region2, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-northeast-1.amazonaws.com", false, true);
37:        updateRegion(region2, "firehose", "firehose.ap-northeast-1.amazonaws.com", false, true);
38:        updateRegion(region2, "iot", "iot.ap-northeast-1.amazonaws.com", false, true);
39:        updateRegion(region2, "kinesis", "kinesis.ap-northeast-1.amazonaws.com", false, true);
40:        updateRegion(region2, "kms", "kms.ap-northeast-1.amazonaws.com", false, true);
41:        updateRegion(region2, "lambda", "lambda.ap-northeast-1.amazonaws.com", false, true);
42:        updateRegion(region2, "logs", "logs.ap-northeast-1.amazonaws.com", false, true);
43:        updateRegion(region2, "polly", "polly.ap-northeast-1.amazonaws.com", false, true);
44:        updateRegion(region2, ServiceAbbreviations.f9824S3, "s3.ap-northeast-1.amazonaws.com", false, true);
45:        updateRegion(region2, ServiceAbbreviations.SimpleDB, "sdb.ap-northeast-1.amazonaws.com", false, true);
46:        updateRegion(region2, ServiceAbbreviations.SNS, "sns.ap-northeast-1.amazonaws.com", false, true);
47:        updateRegion(region2, ServiceAbbreviations.SQS, "sqs.ap-northeast-1.amazonaws.com", false, true);
48:        updateRegion(region2, ServiceAbbreviations.STS, "sts.ap-northeast-1.amazonaws.com", false, true);
51:        updateRegion(region3, ServiceAbbreviations.Autoscaling, "autoscaling.ap-northeast-2.amazonaws.com", false, true);
52:        updateRegion(region3, "cognito-identity", "cognito-identity.ap-northeast-2.amazonaws.com", false, true);
53:        updateRegion(region3, "cognito-idp", "cognito-idp.ap-northeast-2.amazonaws.com", false, true);
54:        updateRegion(region3, "cognito-sync", "cognito-sync.ap-northeast-2.amazonaws.com", false, true);
55:        updateRegion(region3, "data.iot", "data.iot.ap-northeast-2.amazonaws.com", false, true);
56:        updateRegion(region3, ServiceAbbreviations.Dynamodb, "dynamodb.ap-northeast-2.amazonaws.com", false, true);
57:        updateRegion(region3, ServiceAbbreviations.EC2, "ec2.ap-northeast-2.amazonaws.com", false, true);
58:        updateRegion(region3, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-northeast-2.amazonaws.com", false, true);
59:        updateRegion(region3, "iot", "iot.ap-northeast-2.amazonaws.com", false, true);
60:        updateRegion(region3, "kinesis", "kinesis.ap-northeast-2.amazonaws.com", false, true);
61:        updateRegion(region3, "kms", "kms.ap-northeast-2.amazonaws.com", false, true);
62:        updateRegion(region3, "lambda", "lambda.ap-northeast-2.amazonaws.com", false, true);
63:        updateRegion(region3, "logs", "logs.ap-northeast-2.amazonaws.com", false, true);
64:        updateRegion(region3, "polly", "polly.ap-northeast-2.amazonaws.com", false, true);
65:        updateRegion(region3, ServiceAbbreviations.f9824S3, "s3.ap-northeast-2.amazonaws.com", false, true);
66:        updateRegion(region3, ServiceAbbreviations.SNS, "sns.ap-northeast-2.amazonaws.com", false, true);
67:        updateRegion(region3, ServiceAbbreviations.SQS, "sqs.ap-northeast-2.amazonaws.com", false, true);
68:        updateRegion(region3, ServiceAbbreviations.STS, "sts.ap-northeast-2.amazonaws.com", false, true);
71:        updateRegion(region4, ServiceAbbreviations.Autoscaling, "autoscaling.ap-south-1.amazonaws.com", false, true);
72:        updateRegion(region4, "cognito-identity", "cognito-identity.ap-south-1.amazonaws.com", false, true);
73:        updateRegion(region4, "cognito-idp", "cognito-idp.ap-south-1.amazonaws.com", false, true);
74:        updateRegion(region4, "cognito-sync", "cognito-sync.ap-south-1.amazonaws.com", false, true);
75:        updateRegion(region4, ServiceAbbreviations.Dynamodb, "dynamodb.ap-south-1.amazonaws.com", false, true);
76:        updateRegion(region4, ServiceAbbreviations.EC2, "ec2.ap-south-1.amazonaws.com", false, true);
77:        updateRegion(region4, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-south-1.amazonaws.com", false, true);
78:        updateRegion(region4, "kinesis", "kinesis.ap-south-1.amazonaws.com", false, true);
79:        updateRegion(region4, "kms", "kms.ap-south-1.amazonaws.com", false, true);
80:        updateRegion(region4, "lambda", "lambda.ap-south-1.amazonaws.com", false, true);
81:        updateRegion(region4, "logs", "logs.ap-south-1.amazonaws.com", false, true);
82:        updateRegion(region4, "polly", "polly.ap-south-1.amazonaws.com", false, true);
83:        updateRegion(region4, ServiceAbbreviations.f9824S3, "s3.ap-south-1.amazonaws.com", false, true);
84:        updateRegion(region4, ServiceAbbreviations.SNS, "sns.ap-south-1.amazonaws.com", false, true);
85:        updateRegion(region4, ServiceAbbreviations.SQS, "sqs.ap-south-1.amazonaws.com", false, true);
86:        updateRegion(region4, ServiceAbbreviations.STS, "sts.ap-south-1.amazonaws.com", false, true);
89:        updateRegion(region5, ServiceAbbreviations.Autoscaling, "autoscaling.ap-southeast-1.amazonaws.com", false, true);
90:        updateRegion(region5, "cognito-identity", "cognito-identity.ap-southeast-1.amazonaws.com", false, true);
91:        updateRegion(region5, "cognito-idp", "cognito-idp.ap-southeast-1.amazonaws.com", false, true);
92:        updateRegion(region5, "cognito-sync", "cognito-sync.ap-southeast-1.amazonaws.com", false, true);
93:        updateRegion(region5, "data.iot", "data.iot.ap-southeast-1.amazonaws.com", false, true);
94:        updateRegion(region5, ServiceAbbreviations.Dynamodb, "dynamodb.ap-southeast-1.amazonaws.com", false, true);
95:        updateRegion(region5, ServiceAbbreviations.EC2, "ec2.ap-southeast-1.amazonaws.com", false, true);
96:        updateRegion(region5, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-southeast-1.amazonaws.com", false, true);
97:        updateRegion(region5, "iot", "iot.ap-southeast-1.amazonaws.com", false, true);
98:        updateRegion(region5, "kinesis", "kinesis.ap-southeast-1.amazonaws.com", false, true);
99:        updateRegion(region5, "kms", "kms.ap-southeast-1.amazonaws.com", false, true);
100:        updateRegion(region5, "lambda", "lambda.ap-southeast-1.amazonaws.com", false, true);
101:        updateRegion(region5, "logs", "logs.ap-southeast-1.amazonaws.com", false, true);
102:        updateRegion(region5, "polly", "polly.ap-southeast-1.amazonaws.com", false, true);
103:        updateRegion(region5, ServiceAbbreviations.f9824S3, "s3.ap-southeast-1.amazonaws.com", false, true);
104:        updateRegion(region5, ServiceAbbreviations.SimpleDB, "sdb.ap-southeast-1.amazonaws.com", false, true);
105:        updateRegion(region5, ServiceAbbreviations.SNS, "sns.ap-southeast-1.amazonaws.com", false, true);
106:        updateRegion(region5, ServiceAbbreviations.SQS, "sqs.ap-southeast-1.amazonaws.com", false, true);
107:        updateRegion(region5, ServiceAbbreviations.STS, "sts.ap-southeast-1.amazonaws.com", false, true);
110:        updateRegion(region6, ServiceAbbreviations.Autoscaling, "autoscaling.ap-southeast-2.amazonaws.com", false, true);
111:        updateRegion(region6, "cognito-identity", "cognito-identity.ap-southeast-2.amazonaws.com", false, true);
112:        updateRegion(region6, "cognito-idp", "cognito-idp.ap-southeast-2.amazonaws.com", false, true);
113:        updateRegion(region6, "cognito-sync", "cognito-sync.ap-southeast-2.amazonaws.com", false, true);
114:        updateRegion(region6, "data.iot", "data.iot.ap-southeast-2.amazonaws.com", false, true);
115:        updateRegion(region6, ServiceAbbreviations.Dynamodb, "dynamodb.ap-southeast-2.amazonaws.com", false, true);
116:        updateRegion(region6, ServiceAbbreviations.EC2, "ec2.ap-southeast-2.amazonaws.com", false, true);
117:        updateRegion(region6, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-southeast-2.amazonaws.com", false, true);
118:        updateRegion(region6, "iot", "iot.ap-southeast-2.amazonaws.com", false, true);
119:        updateRegion(region6, "kinesis", "kinesis.ap-southeast-2.amazonaws.com", false, true);
120:        updateRegion(region6, "kms", "kms.ap-southeast-2.amazonaws.com", false, true);
121:        updateRegion(region6, "lambda", "lambda.ap-southeast-2.amazonaws.com", false, true);
122:        updateRegion(region6, "logs", "logs.ap-southeast-2.amazonaws.com", false, true);
123:        updateRegion(region6, "polly", "polly.ap-southeast-2.amazonaws.com", false, true);
124:        updateRegion(region6, ServiceAbbreviations.f9824S3, "s3.ap-southeast-2.amazonaws.com", false, true);
125:        updateRegion(region6, ServiceAbbreviations.SimpleDB, "sdb.ap-southeast-2.amazonaws.com", false, true);
126:        updateRegion(region6, ServiceAbbreviations.SNS, "sns.ap-southeast-2.amazonaws.com", false, true);
127:        updateRegion(region6, ServiceAbbreviations.SQS, "sqs.ap-southeast-2.amazonaws.com", false, true);
128:        updateRegion(region6, ServiceAbbreviations.STS, "sts.ap-southeast-2.amazonaws.com", false, true);
131:        updateRegion(region7, ServiceAbbreviations.Autoscaling, "autoscaling.ca-central-1.amazonaws.com", false, true);
132:        updateRegion(region7, ServiceAbbreviations.Dynamodb, "dynamodb.ca-central-1.amazonaws.com", false, true);
133:        updateRegion(region7, ServiceAbbreviations.EC2, "ec2.ca-central-1.amazonaws.com", false, true);
134:        updateRegion(region7, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ca-central-1.amazonaws.com", false, true);
135:        updateRegion(region7, "kinesis", "kinesis.ca-central-1.amazonaws.com", false, true);
136:        updateRegion(region7, "kms", "kms.ca-central-1.amazonaws.com", false, true);
137:        updateRegion(region7, "lambda", "lambda.ca-central-1.amazonaws.com", false, true);
138:        updateRegion(region7, "logs", "logs.ca-central-1.amazonaws.com", false, true);
139:        updateRegion(region7, "polly", "polly.ca-central-1.amazonaws.com", false, true);
140:        updateRegion(region7, ServiceAbbreviations.f9824S3, "s3.ca-central-1.amazonaws.com", false, true);
141:        updateRegion(region7, ServiceAbbreviations.SNS, "sns.ca-central-1.amazonaws.com", false, true);
142:        updateRegion(region7, ServiceAbbreviations.SQS, "sqs.ca-central-1.amazonaws.com", false, true);
143:        updateRegion(region7, ServiceAbbreviations.STS, "sts.ca-central-1.amazonaws.com", false, true);
146:        updateRegion(region8, ServiceAbbreviations.Autoscaling, "autoscaling.eu-central-1.amazonaws.com", false, true);
147:        updateRegion(region8, "cognito-identity", "cognito-identity.eu-central-1.amazonaws.com", false, true);
148:        updateRegion(region8, "cognito-idp", "cognito-idp.eu-central-1.amazonaws.com", false, true);
149:        updateRegion(region8, "cognito-sync", "cognito-sync.eu-central-1.amazonaws.com", false, true);
150:        updateRegion(region8, "data.iot", "data.iot.eu-central-1.amazonaws.com", false, true);
151:        updateRegion(region8, ServiceAbbreviations.Dynamodb, "dynamodb.eu-central-1.amazonaws.com", false, true);
152:        updateRegion(region8, ServiceAbbreviations.EC2, "ec2.eu-central-1.amazonaws.com", false, true);
153:        updateRegion(region8, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-central-1.amazonaws.com", false, true);
154:        updateRegion(region8, "firehose", "firehose.eu-central-1.amazonaws.com", false, true);
155:        updateRegion(region8, "iot", "iot.eu-central-1.amazonaws.com", false, true);
156:        updateRegion(region8, "kinesis", "kinesis.eu-central-1.amazonaws.com", false, true);
157:        updateRegion(region8, "kms", "kms.eu-central-1.amazonaws.com", false, true);
158:        updateRegion(region8, "lambda", "lambda.eu-central-1.amazonaws.com", false, true);
159:        updateRegion(region8, "logs", "logs.eu-central-1.amazonaws.com", false, true);
160:        updateRegion(region8, "polly", "polly.eu-central-1.amazonaws.com", false, true);
161:        updateRegion(region8, ServiceAbbreviations.f9824S3, "s3.eu-central-1.amazonaws.com", false, true);
162:        updateRegion(region8, ServiceAbbreviations.SNS, "sns.eu-central-1.amazonaws.com", false, true);
163:        updateRegion(region8, ServiceAbbreviations.SQS, "sqs.eu-central-1.amazonaws.com", false, true);
164:        updateRegion(region8, ServiceAbbreviations.STS, "sts.eu-central-1.amazonaws.com", false, true);
167:        updateRegion(region9, ServiceAbbreviations.Autoscaling, "autoscaling.eu-south-1.amazonaws.com", false, true);
168:        updateRegion(region9, ServiceAbbreviations.Dynamodb, "dynamodb.eu-south-1.amazonaws.com", false, true);
169:        updateRegion(region9, ServiceAbbreviations.EC2, "ec2.eu-south-1.amazonaws.com", false, true);
170:        updateRegion(region9, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-south-1.amazonaws.com", false, true);
171:        updateRegion(region9, "lambda", "lambda.eu-south-1.amazonaws.com", false, true);
172:        updateRegion(region9, "logs", "logs.eu-south-1.amazonaws.com", false, true);
173:        updateRegion(region9, ServiceAbbreviations.f9824S3, "s3.eu-south-1.amazonaws.com", false, true);
174:        updateRegion(region9, ServiceAbbreviations.SNS, "sns.eu-south-1.amazonaws.com", false, true);
175:        updateRegion(region9, ServiceAbbreviations.SQS, "sqs.eu-south-1.amazonaws.com", false, true);
176:        updateRegion(region9, ServiceAbbreviations.STS, "sts.eu-south-1.amazonaws.com", false, true);
179:        updateRegion(region10, ServiceAbbreviations.Autoscaling, "autoscaling.eu-west-1.amazonaws.com", false, true);
180:        updateRegion(region10, "cognito-identity", "cognito-identity.eu-west-1.amazonaws.com", false, true);
181:        updateRegion(region10, "cognito-idp", "cognito-idp.eu-west-1.amazonaws.com", false, true);
182:        updateRegion(region10, "cognito-sync", "cognito-sync.eu-west-1.amazonaws.com", false, true);
183:        updateRegion(region10, "data.iot", "data.iot.eu-west-1.amazonaws.com", false, true);
184:        updateRegion(region10, ServiceAbbreviations.Dynamodb, "dynamodb.eu-west-1.amazonaws.com", false, true);
185:        updateRegion(region10, ServiceAbbreviations.EC2, "ec2.eu-west-1.amazonaws.com", false, true);
186:        updateRegion(region10, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-west-1.amazonaws.com", false, true);
187:        updateRegion(region10, ServiceAbbreviations.Email, "email.eu-west-1.amazonaws.com", false, true);
188:        updateRegion(region10, "firehose", "firehose.eu-west-1.amazonaws.com", false, true);
189:        updateRegion(region10, "iot", "iot.eu-west-1.amazonaws.com", false, true);
190:        updateRegion(region10, "kinesis", "kinesis.eu-west-1.amazonaws.com", false, true);
191:        updateRegion(region10, "kms", "kms.eu-west-1.amazonaws.com", false, true);
192:        updateRegion(region10, "lambda", "lambda.eu-west-1.amazonaws.com", false, true);
193:        updateRegion(region10, "logs", "logs.eu-west-1.amazonaws.com", false, true);
194:        updateRegion(region10, "machinelearning", "machinelearning.eu-west-1.amazonaws.com", false, true);
195:        updateRegion(region10, "polly", "polly.eu-west-1.amazonaws.com", false, true);
196:        updateRegion(region10, "rekognition", "rekognition.eu-west-1.amazonaws.com", false, true);
197:        updateRegion(region10, ServiceAbbreviations.f9824S3, "s3.eu-west-1.amazonaws.com", false, true);
198:        updateRegion(region10, ServiceAbbreviations.SimpleDB, "sdb.eu-west-1.amazonaws.com", false, true);
199:        updateRegion(region10, ServiceAbbreviations.SNS, "sns.eu-west-1.amazonaws.com", false, true);
200:        updateRegion(region10, ServiceAbbreviations.SQS, "sqs.eu-west-1.amazonaws.com", false, true);
201:        updateRegion(region10, ServiceAbbreviations.STS, "sts.eu-west-1.amazonaws.com", false, true);
204:        updateRegion(region11, ServiceAbbreviations.Autoscaling, "autoscaling.eu-west-2.amazonaws.com", false, true);
205:        updateRegion(region11, "cognito-identity", "cognito-identity.eu-west-2.amazonaws.com", false, true);
206:        updateRegion(region11, "cognito-idp", "cognito-idp.eu-west-2.amazonaws.com", false, true);
207:        updateRegion(region11, "cognito-sync", "cognito-sync.eu-west-2.amazonaws.com", false, true);
208:        updateRegion(region11, ServiceAbbreviations.Dynamodb, "dynamodb.eu-west-2.amazonaws.com", false, true);
209:        updateRegion(region11, ServiceAbbreviations.EC2, "ec2.eu-west-2.amazonaws.com", false, true);
210:        updateRegion(region11, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-west-2.amazonaws.com", false, true);
211:        updateRegion(region11, "iot", "iot.eu-west-2.amazonaws.com", false, true);
212:        updateRegion(region11, "kinesis", "kinesis.eu-west-2.amazonaws.com", false, true);
213:        updateRegion(region11, "kms", "kms.eu-west-2.amazonaws.com", false, true);
214:        updateRegion(region11, "lambda", "lambda.eu-west-2.amazonaws.com", false, true);
215:        updateRegion(region11, "logs", "logs.eu-west-2.amazonaws.com", false, true);
216:        updateRegion(region11, "polly", "polly.eu-west-2.amazonaws.com", false, true);
217:        updateRegion(region11, ServiceAbbreviations.f9824S3, "s3.eu-west-2.amazonaws.com", false, true);
218:        updateRegion(region11, ServiceAbbreviations.SNS, "sns.eu-west-2.amazonaws.com", false, true);
219:        updateRegion(region11, ServiceAbbreviations.SQS, "sqs.eu-west-2.amazonaws.com", false, true);
220:        updateRegion(region11, ServiceAbbreviations.STS, "sts.eu-west-2.amazonaws.com", false, true);
223:        updateRegion(region12, ServiceAbbreviations.Autoscaling, "autoscaling.eu-west-3.amazonaws.com", false, true);
224:        updateRegion(region12, ServiceAbbreviations.Dynamodb, "dynamodb.eu-west-3.amazonaws.com", false, true);
225:        updateRegion(region12, ServiceAbbreviations.EC2, "ec2.eu-west-3.amazonaws.com", false, true);
226:        updateRegion(region12, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-west-3.amazonaws.com", false, true);
227:        updateRegion(region12, "kinesis", "kinesis.eu-west-3.amazonaws.com", false, true);
228:        updateRegion(region12, "kms", "kms.eu-west-3.amazonaws.com", false, true);
229:        updateRegion(region12, "lambda", "lambda.eu-west-3.amazonaws.com", false, true);
230:        updateRegion(region12, "logs", "logs.eu-west-3.amazonaws.com", false, true);
231:        updateRegion(region12, "polly", "polly.eu-west-3.amazonaws.com", false, true);
232:        updateRegion(region12, ServiceAbbreviations.f9824S3, "s3.eu-west-3.amazonaws.com", false, true);
233:        updateRegion(region12, ServiceAbbreviations.SNS, "sns.eu-west-3.amazonaws.com", false, true);
234:        updateRegion(region12, ServiceAbbreviations.SQS, "sqs.eu-west-3.amazonaws.com", false, true);
235:        updateRegion(region12, ServiceAbbreviations.STS, "sts.eu-west-3.amazonaws.com", false, true);
238:        updateRegion(region13, ServiceAbbreviations.Autoscaling, "autoscaling.sa-east-1.amazonaws.com", false, true);
239:        updateRegion(region13, ServiceAbbreviations.Dynamodb, "dynamodb.sa-east-1.amazonaws.com", false, true);
240:        updateRegion(region13, ServiceAbbreviations.EC2, "ec2.sa-east-1.amazonaws.com", false, true);
241:        updateRegion(region13, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.sa-east-1.amazonaws.com", false, true);
242:        updateRegion(region13, "kinesis", "kinesis.sa-east-1.amazonaws.com", false, true);
243:        updateRegion(region13, "kms", "kms.sa-east-1.amazonaws.com", false, true);
244:        updateRegion(region13, "lambda", "lambda.sa-east-1.amazonaws.com", false, true);
245:        updateRegion(region13, "logs", "logs.sa-east-1.amazonaws.com", false, true);
246:        updateRegion(region13, "polly", "polly.sa-east-1.amazonaws.com", false, true);
247:        updateRegion(region13, ServiceAbbreviations.f9824S3, "s3.sa-east-1.amazonaws.com", false, true);
248:        updateRegion(region13, ServiceAbbreviations.SimpleDB, "sdb.sa-east-1.amazonaws.com", false, true);
249:        updateRegion(region13, ServiceAbbreviations.SNS, "sns.sa-east-1.amazonaws.com", false, true);
250:        updateRegion(region13, ServiceAbbreviations.SQS, "sqs.sa-east-1.amazonaws.com", false, true);
251:        updateRegion(region13, ServiceAbbreviations.STS, "sts.sa-east-1.amazonaws.com", false, true);
254:        updateRegion(region14, ServiceAbbreviations.Autoscaling, "autoscaling.us-east-1.amazonaws.com", false, true);
255:        updateRegion(region14, "cognito-identity", "cognito-identity.us-east-1.amazonaws.com", false, true);
256:        updateRegion(region14, "cognito-idp", "cognito-idp.us-east-1.amazonaws.com", false, true);
257:        updateRegion(region14, "cognito-sync", "cognito-sync.us-east-1.amazonaws.com", false, true);
258:        updateRegion(region14, "data.iot", "data.iot.us-east-1.amazonaws.com", false, true);
259:        updateRegion(region14, ServiceAbbreviations.Dynamodb, "dynamodb.us-east-1.amazonaws.com", false, true);
260:        updateRegion(region14, ServiceAbbreviations.EC2, "ec2.us-east-1.amazonaws.com", false, true);
261:        updateRegion(region14, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-east-1.amazonaws.com", false, true);
262:        updateRegion(region14, ServiceAbbreviations.Email, "email.us-east-1.amazonaws.com", false, true);
263:        updateRegion(region14, "firehose", "firehose.us-east-1.amazonaws.com", false, true);
264:        updateRegion(region14, "iot", "iot.us-east-1.amazonaws.com", false, true);
265:        updateRegion(region14, "kinesis", "kinesis.us-east-1.amazonaws.com", false, true);
266:        updateRegion(region14, "kms", "kms.us-east-1.amazonaws.com", false, true);
267:        updateRegion(region14, "lambda", "lambda.us-east-1.amazonaws.com", false, true);
268:        updateRegion(region14, "logs", "logs.us-east-1.amazonaws.com", false, true);
269:        updateRegion(region14, "machinelearning", "machinelearning.us-east-1.amazonaws.com", false, true);
270:        updateRegion(region14, "mobileanalytics", "mobileanalytics.us-east-1.amazonaws.com", false, true);
271:        updateRegion(region14, "pinpoint", "pinpoint.us-east-1.amazonaws.com", false, true);
272:        updateRegion(region14, "polly", "polly.us-east-1.amazonaws.com", false, true);
273:        updateRegion(region14, "rekognition", "rekognition.us-east-1.amazonaws.com", false, true);
274:        updateRegion(region14, ServiceAbbreviations.f9824S3, "s3.amazonaws.com", false, true);
275:        updateRegion(region14, ServiceAbbreviations.SimpleDB, "sdb.amazonaws.com", false, true);
276:        updateRegion(region14, ServiceAbbreviations.SNS, "sns.us-east-1.amazonaws.com", false, true);
277:        updateRegion(region14, ServiceAbbreviations.SQS, "sqs.us-east-1.amazonaws.com", false, true);
278:        updateRegion(region14, ServiceAbbreviations.STS, "sts.us-east-1.amazonaws.com", false, true);
281:        updateRegion(region15, ServiceAbbreviations.Autoscaling, "autoscaling.us-east-2.amazonaws.com", false, true);
282:        updateRegion(region15, "cognito-identity", "cognito-identity.us-east-2.amazonaws.com", false, true);
283:        updateRegion(region15, "cognito-idp", "cognito-idp.us-east-2.amazonaws.com", false, true);
284:        updateRegion(region15, "cognito-sync", "cognito-sync.us-east-2.amazonaws.com", false, true);
285:        updateRegion(region15, ServiceAbbreviations.Dynamodb, "dynamodb.us-east-2.amazonaws.com", false, true);
286:        updateRegion(region15, ServiceAbbreviations.EC2, "ec2.us-east-2.amazonaws.com", false, true);
287:        updateRegion(region15, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-east-2.amazonaws.com", false, true);
288:        updateRegion(region15, "firehose", "firehose.us-east-2.amazonaws.com", false, true);
289:        updateRegion(region15, "iot", "iot.us-east-2.amazonaws.com", false, true);
290:        updateRegion(region15, "kinesis", "kinesis.us-east-2.amazonaws.com", false, true);
291:        updateRegion(region15, "kms", "kms.us-east-2.amazonaws.com", false, true);
292:        updateRegion(region15, "lambda", "lambda.us-east-2.amazonaws.com", false, true);
293:        updateRegion(region15, "logs", "logs.us-east-2.amazonaws.com", false, true);
294:        updateRegion(region15, "polly", "polly.us-east-2.amazonaws.com", false, true);
295:        updateRegion(region15, ServiceAbbreviations.f9824S3, "s3.us-east-2.amazonaws.com", false, true);
296:        updateRegion(region15, ServiceAbbreviations.SNS, "sns.us-east-2.amazonaws.com", false, true);
297:        updateRegion(region15, ServiceAbbreviations.SQS, "sqs.us-east-2.amazonaws.com", false, true);
298:        updateRegion(region15, ServiceAbbreviations.STS, "sts.us-east-2.amazonaws.com", false, true);
301:        updateRegion(region16, ServiceAbbreviations.Autoscaling, "autoscaling.us-west-1.amazonaws.com", false, true);
302:        updateRegion(region16, ServiceAbbreviations.Dynamodb, "dynamodb.us-west-1.amazonaws.com", false, true);
303:        updateRegion(region16, ServiceAbbreviations.EC2, "ec2.us-west-1.amazonaws.com", false, true);
304:        updateRegion(region16, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-west-1.amazonaws.com", false, true);
305:        updateRegion(region16, "kinesis", "kinesis.us-west-1.amazonaws.com", false, true);
306:        updateRegion(region16, "kms", "kms.us-west-1.amazonaws.com", false, true);
307:        updateRegion(region16, "lambda", "lambda.us-west-1.amazonaws.com", false, true);
308:        updateRegion(region16, "logs", "logs.us-west-1.amazonaws.com", false, true);
309:        updateRegion(region16, "polly", "polly.us-west-1.amazonaws.com", false, true);
310:        updateRegion(region16, ServiceAbbreviations.f9824S3, "s3.us-west-1.amazonaws.com", false, true);
311:        updateRegion(region16, ServiceAbbreviations.SimpleDB, "sdb.us-west-1.amazonaws.com", false, true);
312:        updateRegion(region16, ServiceAbbreviations.SNS, "sns.us-west-1.amazonaws.com", false, true);
313:        updateRegion(region16, ServiceAbbreviations.SQS, "sqs.us-west-1.amazonaws.com", false, true);
314:        updateRegion(region16, ServiceAbbreviations.STS, "sts.us-west-1.amazonaws.com", false, true);
317:        updateRegion(region17, ServiceAbbreviations.Autoscaling, "autoscaling.us-west-2.amazonaws.com", false, true);
318:        updateRegion(region17, "cognito-identity", "cognito-identity.us-west-2.amazonaws.com", false, true);
319:        updateRegion(region17, "cognito-idp", "cognito-idp.us-west-2.amazonaws.com", false, true);
320:        updateRegion(region17, "cognito-sync", "cognito-sync.us-west-2.amazonaws.com", false, true);
321:        updateRegion(region17, "data.iot", "data.iot.us-west-2.amazonaws.com", false, true);
322:        updateRegion(region17, ServiceAbbreviations.Dynamodb, "dynamodb.us-west-2.amazonaws.com", false, true);
323:        updateRegion(region17, ServiceAbbreviations.EC2, "ec2.us-west-2.amazonaws.com", false, true);
324:        updateRegion(region17, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-west-2.amazonaws.com", false, true);
325:        updateRegion(region17, ServiceAbbreviations.Email, "email.us-west-2.amazonaws.com", false, true);
326:        updateRegion(region17, "firehose", "firehose.us-west-2.amazonaws.com", false, true);
327:        updateRegion(region17, "iot", "iot.us-west-2.amazonaws.com", false, true);
328:        updateRegion(region17, "kinesis", "kinesis.us-west-2.amazonaws.com", false, true);
329:        updateRegion(region17, "kms", "kms.us-west-2.amazonaws.com", false, true);
330:        updateRegion(region17, "lambda", "lambda.us-west-2.amazonaws.com", false, true);
331:        updateRegion(region17, "logs", "logs.us-west-2.amazonaws.com", false, true);
332:        updateRegion(region17, "polly", "polly.us-west-2.amazonaws.com", false, true);
333:        updateRegion(region17, "rekognition", "rekognition.us-west-2.amazonaws.com", false, true);
334:        updateRegion(region17, ServiceAbbreviations.f9824S3, "s3.us-west-2.amazonaws.com", false, true);
335:        updateRegion(region17, ServiceAbbreviations.SimpleDB, "sdb.us-west-2.amazonaws.com", false, true);
336:        updateRegion(region17, ServiceAbbreviations.SNS, "sns.us-west-2.amazonaws.com", false, true);
337:        updateRegion(region17, ServiceAbbreviations.SQS, "sqs.us-west-2.amazonaws.com", false, true);
338:        updateRegion(region17, ServiceAbbreviations.STS, "sts.us-west-2.amazonaws.com", false, true);
341:        updateRegion(region18, ServiceAbbreviations.Autoscaling, "autoscaling.cn-north-1.amazonaws.com.cn", false, true);
342:        updateRegion(region18, "cognito-identity", "cognito-identity.cn-north-1.amazonaws.com.cn", false, true);
343:        updateRegion(region18, ServiceAbbreviations.Dynamodb, "dynamodb.cn-north-1.amazonaws.com.cn", false, true);
344:        updateRegion(region18, ServiceAbbreviations.EC2, "ec2.cn-north-1.amazonaws.com.cn", false, true);
345:        updateRegion(region18, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.cn-north-1.amazonaws.com.cn", false, true);
346:        updateRegion(region18, "iot", "iot.cn-north-1.amazonaws.com.cn", false, true);
347:        updateRegion(region18, "kinesis", "kinesis.cn-north-1.amazonaws.com.cn", false, true);
348:        updateRegion(region18, "lambda", "lambda.cn-north-1.amazonaws.com.cn", false, true);
349:        updateRegion(region18, "logs", "logs.cn-north-1.amazonaws.com.cn", false, true);
350:        updateRegion(region18, ServiceAbbreviations.f9824S3, "s3.cn-north-1.amazonaws.com.cn", false, true);
351:        updateRegion(region18, ServiceAbbreviations.SNS, "sns.cn-north-1.amazonaws.com.cn", false, true);
352:        updateRegion(region18, ServiceAbbreviations.SQS, "sqs.cn-north-1.amazonaws.com.cn", false, true);
353:        updateRegion(region18, ServiceAbbreviations.STS, "sts.cn-north-1.amazonaws.com.cn", false, true);
356:        updateRegion(region19, ServiceAbbreviations.Autoscaling, "autoscaling.cn-northwest-1.amazonaws.com.cn", false, true);
357:        updateRegion(region19, ServiceAbbreviations.Dynamodb, "dynamodb.cn-northwest-1.amazonaws.com.cn", false, true);
358:        updateRegion(region19, ServiceAbbreviations.EC2, "ec2.cn-northwest-1.amazonaws.com.cn", false, true);
359:        updateRegion(region19, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.cn-northwest-1.amazonaws.com.cn", false, true);
360:        updateRegion(region19, "kinesis", "kinesis.cn-northwest-1.amazonaws.com.cn", false, true);
361:        updateRegion(region19, "logs", "logs.cn-northwest-1.amazonaws.com.cn", false, true);
362:        updateRegion(region19, ServiceAbbreviations.f9824S3, "s3.cn-northwest-1.amazonaws.com.cn", false, true);
363:        updateRegion(region19, ServiceAbbreviations.SNS, "sns.cn-northwest-1.amazonaws.com.cn", false, true);
364:        updateRegion(region19, ServiceAbbreviations.SQS, "sqs.cn-northwest-1.amazonaws.com.cn", false, true);
365:        updateRegion(region19, ServiceAbbreviations.STS, "sts.cn-northwest-1.amazonaws.com.cn", false, true);
368:        updateRegion(region20, ServiceAbbreviations.Autoscaling, "autoscaling.us-gov-west-1.amazonaws.com", false, true);
369:        updateRegion(region20, ServiceAbbreviations.Dynamodb, "dynamodb.us-gov-west-1.amazonaws.com", false, true);
370:        updateRegion(region20, ServiceAbbreviations.EC2, "ec2.us-gov-west-1.amazonaws.com", false, true);
371:        updateRegion(region20, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-gov-west-1.amazonaws.com", false, true);
372:        updateRegion(region20, "kinesis", "kinesis.us-gov-west-1.amazonaws.com", false, true);
373:        updateRegion(region20, "kms", "kms.us-gov-west-1.amazonaws.com", false, true);
374:        updateRegion(region20, "lambda", "lambda.us-gov-west-1.amazonaws.com", false, true);
375:        updateRegion(region20, "logs", "logs.us-gov-west-1.amazonaws.com", false, true);
376:        updateRegion(region20, "rekognition", "rekognition.us-gov-west-1.amazonaws.com", false, true);
377:        updateRegion(region20, ServiceAbbreviations.f9824S3, "s3.us-gov-west-1.amazonaws.com", false, true);
378:        updateRegion(region20, ServiceAbbreviations.SNS, "sns.us-gov-west-1.amazonaws.com", false, true);
379:        updateRegion(region20, ServiceAbbreviations.SQS, "sqs.us-gov-west-1.amazonaws.com", false, true);
380:        updateRegion(region20, ServiceAbbreviations.STS, "sts.us-gov-west-1.amazonaws.com", false, true);
383:        updateRegion(region21, ServiceAbbreviations.Autoscaling, "autoscaling.eu-north-1.amazonaws.com", false, true);
384:        updateRegion(region21, ServiceAbbreviations.Dynamodb, "dynamodb.eu-north-1.amazonaws.com", false, true);
385:        updateRegion(region21, ServiceAbbreviations.EC2, "ec2.eu-north-1.amazonaws.com", false, true);
386:        updateRegion(region21, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-north-1.amazonaws.com", false, true);
387:        updateRegion(region21, "firehose", "firehose.eu-north-1.amazonaws.com", false, true);
388:        updateRegion(region21, "iot", "iot.eu-north-1.amazonaws.com", false, true);
389:        updateRegion(region21, "kinesis", "kinesis.eu-north-1.amazonaws.com", false, true);
390:        updateRegion(region21, "kms", "kms.eu-north-1.amazonaws.com", false, true);
391:        updateRegion(region21, "lambda", "lambda.eu-north-1.amazonaws.com", false, true);
392:        updateRegion(region21, "logs", "logs.eu-north-1.amazonaws.com", false, true);
393:        updateRegion(region21, ServiceAbbreviations.f9824S3, "s3.eu-north-1.amazonaws.com", false, true);
394:        updateRegion(region21, ServiceAbbreviations.SNS, "sns.eu-north-1.amazonaws.com", false, true);
395:        updateRegion(region21, ServiceAbbreviations.SQS, "sqs.eu-north-1.amazonaws.com", false, true);
396:        updateRegion(region21, ServiceAbbreviations.STS, "sts.eu-north-1.amazonaws.com", false, true);
399:        updateRegion(region22, ServiceAbbreviations.Autoscaling, "autoscaling.ap-east-1.amazonaws.com", false, true);
400:        updateRegion(region22, ServiceAbbreviations.Dynamodb, "dynamodb.ap-east-1.amazonaws.com", false, true);
401:        updateRegion(region22, ServiceAbbreviations.EC2, "ec2.ap-east-1.amazonaws.com", false, true);
402:        updateRegion(region22, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-east-1.amazonaws.com", false, true);
403:        updateRegion(region22, "firehose", "firehose.ap-east-1.amazonaws.com", false, true);
404:        updateRegion(region22, "kinesis", "kinesis.ap-east-1.amazonaws.com", false, true);
405:        updateRegion(region22, "kms", "kms.ap-east-1.amazonaws.com", false, true);
406:        updateRegion(region22, "lambda", "lambda.ap-east-1.amazonaws.com", false, true);
407:        updateRegion(region22, "logs", "logs.ap-east-1.amazonaws.com", false, true);
408:        updateRegion(region22, "polly", "polly.ap-east-1.amazonaws.com", false, true);
409:        updateRegion(region22, ServiceAbbreviations.f9824S3, "s3.ap-east-1.amazonaws.com", false, true);
410:        updateRegion(region22, ServiceAbbreviations.SNS, "sns.ap-east-1.amazonaws.com", false, true);
411:        updateRegion(region22, ServiceAbbreviations.SQS, "sqs.ap-east-1.amazonaws.com", false, true);
412:        updateRegion(region22, ServiceAbbreviations.STS, "sts.ap-east-1.amazonaws.com", false, true);
415:        updateRegion(region23, ServiceAbbreviations.Autoscaling, "autoscaling.me-south-1.amazonaws.com", false, true);
416:        updateRegion(region23, "cognito-identity", "cognito-identity.me-south-1.amazonaws.com", false, true);
417:        updateRegion(region23, "cognito-idp", "cognito-idp.me-south-1.amazonaws.com", false, true);
418:        updateRegion(region23, "cognito-sync", "cognito-sync.me-south-1.amazonaws.com", false, true);
419:        updateRegion(region23, "data.iot", "data.iot.me-south-1.amazonaws.com", false, true);
420:        updateRegion(region23, ServiceAbbreviations.Dynamodb, "dynamodb.me-south-1.amazonaws.com", false, true);
421:        updateRegion(region23, ServiceAbbreviations.EC2, "ec2.me-south-1.amazonaws.com", false, true);
422:        updateRegion(region23, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.me-south-1.amazonaws.com", false, true);
423:        updateRegion(region23, "firehose", "firehose.me-south-1.amazonaws.com", false, true);
424:        updateRegion(region23, "iot", "iot.me-south-1.amazonaws.com", false, true);
425:        updateRegion(region23, "kinesis", "kinesis.me-south-1.amazonaws.com", false, true);
426:        updateRegion(region23, "kms", "kms.me-south-1.amazonaws.com", false, true);
427:        updateRegion(region23, "lambda", "lambda.me-south-1.amazonaws.com", false, true);
428:        updateRegion(region23, "logs", "logs.me-south-1.amazonaws.com", false, true);
429:        updateRegion(region23, "polly", "polly.me-south-1.amazonaws.com", false, true);
430:        updateRegion(region23, ServiceAbbreviations.f9824S3, "s3.me-south-1.amazonaws.com", false, true);
431:        updateRegion(region23, ServiceAbbreviations.SimpleDB, "sdb.me-south-1.amazonaws.com", false, true);
432:        updateRegion(region23, ServiceAbbreviations.SNS, "sns.me-south-1.amazonaws.com", false, true);
433:        updateRegion(region23, ServiceAbbreviations.SQS, "sqs.me-south-1.amazonaws.com", false, true);
434:        updateRegion(region23, ServiceAbbreviations.STS, "sts.me-south-1.amazonaws.com", false, true);
437:        updateRegion(region24, ServiceAbbreviations.Autoscaling, "autoscaling.ap-southeast-3.amazonaws.com", false, true);
438:        updateRegion(region24, "cognito-identity", "cognito-identity.ap-southeast-3.amazonaws.com", false, true);
439:        updateRegion(region24, "cognito-idp", "cognito-idp.ap-southeast-3.amazonaws.com", false, true);
440:        updateRegion(region24, "cognito-sync", "cognito-sync.ap-southeast-3.amazonaws.com", false, true);
441:        updateRegion(region24, "data.iot", "data.iot.ap-southeast-3.amazonaws.com", false, true);
442:        updateRegion(region24, ServiceAbbreviations.Dynamodb, "dynamodb.ap-southeast-3.amazonaws.com", false, true);
443:        updateRegion(region24, ServiceAbbreviations.EC2, "ec2.ap-southeast-3.amazonaws.com", false, true);
444:        updateRegion(region24, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-southeast-3.amazonaws.com", false, true);
445:        updateRegion(region24, "firehose", "firehose.ap-southeast-3.amazonaws.com", false, true);
446:        updateRegion(region24, "iot", "iot.ap-southeast-3.amazonaws.com", false, true);
447:        updateRegion(region24, "kinesis", "kinesis.ap-southeast-3.amazonaws.com", false, true);
448:        updateRegion(region24, "kms", "kms.ap-southeast-3.amazonaws.com", false, true);
449:        updateRegion(region24, "lambda", "lambda.ap-southeast-3.amazonaws.com", false, true);
450:        updateRegion(region24, "logs", "logs.ap-southeast-3.amazonaws.com", false, true);
451:        updateRegion(region24, "polly", "polly.ap-southeast-3.amazonaws.com", false, true);
452:        updateRegion(region24, ServiceAbbreviations.f9824S3, "s3.ap-southeast-3.amazonaws.com", false, true);
453:        updateRegion(region24, ServiceAbbreviations.SimpleDB, "sdb.ap-southeast-3.amazonaws.com", false, true);
454:        updateRegion(region24, ServiceAbbreviations.SNS, "sns.ap-southeast-3.amazonaws.com", false, true);
455:        updateRegion(region24, ServiceAbbreviations.SQS, "sqs.ap-southeast-3.amazonaws.com", false, true);
456:        updateRegion(region24, ServiceAbbreviations.STS, "sts.ap-southeast-3.amazonaws.com", false, true);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/regions/RegionMetadataParser.java
89:        return str.endsWith(".amazonaws.com");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/services/cognitoidentity/AmazonCognitoIdentityClient.java
153:        setEndpoint("cognito-identity.us-east-1.amazonaws.com");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProviderClient.java
509:        setEndpoint("cognito-idp.us-east-1.amazonaws.com");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/services/securitytoken/AWSSecurityTokenServiceClient.java
95:        setEndpoint("sts.amazonaws.com");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/util/AwsHostNameUtils.java
42:        if (host.endsWith(".amazonaws.com")) {
43:            String substring = host.substring(0, host.indexOf(".amazonaws.com"));
70:        if (str.endsWith(".amazonaws.com")) {
73:        if (str.endsWith(".amazonaws.com.cn")) {

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amplifyframework/auth/cognito/AWSCognitoAuthProvider.java
7:    private static final String DEVELOPER = "cognito-identity.amazonaws.com";

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/carolinegirvan/mobile/features/discovery/apple/C2771d.java
58:                m38637C = C8288v.m38637C(sb3, "-----BEGIN PRIVATE KEY-----", HttpUrl.FRAGMENT_ENCODE_SET, false, 4, null);
77:        String compact = Jwts.builder().setHeader(m33676k).setClaims(m33676k2).signWith(m13758b("-----BEGIN PRIVATE KEY-----\nMIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQg7eE04o1BvBFeZuYh\nfZU/yE1AM9rze+2pOoldXwD8s0igCgYIKoZIzj0DAQehRANCAARVoeyF9czumeWR\nh0tyq1MoxNIlEWy2CF0MC3KxfqCrvu9r41+SAXHFR+BvqPB3cFv0Qubg3YDCm+1e\n0taDc4iT\n-----END PRIVATE KEY-----"), SignatureAlgorithm.ES256).compact();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/BinderC4634t.java
13:        return AbstractBinderC4635u.m21879M("0\u0082\u0004¨0\u0082\u0003\u0090 \u0003\u0002\u0001\u0002\u0002\t\u0000Õ\u0085¸l}ÓNõ0\r\u0006\t*\u0086H\u0086÷\r\u0001\u0001\u0004\u0005\u00000\u0081\u00941\u000b0\t\u0006\u0003U\u0004\u0006\u0013\u0002US1\u00130\u0011\u0006\u0003U\u0004\b\u0013\nCalifornia1\u00160\u0014\u0006\u0003U\u0004\u0007\u0013\rMountain View1\u00100\u000e\u0006\u0003U\u0004\n\u0013\u0007Android1\u00100\u000e\u0006\u0003U\u0004\u000b\u0013\u0007Android1\u00100\u000e\u0006\u0003U\u0004\u0003\u0013\u0007Android1\"0 \u0006\t*\u0086H\u0086÷\r\u0001\t\u0001\u0016\u0013android@android.com0\u001e\u0017\r080415233656Z\u0017\r350901233656Z0\u0081\u00941\u000b0\t\u0006\u0003U\u0004\u0006\u0013\u0002US1\u00130\u0011\u0006\u0003U\u0004\b\u0013\nCalifornia1\u00160\u0014\u0006\u0003U\u0004\u0007\u0013\rMountain View1\u00100\u000e\u0006\u0003U\u0004\n\u0013\u0007Android1\u00100\u000e\u0006\u0003U\u0004\u000b\u0013\u0007Android1\u00100\u000e\u0006\u0003U\u0004\u0003\u0013\u0007Android1\"0 \u0006\t*\u0086H\u0086÷\r\u0001\t\u0001\u0016\u0013android@android.com0\u0082\u0001 0\r\u0006\t*\u0086H\u0086÷\r\u0001\u0001\u0001\u0005\u0000\u0003\u0082\u0001\r\u00000\u0082\u0001\b\u0002\u0082\u0001\u0001\u0000ÖÎ.\b\n¿â1MÑ\u008d³ÏÓ\u0018\\´=3ú\ftá½¶ÑÛ\u0089\u0013ö,\\9ßVøF\u0081=e¾ÀóÊBk\u0007Å¨íZ9\u0090ÁgçkÉ\u0099¹'\u0089K\u008f\u000b\"\u0000\u0019\u0094©)\u0015årÅm*0\u001b£oÅü\u0011:ÖË\u009et5¡m#«}úîáeäß\u001f\n\u008d½§\n\u0086\u009dQlN\u009d\u0005\u0011\u0096Ê|\fU\u007f\u0017[ÃuùHÅj®\u0086\b\u009b¤O\u008a¦¤Ý\u009a}¿,\n5\"\u0082\u00ad\u0006¸Ì\u0018^±Uyîøm\b\u000b\u001da\u0089Àù¯\u0098±ÂëÑ\u0007êE«Ûh£Ç\u0083\u008a^T\u0088ÇlSÔ\u000b\u0012\u001dç»Ó\u000eb\f\u0018\u008aáªaÛ¼\u0087Ý<d_/UóÔÃuì@p©?qQØ6pÁj\u0097\u001a¾^òÑ\u0018\u0090á¸®ó)\u008cðf¿\u009eláD¬\u009aèm\u001c\u001b\u000f\u0002\u0001\u0003£\u0081ü0\u0081ù0\u001d\u0006\u0003U\u001d\u000e\u0004\u0016\u0004\u0014\u008d\u001cÅ¾\u0095LC<a\u0086:\u0015°L¼\u0003òOà²0\u0081É\u0006\u0003U\u001d#\u0004\u0081Á0\u0081¾\u0080\u0014\u008d\u001cÅ¾\u0095LC<a\u0086:\u0015°L¼\u0003òOà²¡\u0081\u009a¤\u0081\u00970\u0081\u00941\u000b0\t\u0006\u0003U\u0004\u0006\u0013\u0002US1\u00130\u0011\u0006\u0003U\u0004\b\u0013\nCalifornia1\u00160\u0014\u0006\u0003U\u0004\u0007\u0013\rMountain View1\u00100\u000e\u0006\u0003U\u0004\n\u0013\u0007Android1\u00100\u000e\u0006\u0003U\u0004\u000b\u0013\u0007Android1\u00100\u000e\u0006\u0003U\u0004\u0003\u0013\u0007Android1\"0 \u0006\t*\u0086H\u0086÷\r\u0001\t\u0001\u0016\u0013android@android.com\u0082\t\u0000Õ\u0085¸l}ÓNõ0\f\u0006\u0003U\u001d\u0013\u0004\u00050\u0003\u0001\u0001ÿ0\r\u0006\t*\u0086H\u0086÷\r\u0001\u0001\u0004\u0005\u0000\u0003\u0082\u0001\u0001\u0000\u0019Ó\fñ\u0005ûx\u0092?L\r}Ò##=@\u0096zÏÎ\u0000\b\u001d[×ÆéÖí k\u000e\u0011 \u0095\u0006Al¢D\u0093\u0099\u0013ÒkJ àõ$ÊÒ»\\nL¡\u0001j\u0015\u0091n¡ì]ÉZ^:\u0001\u00006ô\u0092HÕ\u0010\u009b¿.\u001ea\u0081\u0086g:;åm¯\u000bw±Â)ãÂUãèL\u0090]#\u0087ïº\tËñ; +NZ\"É2cHJ#Òü)ú\u009f\u00199u\u00973¯Øª\u0016\u000fB\u0096ÂÐ\u0016>\u0081\u0082\u0085\u009cfCéÁ\u0096/ Á\u008333[À\u0090ÿ\u009ak\"ÞÑ\u00adDB)¥9©Nï\u00ad«ÐeÎÒK>QåÝ{fx{ï\u0012þ\u0097û¤\u0084Ä#ûOøÌIL\u0002ðõ\u0005\u0016\u0012ÿe)9>\u008eFêÅ»!òwÁQª_*¦'Ñè\u009d§\n¶\u00035iÞ;\u0098\u0097¿ÿ|©Ú>\u0012Cö\u000b");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/tools/Builder.java
149:        System.out.println("JavaCPP version " + implementationVersion + "\nCopyright (C) 2011-2018 Samuel Audet <samuel.audet@gmail.com>\nProject site: https://github.com/bytedeco/javacpp");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p329xa/C10120d.java
44:            C0128r.m610e(type, "this@createCapturedIfNeeded.type");

[!] QuickNote:
    - It is recommended that the hard-coded sensitive data (such as Private IPs/E-mails, User/DB details, etc.) should not be stored unless secured specifically, if observed. Please note that, an attacker can use that data for further malicious intentions.

[*] Reference:
    - OWASP MASVS: MSTG-STORAGE-14 | CWE-312: Cleartext Storage of Sensitive Information
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x07-v2-data_storage_and_privacy_requirements

==>> The potential Hard-coded Keys/Tokens/Secrets...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/resources/res/values/strings.xml
176:    <string name="default_web_client_id">703379176153-3vd5tm3duif6kv2veg7k6had7mdb54m4.apps.googleusercontent.com</string>
312:    <string name="google_api_key">AIzaSyAvNwxTNWEvzXGKUMXK5ab-g94ZGGknWgQ</string>
314:    <string name="google_crash_reporting_api_key">AIzaSyAvNwxTNWEvzXGKUMXK5ab-g94ZGGknWgQ</string>

[!] QuickNote:
    - It is recommended that the hard-coded keys/tokens/secrets should not be stored unless secured specifically, if observed. Please note that, an attacker can use that data for further malicious intentions.

[*] Reference:
    - OWASP MASVS: MSTG-STORAGE-14 | CWE-312: Cleartext Storage of Sensitive Information
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x07-v2-data_storage_and_privacy_requirements


[+] Hunting begins based on "V3: Cryptography Requirements"
[+] -------------------------------------------------------

==>> The Symmetric Cryptography implementation...

[!] QuickNote:
    - It is recommended to verify that hardcoded symmetric keys are not used in security-sensitive contexts as the only method of encryption, if observed. Please note that, the used symmetric keys are not part of the application resources, cannot be derived from known values, and are not hardcoded in code.

[*] Reference:
    - OWASP MASVS: MSTG-CRYPTO-1 | CWE-321: Use of Hard-coded Cryptographic Key
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x08-v3-cryptography_verification_requirements

==>> The Insecure/Deprecated Cryptographic Algorithms...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/auth/AbstractAWSSigner.java
36:                return MessageDigest.getInstance("SHA-256");
236:            Mac mac = Mac.getInstance(signingAlgorithm.toString());
246:            MessageDigest messageDigest = MessageDigest.getInstance("SHA-256");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/cognito/clientcontext/util/SignatureGenerator.java
22:            Mac mac = Mac.getInstance(ALGORITHM);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoauth/util/Pkce.java
20:            MessageDigest messageDigest = MessageDigest.getInstance("SHA-256");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java
156:                        return MessageDigest.getInstance("SHA-256");
908:            Mac mac = Mac.getInstance("HmacSHA256");
1253:            Mac mac = Mac.getInstance("HmacSHA256");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoDeviceHelper.java
175:                    return MessageDigest.getInstance(deviceSRP.HASH_ALGORITHM);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoSecretHash.java
28:            Mac mac = Mac.getInstance(HMAC_SHA_256);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/Hkdf.java
36:            Mac mac = Mac.getInstance(this.algorithm);
47:        Mac.getInstance(str);
82:                Mac mac = Mac.getInstance(this.algorithm);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/util/Md5Utils.java
21:                MessageDigest messageDigest = MessageDigest.getInstance("MD5");
57:            return MessageDigest.getInstance("MD5").digest(bArr);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/engine/cache/C2022j.java
32:                return new b(MessageDigest.getInstance("SHA-256"));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/source/rtsp/C4022i.java
42:            MessageDigest messageDigest = MessageDigest.getInstance("MD5");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5961u9.java
234:                messageDigest = MessageDigest.getInstance("MD5");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/play/core/assetpacks/C6330i1.java
25:        MessageDigest messageDigest = MessageDigest.getInstance("SHA256");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/common/C6598g.java
367:            MessageDigest messageDigest = MessageDigest.getInstance(str);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/installations/local/C6714b.java
65:            byte[] digest = MessageDigest.getInstance("SHA1").digest(publicKey.getEncoded());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/io/jsonwebtoken/impl/crypto/MacSigner.java
20:        Mac mac = Mac.getInstance(this.alg.getJcaName());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/io/jsonwebtoken/impl/crypto/SignatureProvider.java
44:        return Signature.getInstance(this.alg.getJcaName());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okio/C8817f.java
352:        MessageDigest messageDigest = MessageDigest.getInstance(algorithm);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okio/C8836x.java
224:        MessageDigest messageDigest = MessageDigest.getInstance(algorithm);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p122h6/C7308a.java
31:                messageDigest = MessageDigest.getInstance(str);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p352z7/C10297a.java
15:            MessageDigest messageDigest = MessageDigest.getInstance("SHA-256");

[!] QuickNote:
    - It is recommended that cryptographic algorithms used in the application are up to date and in-line with industry standards. Please note that, Vulnerable algorithms include outdated block ciphers (such as DES, DESede, and 3DES), stream ciphers (such as RC4), hash functions (such as MD5 and SHA1), and broken random number generators (such as Dual_EC_DRBG and SHA1PRNG).

[*] Reference:
    - OWASP MASVS: MSTG-CRYPTO-4 | CWE-327: Use of a Broken or Risky Cryptographic Algorithm
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x08-v3-cryptography_verification_requirements

==>> The Insecure/Weak Cipher Modes...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/source/hls/C3955a.java
60:        return Cipher.getInstance("AES/CBC/PKCS7Padding");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p185m3/C8584a.java
58:        Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p332y0/C10147a.java
49:            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS7Padding");

[!] QuickNote:
    - It is recommended to use a block mode that protects the integrity of the stored data, such as Galois/Counter Mode (GCM). Please note that, the ECB and CBC modes provide confidentiality, but other modes such as Galois Counter Mode (GCM) provides both confidentiality and integrity protection.

[*] Reference:
    - OWASP MASVS: MSTG-CRYPTO-3 | CWE-649: Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x08-v3-cryptography_verification_requirements

==>> The Static IVs...


==>> The Weak Random functions...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/android/view/result/ActivityResultRegistry.java
22:    private Random f724a = new Random();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java
164:                SECURE_RANDOM = SecureRandom.getInstance("SHA1PRNG");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoDeviceHelper.java
191:                SECURE_RANDOM = SecureRandom.getInstance("SHA1PRNG");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/retry/PredefinedRetryPolicies.java
37:            this.random = new Random();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/music/playback/queue/C1943i.java
17:    private final Random f10354c = new Random();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/source/InterfaceC4055u0.java
23:            this(i10, new Random());
50:                    return new a(iArr, new Random(this.f18450a.nextLong()));
119:                    return new a(iArr3, new Random(this.f18450a.nextLong()));
150:            return new a(0, new Random(this.f18450a.nextLong()));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/source/dash/C3935b.java
34:        this(new Random());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/cast/internal/C4323a.java
24:    private static final Random f19909b = new Random(SystemClock.elapsedRealtime());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5451u2.java
247:        long nextLong = new Random(System.nanoTime() ^ this.f21764b.mo32332a()).nextLong();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5961u9.java
860:            long nextLong = new Random(System.nanoTime() ^ this.f22669a.mo24871c().mo32332a()).nextLong();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/perf/config/RemoteConfigManager.java
254:        this(executor, c6830a, new Random().nextInt(RANDOM_APP_START_CONFIG_FETCH_DELAY_MS) + MIN_APP_START_CONFIG_FETCH_DELAY_MS);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/remoteconfig/C6832c.java
38:    private static final Random f26481k = new Random();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/kotlin/random/C7625b.java
25:            return new Random();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/OkHttpClient.java
1128:        RealWebSocket realWebSocket = new RealWebSocket(TaskRunner.INSTANCE, request, listener, new Random(), this.pingIntervalMillis, null, this.minWebSocketMessageToCompress);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p088e9/C7104d.java
162:        return new Random().nextFloat();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p249r4/C9325o1.java
31:    private static final Random f36130i = new Random();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p275t6/C9779c.java
11:    private static final Random f37329a = new Random();

[!] QuickNote:
    - It is recommended to use Pseudo-random number generators along-with 256-bit seed for producing a random-enough number, if observed. Please note that, Under certain conditions this weakness may expose mobile application data encryption or other protection based on randomization.

[*] Reference:
    - OWASP MASVS: MSTG-CRYPTO-6 | CWE-330: Use of Insufficiently Random Values
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x08-v3-cryptography_verification_requirements


[+] Hunting begins based on "V4: Authentication and Session Management Requirements"
[+] --------------------------------------------------------------------------------

==>> The cookie related instances...

[~] NOTE:
    - The test scenarios related to the different authentication mechanisms, stateful/stateless session management, user activities, strong password policies, etc. should be covered during your dynamic analysis/API testing phase.


[+] Hunting begins based on "V5: Network Communication Requirements"
[+] ----------------------------------------------------------------

==>> The presence of the Network Security Configuration file...

[!] QuickNote:
    - It is recommended to configure the Network Security Configuration file (such as network_security_config.xml) as it does not exist. Please note that, Network Security Config file can be used to protect against cleartext traffic, set up trusted certificate authorities, implement certificate pinning, etc. in terms of network security settings.

[*] Reference:
    - OWASP MASVS: MSTG-NETWORK-1 | CWE-693: Protection Mechanism Failure
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x10-v5-network_communication_requirements

==>> The Possible MITM attack...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/http/UrlHttpClient.java
177:        HttpURLConnection httpURLConnection = (HttpURLConnection) httpRequest.getUri().toURL().openConnection();
193:        return (HttpURLConnection) url.openConnection();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/util/HttpUtils.java
76:        HttpURLConnection httpURLConnection = (HttpURLConnection) uri.toURL().openConnection();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/music/playback/queue/CatalogPlaybackQueueItemProvider.java
165:        HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(buildUpon.build().toString()).openConnection();
218:                    m10555r(httpURLConnection);
232:                        m10555r(httpURLConnection);
263:                        m10555r(httpURLConnection);
272:                m10555r(httpURLConnection);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/music/playback/reporting/C1949e.java
221:            httpURLConnection = (HttpURLConnection) new URL("https://universal-activity-service.itunes.apple.com/play").openConnection();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/data/C1985j.java
54:            return (HttpURLConnection) url.openConnection();
112:            throw new HttpException("Failed to obtain InputStream", m10939f(httpURLConnection), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/datatransport/cct/C3402d.java
139:        HttpURLConnection httpURLConnection = (HttpURLConnection) aVar.f14677a.openConnection();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/installations/remote/C6721c.java
145:        String m29176o = m29176o(httpURLConnection);
156:            HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/perf/network/FirebasePerfUrlConnection.java
28:            return m29546a instanceof HttpsURLConnection ? new C6776b((HttpsURLConnection) m29546a, c6803i, m29390f).getContent() : m29546a instanceof HttpURLConnection ? new C6775a((HttpURLConnection) m29546a, c6803i, m29390f).getContent() : m29546a.getContent();
45:            return m29546a instanceof HttpsURLConnection ? new C6776b((HttpsURLConnection) m29546a, c6803i, m29390f).getContent(clsArr) : m29546a instanceof HttpURLConnection ? new C6775a((HttpURLConnection) m29546a, c6803i, m29390f).getContent(clsArr) : m29546a.getContent(clsArr);
62:            return m29546a instanceof HttpsURLConnection ? new C6776b((HttpsURLConnection) m29546a, c6803i, m29390f).getInputStream() : m29546a instanceof HttpURLConnection ? new C6775a((HttpURLConnection) m29546a, c6803i, m29390f).getInputStream() : m29546a.getInputStream();
79:        return obj instanceof HttpsURLConnection ? new C6776b((HttpsURLConnection) obj, new C6803i(), C6773d.m29390f(C7111k.m31649k())) : obj instanceof HttpURLConnection ? new C6775a((HttpURLConnection) obj, new C6803i(), C6773d.m29390f(C7111k.m31649k())) : obj;

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/remoteconfig/internal/ConfigFetchHttpClient.java
245:            return (HttpURLConnection) new URL(m29865h(this.f26495d, this.f26496e)).openConnection();
263:                C10061b m29864g = m29864g(httpURLConnection);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p017b2/C1281d.java
128:        HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(c7355e.f28441a.toString()).openConnection();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p146j2/C7444i.java
21:            httpURLConnection = (HttpURLConnection) new URL("https://api.music.apple.com/v1/me/storefront").openConnection();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p159k2/C7486a.java
149:            HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(this.f28977b).openConnection();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p159k2/C7489d.java
63:            HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(this.f28991e).openConnection();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p246r1/C9242b.java
13:        HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(str).openConnection();
16:        return new C9241a(httpURLConnection);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p263s5/C9588o.java
424:        return (HttpURLConnection) url.openConnection();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p287u5/C9828d.java
17:                HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(str).openConnection();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p324x5/RunnableC10087f.java
45:            HttpURLConnection httpURLConnection = (HttpURLConnection) new URL("https://accounts.google.com/o/oauth2/revoke?token=" + this.f37882p).openConnection();

[!] QuickNote:
    - It is recommended not to use any unencrypted transmission mechanisms for sensitive data. Please note that, the HTTP protocol does not provide any encryption of the transmitted data, which can be easily intercepted by an attacker.

[*] Reference:
    - OWASP MASVS: MSTG-NETWORK-1 | CWE-319: Cleartext Transmission of Sensitive Information
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x10-v5-network_communication_requirements

==>> The Weak SSL/TLS protocols...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/http/UrlHttpClient.java
108:                SSLContext sSLContext = SSLContext.getInstance("TLS");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/ConnectionSpec.java
46:        RESTRICTED_TLS = cipherSuites.tlsVersions(tlsVersion, tlsVersion2).supportsTlsExtensions(true).build();
47:        MODERN_TLS = new Builder(true).cipherSuites((CipherSuite[]) Arrays.copyOf(cipherSuiteArr2, cipherSuiteArr2.length)).tlsVersions(tlsVersion, tlsVersion2).supportsTlsExtensions(true).build();
48:        COMPATIBLE_TLS = new Builder(true).cipherSuites((CipherSuite[]) Arrays.copyOf(cipherSuiteArr2, cipherSuiteArr2.length)).tlsVersions(tlsVersion, tlsVersion2, TlsVersion.TLS_1_1, TlsVersion.TLS_1_0).supportsTlsExtensions(true).build();
296:        public final Builder tlsVersions(TlsVersion... tlsVersions) {

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/platform/BouncyCastlePlatform.java
106:        SSLContext sSLContext = SSLContext.getInstance("TLS", this.provider);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/platform/ConscryptPlatform.java
135:        SSLContext sSLContext = SSLContext.getInstance("TLS", this.provider);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/platform/OpenJSSEPlatform.java
108:        SSLContext sSLContext = SSLContext.getInstance("TLSv1.3", this.provider);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/platform/Platform.java
240:        SSLContext sSLContext = SSLContext.getInstance("TLS");

[!] QuickNote:
    - It is recommended to enforce TLS 1.2 as the minimum protocol version. Please note that, Failure to do so could open the door to downgrade attacks such as DROWN/POODLE/BEAST etc.

[*] Reference:
    - OWASP MASVS: MSTG-NETWORK-2 | CWE-326: Inadequate Encryption Strength
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x10-v5-network_communication_requirements

==>>  The app is allowing cleartext traffic...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/resources/AndroidManifest.xml
51:        android:usesCleartextTraffic="true"

[!] QuickNote:
    - It is recommended to set android:usesCleartextTraffic or cleartextTrafficPermitted to false. Please note that, Sensitive information should be sent over secure channels only.

[*] Reference:
    - OWASP MASVS: MSTG-NETWORK-2 | CWE-319: Cleartext Transmission of Sensitive Information
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x10-v5-network_communication_requirements

==>> The Server Certificate verification...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/platform/Platform.java
9:import java.security.cert.X509Certificate;
188:        X509Certificate[] acceptedIssuers = trustManager.getAcceptedIssuers();
190:        return new BasicTrustRootIndex((X509Certificate[]) Arrays.copyOf(acceptedIssuers, acceptedIssuers.length));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/platform/android/AndroidCertificateChainCleaner.java
6:import java.security.cert.X509Certificate;
63:        Object[] array = chain.toArray(new X509Certificate[0]);
68:            List<X509Certificate> checkServerTrusted = this.x509TrustManagerExtensions.checkServerTrusted((X509Certificate[]) array, "RSA", hostname);

[!] QuickNote:
    - It is recommended to appropriately verify the Server Certificate, if observed. Please note that, It should be signed by a trusted CA, not expired, not self-signed, etc. While implementing a custom X509TrustManager, the certificate chain needs to be verified appropriately, else the possibility of MITM attacks increases by providing an arbitrary certificate by an attacker.

[*] Reference:
    - OWASP MASVS: MSTG-NETWORK-3 | CWE-295: Improper Certificate Validation
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x10-v5-network_communication_requirements

==>> The WebView Server Certificate verification...


==>> The Hostname Verification...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/perf/network/C6776b.java
156:    public HostnameVerifier getHostnameVerifier() {
295:    public void setHostnameVerifier(HostnameVerifier hostnameVerifier) {
296:        this.f26372b.setHostnameVerifier(hostnameVerifier);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/platform/ConscryptPlatform.java
76:        public final boolean verify(String hostname, SSLSession session) {
77:            return true;
81:            return true;
166:        Conscrypt.setHostnameVerifier(x509TrustManager, DisabledHostnameVerifier.INSTANCE);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/tls/OkHostnameVerifier.java
28:public final class OkHostnameVerifier implements HostnameVerifier {
79:                return true;
94:                return true;
106:    public boolean verify(String host, SSLSession session) {
123:    public final boolean verify(String host, X509Certificate certificate) {

[!] QuickNote:
    - It is recommended not to set ALLOW_ALL_HOSTNAME_VERIFIER or NO_VERIFY, if observed. Please note that, If class always returns true; upon verify() method, the possibility of MITM attacks increases. The application should always verify a hostname before setting up a trusted connection.

[*] Reference:
    - OWASP MASVS: MSTG-NETWORK-3 | CWE-297: Improper Validation of Certificate with Host Mismatch
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x10-v5-network_communication_requirements

==>> The Hard-coded Certificates/Key/Keystore files...


==>> The Certificate Pinning settings...


==>> The Certificate Pinning implementation...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/internal/keyvaluestore/KeyProvider18.java
43:            KeyStore keyStore = KeyStore.getInstance(ANDROID_KEY_STORE_NAME);
57:            KeyStore keyStore = KeyStore.getInstance(ANDROID_KEY_STORE_NAME);
77:            KeyStore keyStore = KeyStore.getInstance(ANDROID_KEY_STORE_NAME);
90:                KeyStore.getInstance(ANDROID_KEY_STORE_NAME).load(null);
136:            KeyStore keyStore = KeyStore.getInstance(ANDROID_KEY_STORE_NAME);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/internal/keyvaluestore/KeyProvider23.java
25:            KeyStore keyStore = KeyStore.getInstance(ANDROID_KEY_STORE_NAME);
37:            KeyStore keyStore = KeyStore.getInstance(ANDROID_KEY_STORE_NAME);
56:            KeyStore keyStore = KeyStore.getInstance(ANDROID_KEY_STORE_NAME);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/Address.java
16:@Metadata(m33421d1 = {"\u0000h\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\u000e\n\u0000\n\u0002\u0010\b\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010 \n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u000b\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u000b\n\u0002\b\u000f\u0018\u00002\u00020\u0001By\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u0012\u0006\u0010\u0004\u001a\u00020\u0005\u0012\u0006\u0010\u0006\u001a\u00020\u0007\u0012\u0006\u0010\b\u001a\u00020\t\u0012\b\u0010\n\u001a\u0004\u0018\u00010\u000b\u0012\b\u0010\f\u001a\u0004\u0018\u00010\r\u0012\b\u0010\u000e\u001a\u0004\u0018\u00010\u000f\u0012\u0006\u0010\u0010\u001a\u00020\u0011\u0012\b\u0010\u0012\u001a\u0004\u0018\u00010\u0013\u0012\f\u0010\u0014\u001a\b\u0012\u0004\u0012\u00020\u00160\u0015\u0012\f\u0010\u0017\u001a\b\u0012\u0004\u0012\u00020\u00180\u0015\u0012\u0006\u0010\u0019\u001a\u00020\u001a¢\u0006\u0002\u0010\u001bJ\u000f\u0010\u000e\u001a\u0004\u0018\u00010\u000fH\u0007¢\u0006\u0002\b(J\u0013\u0010\u0017\u001a\b\u0012\u0004\u0012\u00020\u00180\u0015H\u0007¢\u0006\u0002\b)J\r\u0010\u0006\u001a\u00020\u0007H\u0007¢\u0006\u0002\b*J\u0013\u0010+\u001a\u00020,2\b\u0010-\u001a\u0004\u0018\u00010\u0001H\u0096\u0002J\u0015\u0010.\u001a\u00020,2\u0006\u0010/\u001a\u00020\u0000H\u0000¢\u0006\u0002\b0J\b\u00101\u001a\u00020\u0005H\u0016J\u000f\u0010\f\u001a\u0004\u0018\u00010\rH\u0007¢\u0006\u0002\b2J\u0013\u0010\u0014\u001a\b\u0012\u0004\u0012\u00020\u00160\u0015H\u0007¢\u0006\u0002\b3J\u000f\u0010\u0012\u001a\u0004\u0018\u00010\u0013H\u0007¢\u0006\u0002\b4J\r\u0010\u0010\u001a\u00020\u0011H\u0007¢\u0006\u0002\b5J\r\u0010\u0019\u001a\u00020\u001aH\u0007¢\u0006\u0002\b6J\r\u0010\b\u001a\u00020\tH\u0007¢\u0006\u0002\b7J\u000f\u0010\n\u001a\u0004\u0018\u00010\u000bH\u0007¢\u0006\u0002\b8J\b\u00109\u001a\u00020\u0003H\u0016J\r\u0010%\u001a\u00020&H\u0007¢\u0006\u0002\b:R\u0015\u0010\u000e\u001a\u0004\u0018\u00010\u000f8\u0007¢\u0006\b\n\u0000\u001a\u0004\b\u000e\u0010\u001cR\u0019\u0010\u0017\u001a\b\u0012\u0004\u0012\u00020\u00180\u00158G¢\u0006\b\n\u0000\u001a\u0004\b\u0017\u0010\u001dR\u0013\u0010\u0006\u001a\u00020\u00078\u0007¢\u0006\b\n\u0000\u001a\u0004\b\u0006\u0010\u001eR\u0015\u0010\f\u001a\u0004\u0018\u00010\r8\u0007¢\u0006\b\n\u0000\u001a\u0004\b\f\u0010\u001fR\u0019\u0010\u0014\u001a\b\u0012\u0004\u0012\u00020\u00160\u00158G¢\u0006\b\n\u0000\u001a\u0004\b\u0014\u0010\u001dR\u0015\u0010\u0012\u001a\u0004\u0018\u00010\u00138\u0007¢\u0006\b\n\u0000\u001a\u0004\b\u0012\u0010 R\u0013\u0010\u0010\u001a\u00020\u00118\u0007¢\u0006\b\n\u0000\u001a\u0004\b\u0010\u0010!R\u0013\u0010\u0019\u001a\u00020\u001a8\u0007¢\u0006\b\n\u0000\u001a\u0004\b\u0019\u0010\"R\u0013\u0010\b\u001a\u00020\t8\u0007¢\u0006\b\n\u0000\u001a\u0004\b\b\u0010#R\u0015\u0010\n\u001a\u0004\u0018\u00010\u000b8\u0007¢\u0006\b\n\u0000\u001a\u0004\b\n\u0010$R\u0013\u0010%\u001a\u00020&8G¢\u0006\b\n\u0000\u001a\u0004\b%\u0010'¨\u0006;"}, m33422d2 = {"Lokhttp3/Address;", HttpUrl.FRAGMENT_ENCODE_SET, "uriHost", HttpUrl.FRAGMENT_ENCODE_SET, "uriPort", HttpUrl.FRAGMENT_ENCODE_SET, "dns", "Lokhttp3/Dns;", "socketFactory", "Ljavax/net/SocketFactory;", "sslSocketFactory", "Ljavax/net/ssl/SSLSocketFactory;", "hostnameVerifier", "Ljavax/net/ssl/HostnameVerifier;", "certificatePinner", "Lokhttp3/CertificatePinner;", "proxyAuthenticator", "Lokhttp3/Authenticator;", "proxy", "Ljava/net/Proxy;", "protocols", HttpUrl.FRAGMENT_ENCODE_SET, "Lokhttp3/Protocol;", "connectionSpecs", "Lokhttp3/ConnectionSpec;", "proxySelector", "Ljava/net/ProxySelector;", "(Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V", "()Lokhttp3/CertificatePinner;", "()Ljava/util/List;", "()Lokhttp3/Dns;", "()Ljavax/net/ssl/HostnameVerifier;", "()Ljava/net/Proxy;", "()Lokhttp3/Authenticator;", "()Ljava/net/ProxySelector;", "()Ljavax/net/SocketFactory;", "()Ljavax/net/ssl/SSLSocketFactory;", "url", "Lokhttp3/HttpUrl;", "()Lokhttp3/HttpUrl;", "-deprecated_certificatePinner", "-deprecated_connectionSpecs", "-deprecated_dns", "equals", HttpUrl.FRAGMENT_ENCODE_SET, "other", "equalsNonHost", "that", "equalsNonHost$okhttp", "hashCode", "-deprecated_hostnameVerifier", "-deprecated_protocols", "-deprecated_proxy", "-deprecated_proxyAuthenticator", "-deprecated_proxySelector", "-deprecated_socketFactory", "-deprecated_sslSocketFactory", "toString", "-deprecated_url", "okhttp"}, m33423k = 1, m33424mv = {1, 6, 0}, m33426xi = 48)
19:    private final CertificatePinner certificatePinner;
31:    public Address(String str, int i10, Dns dns, SocketFactory socketFactory, SSLSocketFactory sSLSocketFactory, HostnameVerifier hostnameVerifier, CertificatePinner certificatePinner, Authenticator authenticator, Proxy proxy, List<? extends Protocol> list, List<ConnectionSpec> list2, ProxySelector proxySelector) {
43:        this.certificatePinner = certificatePinner;
52:    /* renamed from: -deprecated_certificatePinner, reason: not valid java name and from getter */
54:        return this.certificatePinner;
107:    public final CertificatePinner certificatePinner() {
108:        return this.certificatePinner;
131:        return C0128r.m606a(this.dns, that.dns) && C0128r.m606a(this.proxyAuthenticator, that.proxyAuthenticator) && C0128r.m606a(this.protocols, that.protocols) && C0128r.m606a(this.connectionSpecs, that.connectionSpecs) && C0128r.m606a(this.proxySelector, that.proxySelector) && C0128r.m606a(this.proxy, that.proxy) && C0128r.m606a(this.sslSocketFactory, that.sslSocketFactory) && C0128r.m606a(this.hostnameVerifier, that.hostnameVerifier) && C0128r.m606a(this.certificatePinner, that.certificatePinner) && this.url.port() == that.url.port();
135:        return ((((((((((((((((((527 + this.url.hashCode()) * 31) + this.dns.hashCode()) * 31) + this.proxyAuthenticator.hashCode()) * 31) + this.protocols.hashCode()) * 31) + this.connectionSpecs.hashCode()) * 31) + this.proxySelector.hashCode()) * 31) + Objects.hashCode(this.proxy)) * 31) + Objects.hashCode(this.sslSocketFactory)) * 31) + Objects.hashCode(this.hostnameVerifier)) * 31) + Objects.hashCode(this.certificatePinner);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/CertificatePinner$check$1.java
23:    CertificatePinner$check$1(CertificatePinner certificatePinner, List<? extends Certificate> list, String str) {
25:        this.this$0 = certificatePinner;

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/CertificatePinner.java
292:            CertificatePinner certificatePinner = (CertificatePinner) other;
293:            if (C0128r.m606a(certificatePinner.pins, this.pins) && C0128r.m606a(certificatePinner.certificateChainCleaner, this.certificateChainCleaner)) {

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/OkHttpClient.java
38:@Metadata(m33421d1 = {"\u0000è\u0001\n\u0002\u0018\u0002\n\u0002\u0010\u001a\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010 \n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u000b\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0007\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\b\n\u0002\b\u0019\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0010\t\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u000b\b\u0016\u0018\u0000 \u008d\u00012\u00020\u00012\u00020\u00022\u00020\u0003:\u0004\u008e\u0001\u008d\u0001B\u0014\b\u0000\u0012\u0007\u0010\u0089\u0001\u001a\u00020\u000e¢\u0006\u0006\b\u008a\u0001\u0010\u008b\u0001B\u000b\b\u0016¢\u0006\u0006\b\u008a\u0001\u0010\u008c\u0001J\b\u0010\u0005\u001a\u00020\u0004H\u0002J\u0010\u0010\t\u001a\u00020\b2\u0006\u0010\u0007\u001a\u00020\u0006H\u0016J\u0018\u0010\r\u001a\u00020\f2\u0006\u0010\u0007\u001a\u00020\u00062\u0006\u0010\u000b\u001a\u00020\nH\u0016J\b\u0010\u000f\u001a\u00020\u000eH\u0016J\u000f\u0010\u0013\u001a\u00020\u0010H\u0007¢\u0006\u0004\b\u0011\u0010\u0012J\u000f\u0010\u0017\u001a\u00020\u0014H\u0007¢\u0006\u0004\b\u0015\u0010\u0016J\u0015\u0010\u001c\u001a\b\u0012\u0004\u0012\u00020\u00190\u0018H\u0007¢\u0006\u0004\b\u001a\u0010\u001bJ\u0015\u0010\u001e\u001a\b\u0012\u0004\u0012\u00020\u00190\u0018H\u0007¢\u0006\u0004\b\u001d\u0010\u001bJ\u000f\u0010\"\u001a\u00020\u001fH\u0007¢\u0006\u0004\b \u0010!J\u000f\u0010&\u001a\u00020#H\u0007¢\u0006\u0004\b$\u0010%J\u000f\u0010*\u001a\u00020'H\u0007¢\u0006\u0004\b(\u0010)J\u000f\u0010,\u001a\u00020#H\u0007¢\u0006\u0004\b+\u0010%J\u000f\u0010.\u001a\u00020#H\u0007¢\u0006\u0004\b-\u0010%J\u000f\u00102\u001a\u00020/H\u0007¢\u0006\u0004\b0\u00101J\u0011\u00106\u001a\u0004\u0018\u000103H\u0007¢\u0006\u0004\b4\u00105J\u000f\u0010:\u001a\u000207H\u0007¢\u0006\u0004\b8\u00109J\u0011\u0010>\u001a\u0004\u0018\u00010;H\u0007¢\u0006\u0004\b<\u0010=J\u000f\u0010B\u001a\u00020?H\u0007¢\u0006\u0004\b@\u0010AJ\u000f\u0010D\u001a\u00020'H\u0007¢\u0006\u0004\bC\u0010)J\u000f\u0010H\u001a\u00020EH\u0007¢\u0006\u0004\bF\u0010GJ\u000f\u0010L\u001a\u00020IH\u0007¢\u0006\u0004\bJ\u0010KJ\u0015\u0010O\u001a\b\u0012\u0004\u0012\u00020M0\u0018H\u0007¢\u0006\u0004\bN\u0010\u001bJ\u0015\u0010R\u001a\b\u0012\u0004\u0012\u00020P0\u0018H\u0007¢\u0006\u0004\bQ\u0010\u001bJ\u000f\u0010V\u001a\u00020SH\u0007¢\u0006\u0004\bT\u0010UJ\u000f\u0010Z\u001a\u00020WH\u0007¢\u0006\u0004\bX\u0010YJ\u000f\u0010^\u001a\u00020[H\u0007¢\u0006\u0004\b\\\u0010]J\u000f\u0010`\u001a\u00020[H\u0007¢\u0006\u0004\b_\u0010]J\u000f\u0010b\u001a\u00020[H\u0007¢\u0006\u0004\ba\u0010]J\u000f\u0010d\u001a\u00020[H\u0007¢\u0006\u0004\bc\u0010]J\u000f\u0010f\u001a\u00020[H\u0007¢\u0006\u0004\be\u0010]R\u0017\u0010\u0013\u001a\u00020\u00108G¢\u0006\f\n\u0004\b\u0013\u0010g\u001a\u0004\b\u0013\u0010\u0012R\u0017\u0010\u0017\u001a\u00020\u00148G¢\u0006\f\n\u0004\b\u0017\u0010h\u001a\u0004\b\u0017\u0010\u0016R\u001d\u0010\u001c\u001a\b\u0012\u0004\u0012\u00020\u00190\u00188G¢\u0006\f\n\u0004\b\u001c\u0010i\u001a\u0004\b\u001c\u0010\u001bR\u001d\u0010\u001e\u001a\b\u0012\u0004\u0012\u00020\u00190\u00188G¢\u0006\f\n\u0004\b\u001e\u0010i\u001a\u0004\b\u001e\u0010\u001bR\u0017\u0010\"\u001a\u00020\u001f8G¢\u0006\f\n\u0004\b\"\u0010j\u001a\u0004\b\"\u0010!R\u0017\u0010&\u001a\u00020#8G¢\u0006\f\n\u0004\b&\u0010k\u001a\u0004\b&\u0010%R\u0017\u0010*\u001a\u00020'8G¢\u0006\f\n\u0004\b*\u0010l\u001a\u0004\b*\u0010)R\u0017\u0010,\u001a\u00020#8G¢\u0006\f\n\u0004\b,\u0010k\u001a\u0004\b,\u0010%R\u0017\u0010.\u001a\u00020#8G¢\u0006\f\n\u0004\b.\u0010k\u001a\u0004\b.\u0010%R\u0017\u00102\u001a\u00020/8G¢\u0006\f\n\u0004\b2\u0010m\u001a\u0004\b2\u00101R\u0019\u00106\u001a\u0004\u0018\u0001038G¢\u0006\f\n\u0004\b6\u0010n\u001a\u0004\b6\u00105R\u0017\u0010:\u001a\u0002078G¢\u0006\f\n\u0004\b:\u0010o\u001a\u0004\b:\u00109R\u0019\u0010>\u001a\u0004\u0018\u00010;8G¢\u0006\f\n\u0004\b>\u0010p\u001a\u0004\b>\u0010=R\u0017\u0010B\u001a\u00020?8G¢\u0006\f\n\u0004\bB\u0010q\u001a\u0004\bB\u0010AR\u0017\u0010D\u001a\u00020'8G¢\u0006\f\n\u0004\bD\u0010l\u001a\u0004\bD\u0010)R\u0017\u0010H\u001a\u00020E8G¢\u0006\f\n\u0004\bH\u0010r\u001a\u0004\bH\u0010GR\u0016\u0010s\u001a\u0004\u0018\u00010I8\u0002X\u0082\u0004¢\u0006\u0006\n\u0004\bs\u0010tR\u0019\u0010v\u001a\u0004\u0018\u00010u8G¢\u0006\f\n\u0004\bv\u0010w\u001a\u0004\bv\u0010xR\u001d\u0010O\u001a\b\u0012\u0004\u0012\u00020M0\u00188G¢\u0006\f\n\u0004\bO\u0010i\u001a\u0004\bO\u0010\u001bR\u001d\u0010R\u001a\b\u0012\u0004\u0012\u00020P0\u00188G¢\u0006\f\n\u0004\bR\u0010i\u001a\u0004\bR\u0010\u001bR\u0017\u0010V\u001a\u00020S8G¢\u0006\f\n\u0004\bV\u0010y\u001a\u0004\bV\u0010UR\u0017\u0010Z\u001a\u00020W8G¢\u0006\f\n\u0004\bZ\u0010z\u001a\u0004\bZ\u0010YR\u0019\u0010|\u001a\u0004\u0018\u00010{8G¢\u0006\f\n\u0004\b|\u0010}\u001a\u0004\b|\u0010~R\u0017\u0010^\u001a\u00020[8G¢\u0006\f\n\u0004\b^\u0010\u007f\u001a\u0004\b^\u0010]R\u0017\u0010`\u001a\u00020[8G¢\u0006\f\n\u0004\b`\u0010\u007f\u001a\u0004\b`\u0010]R\u0017\u0010b\u001a\u00020[8G¢\u0006\f\n\u0004\bb\u0010\u007f\u001a\u0004\bb\u0010]R\u0017\u0010d\u001a\u00020[8G¢\u0006\f\n\u0004\bd\u0010\u007f\u001a\u0004\bd\u0010]R\u0017\u0010f\u001a\u00020[8G¢\u0006\f\n\u0004\bf\u0010\u007f\u001a\u0004\bf\u0010]R\u001d\u0010\u0081\u0001\u001a\u00030\u0080\u00018G¢\u0006\u0010\n\u0006\b\u0081\u0001\u0010\u0082\u0001\u001a\u0006\b\u0081\u0001\u0010\u0083\u0001R\u001d\u0010\u0085\u0001\u001a\u00030\u0084\u00018\u0006¢\u0006\u0010\n\u0006\b\u0085\u0001\u0010\u0086\u0001\u001a\u0006\b\u0087\u0001\u0010\u0088\u0001R\u0011\u0010L\u001a\u00020I8G¢\u0006\u0006\u001a\u0004\bL\u0010K¨\u0006\u008f\u0001"}, m33422d2 = {"Lokhttp3/OkHttpClient;", HttpUrl.FRAGMENT_ENCODE_SET, "Lokhttp3/Call$Factory;", "Lokhttp3/WebSocket$Factory;", "Lp9/c0;", "verifyClientState", "Lokhttp3/Request;", "request", "Lokhttp3/Call;", "newCall", "Lokhttp3/WebSocketListener;", "listener", "Lokhttp3/WebSocket;", "newWebSocket", "Lokhttp3/OkHttpClient$Builder;", "newBuilder", "Lokhttp3/Dispatcher;", "-deprecated_dispatcher", "()Lokhttp3/Dispatcher;", "dispatcher", "Lokhttp3/ConnectionPool;", "-deprecated_connectionPool", "()Lokhttp3/ConnectionPool;", "connectionPool", HttpUrl.FRAGMENT_ENCODE_SET, "Lokhttp3/Interceptor;", "-deprecated_interceptors", "()Ljava/util/List;", "interceptors", "-deprecated_networkInterceptors", "networkInterceptors", "Lokhttp3/EventListener$Factory;", "-deprecated_eventListenerFactory", "()Lokhttp3/EventListener$Factory;", "eventListenerFactory", HttpUrl.FRAGMENT_ENCODE_SET, "-deprecated_retryOnConnectionFailure", "()Z", "retryOnConnectionFailure", "Lokhttp3/Authenticator;", "-deprecated_authenticator", "()Lokhttp3/Authenticator;", "authenticator", "-deprecated_followRedirects", "followRedirects", "-deprecated_followSslRedirects", "followSslRedirects", "Lokhttp3/CookieJar;", "-deprecated_cookieJar", "()Lokhttp3/CookieJar;", "cookieJar", "Lokhttp3/Cache;", "-deprecated_cache", "()Lokhttp3/Cache;", "cache", "Lokhttp3/Dns;", "-deprecated_dns", "()Lokhttp3/Dns;", "dns", "Ljava/net/Proxy;", "-deprecated_proxy", "()Ljava/net/Proxy;", "proxy", "Ljava/net/ProxySelector;", "-deprecated_proxySelector", "()Ljava/net/ProxySelector;", "proxySelector", "-deprecated_proxyAuthenticator", "proxyAuthenticator", "Ljavax/net/SocketFactory;", "-deprecated_socketFactory", "()Ljavax/net/SocketFactory;", "socketFactory", "Ljavax/net/ssl/SSLSocketFactory;", "-deprecated_sslSocketFactory", "()Ljavax/net/ssl/SSLSocketFactory;", "sslSocketFactory", "Lokhttp3/ConnectionSpec;", "-deprecated_connectionSpecs", "connectionSpecs", "Lokhttp3/Protocol;", "-deprecated_protocols", "protocols", "Ljavax/net/ssl/HostnameVerifier;", "-deprecated_hostnameVerifier", "()Ljavax/net/ssl/HostnameVerifier;", "hostnameVerifier", "Lokhttp3/CertificatePinner;", "-deprecated_certificatePinner", "()Lokhttp3/CertificatePinner;", "certificatePinner", HttpUrl.FRAGMENT_ENCODE_SET, "-deprecated_callTimeoutMillis", "()I", "callTimeoutMillis", "-deprecated_connectTimeoutMillis", "connectTimeoutMillis", "-deprecated_readTimeoutMillis", "readTimeoutMillis", "-deprecated_writeTimeoutMillis", "writeTimeoutMillis", "-deprecated_pingIntervalMillis", "pingIntervalMillis", "Lokhttp3/Dispatcher;", "Lokhttp3/ConnectionPool;", "Ljava/util/List;", "Lokhttp3/EventListener$Factory;", "Z", "Lokhttp3/Authenticator;", "Lokhttp3/CookieJar;", "Lokhttp3/Cache;", "Lokhttp3/Dns;", "Ljava/net/Proxy;", "Ljava/net/ProxySelector;", "Ljavax/net/SocketFactory;", "sslSocketFactoryOrNull", "Ljavax/net/ssl/SSLSocketFactory;", "Ljavax/net/ssl/X509TrustManager;", "x509TrustManager", "Ljavax/net/ssl/X509TrustManager;", "()Ljavax/net/ssl/X509TrustManager;", "Ljavax/net/ssl/HostnameVerifier;", "Lokhttp3/CertificatePinner;", "Lokhttp3/internal/tls/CertificateChainCleaner;", "certificateChainCleaner", "Lokhttp3/internal/tls/CertificateChainCleaner;", "()Lokhttp3/internal/tls/CertificateChainCleaner;", "I", HttpUrl.FRAGMENT_ENCODE_SET, "minWebSocketMessageToCompress", "J", "()J", "Lokhttp3/internal/connection/RouteDatabase;", "routeDatabase", "Lokhttp3/internal/connection/RouteDatabase;", "getRouteDatabase", "()Lokhttp3/internal/connection/RouteDatabase;", "builder", "<init>", "(Lokhttp3/OkHttpClient$Builder;)V", "()V", "Companion", "Builder", "okhttp"}, m33423k = 1, m33424mv = {1, 6, 0})
45:    private final CertificatePinner certificatePinner;
77:    @Metadata(m33421d1 = {"\u0000Î\u0001\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010!\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000b\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010 \n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\t\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\b\n\u0002\u0018\u0002\n\u0002\b]\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0010\b\n\u0002\b\u0012\n\u0002\u0018\u0002\n\u0002\b\u000b\u0018\u00002\u00020\u0001B\t¢\u0006\u0006\bÆ\u0001\u0010Ç\u0001B\u0014\b\u0010\u0012\u0007\u0010È\u0001\u001a\u00020G¢\u0006\u0006\bÆ\u0001\u0010É\u0001J\u000e\u0010\u0003\u001a\u00020\u00002\u0006\u0010\u0003\u001a\u00020\u0002J\u000e\u0010\u0005\u001a\u00020\u00002\u0006\u0010\u0005\u001a\u00020\u0004J\f\u0010\b\u001a\b\u0012\u0004\u0012\u00020\u00070\u0006J\u000e\u0010\n\u001a\u00020\u00002\u0006\u0010\t\u001a\u00020\u0007J)\u0010\n\u001a\u00020\u00002\u0014\b\u0004\u0010\u000e\u001a\u000e\u0012\u0004\u0012\u00020\f\u0012\u0004\u0012\u00020\r0\u000bH\u0087\bø\u0001\u0000¢\u0006\u0004\b\u000f\u0010\u0010J\f\u0010\u0011\u001a\b\u0012\u0004\u0012\u00020\u00070\u0006J\u000e\u0010\u0012\u001a\u00020\u00002\u0006\u0010\t\u001a\u00020\u0007J)\u0010\u0012\u001a\u00020\u00002\u0014\b\u0004\u0010\u000e\u001a\u000e\u0012\u0004\u0012\u00020\f\u0012\u0004\u0012\u00020\r0\u000bH\u0087\bø\u0001\u0000¢\u0006\u0004\b\u0013\u0010\u0010J\u000e\u0010\u0015\u001a\u00020\u00002\u0006\u0010\u0015\u001a\u00020\u0014J\u000e\u0010\u0017\u001a\u00020\u00002\u0006\u0010\u0017\u001a\u00020\u0016J\u000e\u0010\u0019\u001a\u00020\u00002\u0006\u0010\u0019\u001a\u00020\u0018J\u000e\u0010\u001b\u001a\u00020\u00002\u0006\u0010\u001b\u001a\u00020\u001aJ\u000e\u0010\u001c\u001a\u00020\u00002\u0006\u0010\u001c\u001a\u00020\u0018J\u000e\u0010\u001e\u001a\u00020\u00002\u0006\u0010\u001d\u001a\u00020\u0018J\u000e\u0010 \u001a\u00020\u00002\u0006\u0010 \u001a\u00020\u001fJ\u0010\u0010\"\u001a\u00020\u00002\b\u0010\"\u001a\u0004\u0018\u00010!J\u000e\u0010$\u001a\u00020\u00002\u0006\u0010$\u001a\u00020#J\u0010\u0010&\u001a\u00020\u00002\b\u0010&\u001a\u0004\u0018\u00010%J\u000e\u0010(\u001a\u00020\u00002\u0006\u0010(\u001a\u00020'J\u000e\u0010)\u001a\u00020\u00002\u0006\u0010)\u001a\u00020\u001aJ\u000e\u0010+\u001a\u00020\u00002\u0006\u0010+\u001a\u00020*J\u0010\u0010-\u001a\u00020\u00002\u0006\u0010-\u001a\u00020,H\u0007J\u0016\u0010-\u001a\u00020\u00002\u0006\u0010-\u001a\u00020,2\u0006\u0010/\u001a\u00020.J\u0014\u00102\u001a\u00020\u00002\f\u00102\u001a\b\u0012\u0004\u0012\u00020100J\u0014\u00104\u001a\u00020\u00002\f\u00104\u001a\b\u0012\u0004\u0012\u00020300J\u000e\u00106\u001a\u00020\u00002\u0006\u00106\u001a\u000205J\u000e\u00108\u001a\u00020\u00002\u0006\u00108\u001a\u000207J\u0016\u0010=\u001a\u00020\u00002\u0006\u0010:\u001a\u0002092\u0006\u0010<\u001a\u00020;J\u0010\u0010=\u001a\u00020\u00002\u0006\u0010?\u001a\u00020>H\u0007J\u0016\u0010@\u001a\u00020\u00002\u0006\u0010:\u001a\u0002092\u0006\u0010<\u001a\u00020;J\u0010\u0010@\u001a\u00020\u00002\u0006\u0010?\u001a\u00020>H\u0007J\u0016\u0010A\u001a\u00020\u00002\u0006\u0010:\u001a\u0002092\u0006\u0010<\u001a\u00020;J\u0010\u0010A\u001a\u00020\u00002\u0006\u0010?\u001a\u00020>H\u0007J\u0016\u0010B\u001a\u00020\u00002\u0006\u0010:\u001a\u0002092\u0006\u0010<\u001a\u00020;J\u0010\u0010B\u001a\u00020\u00002\u0006\u0010?\u001a\u00020>H\u0007J\u0016\u0010D\u001a\u00020\u00002\u0006\u0010C\u001a\u0002092\u0006\u0010<\u001a\u00020;J\u0010\u0010D\u001a\u00020\u00002\u0006\u0010?\u001a\u00020>H\u0007J\u000e\u0010F\u001a\u00020\u00002\u0006\u0010E\u001a\u000209J\u0006\u0010H\u001a\u00020GR\"\u0010\u0003\u001a\u00020\u00028\u0000@\u0000X\u0080\u000e¢\u0006\u0012\n\u0004\b\u0003\u0010I\u001a\u0004\bJ\u0010K\"\u0004\bL\u0010MR\"\u0010\u0005\u001a\u00020\u00048\u0000@\u0000X\u0080\u000e¢\u0006\u0012\n\u0004\b\u0005\u0010N\u001a\u0004\bO\u0010P\"\u0004\bQ\u0010RR \u0010\b\u001a\b\u0012\u0004\u0012\u00020\u00070\u00068\u0000X\u0080\u0004¢\u0006\f\n\u0004\b\b\u0010S\u001a\u0004\bT\u0010UR \u0010\u0011\u001a\b\u0012\u0004\u0012\u00020\u00070\u00068\u0000X\u0080\u0004¢\u0006\f\n\u0004\b\u0011\u0010S\u001a\u0004\bV\u0010UR\"\u0010\u0017\u001a\u00020\u00168\u0000@\u0000X\u0080\u000e¢\u0006\u0012\n\u0004\b\u0017\u0010W\u001a\u0004\bX\u0010Y\"\u0004\bZ\u0010[R\"\u0010\u0019\u001a\u00020\u00188\u0000@\u0000X\u0080\u000e¢\u0006\u0012\n\u0004\b\u0019\u0010\\\u001a\u0004\b]\u0010^\"\u0004\b_\u0010`R\"\u0010\u001b\u001a\u00020\u001a8\u0000@\u0000X\u0080\u000e¢\u0006\u0012\n\u0004\b\u001b\u0010a\u001a\u0004\bb\u0010c\"\u0004\bd\u0010eR\"\u0010\u001c\u001a\u00020\u00188\u0000@\u0000X\u0080\u000e¢\u0006\u0012\n\u0004\b\u001c\u0010\\\u001a\u0004\bf\u0010^\"\u0004\bg\u0010`R\"\u0010\u001e\u001a\u00020\u00188\u0000@\u0000X\u0080\u000e¢\u0006\u0012\n\u0004\b\u001e\u0010\\\u001a\u0004\bh\u0010^\"\u0004\bi\u0010`R\"\u0010 \u001a\u00020\u001f8\u0000@\u0000X\u0080\u000e¢\u0006\u0012\n\u0004\b \u0010j\u001a\u0004\bk\u0010l\"\u0004\bm\u0010nR$\u0010\"\u001a\u0004\u0018\u00010!8\u0000@\u0000X\u0080\u000e¢\u0006\u0012\n\u0004\b\"\u0010o\u001a\u0004\bp\u0010q\"\u0004\br\u0010sR\"\u0010$\u001a\u00020#8\u0000@\u0000X\u0080\u000e¢\u0006\u0012\n\u0004\b$\u0010t\u001a\u0004\bu\u0010v\"\u0004\bw\u0010xR$\u0010&\u001a\u0004\u0018\u00010%8\u0000@\u0000X\u0080\u000e¢\u0006\u0012\n\u0004\b&\u0010y\u001a\u0004\bz\u0010{\"\u0004\b|\u0010}R'\u0010(\u001a\u0004\u0018\u00010'8\u0000@\u0000X\u0080\u000e¢\u0006\u0015\n\u0004\b(\u0010~\u001a\u0005\b\u007f\u0010\u0080\u0001\"\u0006\b\u0081\u0001\u0010\u0082\u0001R$\u0010)\u001a\u00020\u001a8\u0000@\u0000X\u0080\u000e¢\u0006\u0014\n\u0004\b)\u0010a\u001a\u0005\b\u0083\u0001\u0010c\"\u0005\b\u0084\u0001\u0010eR'\u0010+\u001a\u00020*8\u0000@\u0000X\u0080\u000e¢\u0006\u0017\n\u0005\b+\u0010\u0085\u0001\u001a\u0006\b\u0086\u0001\u0010\u0087\u0001\"\u0006\b\u0088\u0001\u0010\u0089\u0001R+\u0010\u008a\u0001\u001a\u0004\u0018\u00010,8\u0000@\u0000X\u0080\u000e¢\u0006\u0018\n\u0006\b\u008a\u0001\u0010\u008b\u0001\u001a\u0006\b\u008c\u0001\u0010\u008d\u0001\"\u0006\b\u008e\u0001\u0010\u008f\u0001R+\u0010\u0090\u0001\u001a\u0004\u0018\u00010.8\u0000@\u0000X\u0080\u000e¢\u0006\u0018\n\u0006\b\u0090\u0001\u0010\u0091\u0001\u001a\u0006\b\u0092\u0001\u0010\u0093\u0001\"\u0006\b\u0094\u0001\u0010\u0095\u0001R+\u00102\u001a\b\u0012\u0004\u0012\u000201008\u0000@\u0000X\u0080\u000e¢\u0006\u0015\n\u0004\b2\u0010S\u001a\u0005\b\u0096\u0001\u0010U\"\u0006\b\u0097\u0001\u0010\u0098\u0001R+\u00104\u001a\b\u0012\u0004\u0012\u000203008\u0000@\u0000X\u0080\u000e¢\u0006\u0015\n\u0004\b4\u0010S\u001a\u0005\b\u0099\u0001\u0010U\"\u0006\b\u009a\u0001\u0010\u0098\u0001R'\u00106\u001a\u0002058\u0000@\u0000X\u0080\u000e¢\u0006\u0017\n\u0005\b6\u0010\u009b\u0001\u001a\u0006\b\u009c\u0001\u0010\u009d\u0001\"\u0006\b\u009e\u0001\u0010\u009f\u0001R'\u00108\u001a\u0002078\u0000@\u0000X\u0080\u000e¢\u0006\u0017\n\u0005\b8\u0010 \u0001\u001a\u0006\b¡\u0001\u0010¢\u0001\"\u0006\b£\u0001\u0010¤\u0001R,\u0010¦\u0001\u001a\u0005\u0018\u00010¥\u00018\u0000@\u0000X\u0080\u000e¢\u0006\u0018\n\u0006\b¦\u0001\u0010§\u0001\u001a\u0006\b¨\u0001\u0010©\u0001\"\u0006\bª\u0001\u0010«\u0001R(\u0010=\u001a\u00030¬\u00018\u0000@\u0000X\u0080\u000e¢\u0006\u0017\n\u0005\b=\u0010\u00ad\u0001\u001a\u0006\b®\u0001\u0010¯\u0001\"\u0006\b°\u0001\u0010±\u0001R(\u0010@\u001a\u00030¬\u00018\u0000@\u0000X\u0080\u000e¢\u0006\u0017\n\u0005\b@\u0010\u00ad\u0001\u001a\u0006\b²\u0001\u0010¯\u0001\"\u0006\b³\u0001\u0010±\u0001R(\u0010A\u001a\u00030¬\u00018\u0000@\u0000X\u0080\u000e¢\u0006\u0017\n\u0005\bA\u0010\u00ad\u0001\u001a\u0006\b´\u0001\u0010¯\u0001\"\u0006\bµ\u0001\u0010±\u0001R(\u0010B\u001a\u00030¬\u00018\u0000@\u0000X\u0080\u000e¢\u0006\u0017\n\u0005\bB\u0010\u00ad\u0001\u001a\u0006\b¶\u0001\u0010¯\u0001\"\u0006\b·\u0001\u0010±\u0001R(\u0010D\u001a\u00030¬\u00018\u0000@\u0000X\u0080\u000e¢\u0006\u0017\n\u0005\bD\u0010\u00ad\u0001\u001a\u0006\b¸\u0001\u0010¯\u0001\"\u0006\b¹\u0001\u0010±\u0001R'\u0010F\u001a\u0002098\u0000@\u0000X\u0080\u000e¢\u0006\u0017\n\u0005\bF\u0010º\u0001\u001a\u0006\b»\u0001\u0010¼\u0001\"\u0006\b½\u0001\u0010¾\u0001R,\u0010À\u0001\u001a\u0005\u0018\u00010¿\u00018\u0000@\u0000X\u0080\u000e¢\u0006\u0018\n\u0006\bÀ\u0001\u0010Á\u0001\u001a\u0006\bÂ\u0001\u0010Ã\u0001\"\u0006\bÄ\u0001\u0010Å\u0001\u0082\u0002\u0007\n\u0005\b\u009920\u0001¨\u0006Ê\u0001"}, m33422d2 = {"Lokhttp3/OkHttpClient$Builder;", HttpUrl.FRAGMENT_ENCODE_SET, "Lokhttp3/Dispatcher;", "dispatcher", "Lokhttp3/ConnectionPool;", "connectionPool", HttpUrl.FRAGMENT_ENCODE_SET, "Lokhttp3/Interceptor;", "interceptors", "interceptor", "addInterceptor", "Lkotlin/Function1;", "Lokhttp3/Interceptor$Chain;", "Lokhttp3/Response;", "block", "-addInterceptor", "(Lz9/l;)Lokhttp3/OkHttpClient$Builder;", "networkInterceptors", "addNetworkInterceptor", "-addNetworkInterceptor", "Lokhttp3/EventListener;", "eventListener", "Lokhttp3/EventListener$Factory;", "eventListenerFactory", HttpUrl.FRAGMENT_ENCODE_SET, "retryOnConnectionFailure", "Lokhttp3/Authenticator;", "authenticator", "followRedirects", "followProtocolRedirects", "followSslRedirects", "Lokhttp3/CookieJar;", "cookieJar", "Lokhttp3/Cache;", "cache", "Lokhttp3/Dns;", "dns", "Ljava/net/Proxy;", "proxy", "Ljava/net/ProxySelector;", "proxySelector", "proxyAuthenticator", "Ljavax/net/SocketFactory;", "socketFactory", "Ljavax/net/ssl/SSLSocketFactory;", "sslSocketFactory", "Ljavax/net/ssl/X509TrustManager;", "trustManager", HttpUrl.FRAGMENT_ENCODE_SET, "Lokhttp3/ConnectionSpec;", "connectionSpecs", "Lokhttp3/Protocol;", "protocols", "Ljavax/net/ssl/HostnameVerifier;", "hostnameVerifier", "Lokhttp3/CertificatePinner;", "certificatePinner", HttpUrl.FRAGMENT_ENCODE_SET, "timeout", "Ljava/util/concurrent/TimeUnit;", "unit", "callTimeout", "Ljava/time/Duration;", "duration", "connectTimeout", "readTimeout", "writeTimeout", "interval", "pingInterval", "bytes", "minWebSocketMessageToCompress", "Lokhttp3/OkHttpClient;", "build", "Lokhttp3/Dispatcher;", "getDispatcher$okhttp", "()Lokhttp3/Dispatcher;", "setDispatcher$okhttp", "(Lokhttp3/Dispatcher;)V", "Lokhttp3/ConnectionPool;", "getConnectionPool$okhttp", "()Lokhttp3/ConnectionPool;", "setConnectionPool$okhttp", "(Lokhttp3/ConnectionPool;)V", "Ljava/util/List;", "getInterceptors$okhttp", "()Ljava/util/List;", "getNetworkInterceptors$okhttp", "Lokhttp3/EventListener$Factory;", "getEventListenerFactory$okhttp", "()Lokhttp3/EventListener$Factory;", "setEventListenerFactory$okhttp", "(Lokhttp3/EventListener$Factory;)V", "Z", "getRetryOnConnectionFailure$okhttp", "()Z", "setRetryOnConnectionFailure$okhttp", "(Z)V", "Lokhttp3/Authenticator;", "getAuthenticator$okhttp", "()Lokhttp3/Authenticator;", "setAuthenticator$okhttp", "(Lokhttp3/Authenticator;)V", "getFollowRedirects$okhttp", "setFollowRedirects$okhttp", "getFollowSslRedirects$okhttp", "setFollowSslRedirects$okhttp", "Lokhttp3/CookieJar;", "getCookieJar$okhttp", "()Lokhttp3/CookieJar;", "setCookieJar$okhttp", "(Lokhttp3/CookieJar;)V", "Lokhttp3/Cache;", "getCache$okhttp", "()Lokhttp3/Cache;", "setCache$okhttp", "(Lokhttp3/Cache;)V", "Lokhttp3/Dns;", "getDns$okhttp", "()Lokhttp3/Dns;", "setDns$okhttp", "(Lokhttp3/Dns;)V", "Ljava/net/Proxy;", "getProxy$okhttp", "()Ljava/net/Proxy;", "setProxy$okhttp", "(Ljava/net/Proxy;)V", "Ljava/net/ProxySelector;", "getProxySelector$okhttp", "()Ljava/net/ProxySelector;", "setProxySelector$okhttp", "(Ljava/net/ProxySelector;)V", "getProxyAuthenticator$okhttp", "setProxyAuthenticator$okhttp", "Ljavax/net/SocketFactory;", "getSocketFactory$okhttp", "()Ljavax/net/SocketFactory;", "setSocketFactory$okhttp", "(Ljavax/net/SocketFactory;)V", "sslSocketFactoryOrNull", "Ljavax/net/ssl/SSLSocketFactory;", "getSslSocketFactoryOrNull$okhttp", "()Ljavax/net/ssl/SSLSocketFactory;", "setSslSocketFactoryOrNull$okhttp", "(Ljavax/net/ssl/SSLSocketFactory;)V", "x509TrustManagerOrNull", "Ljavax/net/ssl/X509TrustManager;", "getX509TrustManagerOrNull$okhttp", "()Ljavax/net/ssl/X509TrustManager;", "setX509TrustManagerOrNull$okhttp", "(Ljavax/net/ssl/X509TrustManager;)V", "getConnectionSpecs$okhttp", "setConnectionSpecs$okhttp", "(Ljava/util/List;)V", "getProtocols$okhttp", "setProtocols$okhttp", "Ljavax/net/ssl/HostnameVerifier;", "getHostnameVerifier$okhttp", "()Ljavax/net/ssl/HostnameVerifier;", "setHostnameVerifier$okhttp", "(Ljavax/net/ssl/HostnameVerifier;)V", "Lokhttp3/CertificatePinner;", "getCertificatePinner$okhttp", "()Lokhttp3/CertificatePinner;", "setCertificatePinner$okhttp", "(Lokhttp3/CertificatePinner;)V", "Lokhttp3/internal/tls/CertificateChainCleaner;", "certificateChainCleaner", "Lokhttp3/internal/tls/CertificateChainCleaner;", "getCertificateChainCleaner$okhttp", "()Lokhttp3/internal/tls/CertificateChainCleaner;", "setCertificateChainCleaner$okhttp", "(Lokhttp3/internal/tls/CertificateChainCleaner;)V", HttpUrl.FRAGMENT_ENCODE_SET, "I", "getCallTimeout$okhttp", "()I", "setCallTimeout$okhttp", "(I)V", "getConnectTimeout$okhttp", "setConnectTimeout$okhttp", "getReadTimeout$okhttp", "setReadTimeout$okhttp", "getWriteTimeout$okhttp", "setWriteTimeout$okhttp", "getPingInterval$okhttp", "setPingInterval$okhttp", "J", "getMinWebSocketMessageToCompress$okhttp", "()J", "setMinWebSocketMessageToCompress$okhttp", "(J)V", "Lokhttp3/internal/connection/RouteDatabase;", "routeDatabase", "Lokhttp3/internal/connection/RouteDatabase;", "getRouteDatabase$okhttp", "()Lokhttp3/internal/connection/RouteDatabase;", "setRouteDatabase$okhttp", "(Lokhttp3/internal/connection/RouteDatabase;)V", "<init>", "()V", "okHttpClient", "(Lokhttp3/OkHttpClient;)V", "okhttp"}, m33423k = 1, m33424mv = {1, 6, 0})
83:        private CertificatePinner certificatePinner;
131:            this.certificatePinner = CertificatePinner.DEFAULT;
195:        public final Builder certificatePinner(CertificatePinner certificatePinner) {
196:            C0128r.m611f(certificatePinner, "certificatePinner");
197:            if (!C0128r.m606a(certificatePinner, getCertificatePinner())) {
200:            setCertificatePinner$okhttp(certificatePinner);
290:            return this.certificatePinner;
525:        public final void setCertificatePinner$okhttp(CertificatePinner certificatePinner) {
526:            C0128r.m611f(certificatePinner, "<set-?>");
527:            this.certificatePinner = certificatePinner;
741:            this.certificatePinner = okHttpClient.certificatePinner();
827:            this.certificatePinner = CertificatePinner.DEFAULT;
836:            CertificatePinner certificatePinner = builder.getCertificatePinner();
838:            this.certificatePinner = certificatePinner.withCertificateChainCleaner$okhttp(certificateChainCleaner);
850:            CertificatePinner certificatePinner2 = builder.getCertificatePinner();
852:            this.certificatePinner = certificatePinner2.withCertificateChainCleaner$okhttp(certificateChainCleaner2);
897:        if (!C0128r.m606a(this.certificatePinner, CertificatePinner.DEFAULT)) {
917:    /* renamed from: -deprecated_certificatePinner, reason: not valid java name and from getter */
919:        return this.certificatePinner;
1049:    public final CertificatePinner certificatePinner() {
1050:        return this.certificatePinner;

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/connection/RealCall.java
253:        CertificatePinner certificatePinner;
257:            certificatePinner = this.client.certificatePinner();
261:            certificatePinner = null;
263:        return new Address(url.host(), url.port(), this.client.dns(), this.client.socketFactory(), sSLSocketFactory, hostnameVerifier, certificatePinner, this.client.proxyAuthenticator(), this.client.proxy(), this.client.protocols(), this.client.connectionSpecs(), this.client.proxySelector());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/connection/RealConnection$connectTls$1.java
19:    final /* synthetic */ CertificatePinner $certificatePinner;
23:    RealConnection$connectTls$1(CertificatePinner certificatePinner, Handshake handshake, Address address) {
25:        this.$certificatePinner = certificatePinner;
32:        CertificateChainCleaner certificateChainCleaner = this.$certificatePinner.getCertificateChainCleaner();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/connection/RealConnection.java
191:                    CertificatePinner certificatePinner = address.certificatePinner();
192:                    C0128r.m608c(certificatePinner);
193:                    this.handshake = new Handshake(handshake.tlsVersion(), handshake.cipherSuite(), handshake.localCertificates(), new RealConnection$connectTls$1(certificatePinner, handshake, address));
194:                    certificatePinner.check$okhttp(address.url().host(), new RealConnection$connectTls$2(this));
446:            CertificatePinner certificatePinner = address.certificatePinner();
447:            C0128r.m608c(certificatePinner);
451:            certificatePinner.check(host, handshake.peerCertificates());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/platform/BouncyCastlePlatform.java
113:        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance("PKIX", "BCJSSE");
114:        trustManagerFactory.init((KeyStore) null);
115:        TrustManager[] trustManagers = trustManagerFactory.getTrustManagers();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/platform/ConscryptPlatform.java
152:        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
153:        trustManagerFactory.init((KeyStore) null);
154:        TrustManager[] trustManagers = trustManagerFactory.getTrustManagers();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/platform/OpenJSSEPlatform.java
115:        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm(), this.provider);
116:        trustManagerFactory.init((KeyStore) null);
117:        TrustManager[] trustManagers = trustManagerFactory.getTrustManagers();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/internal/platform/Platform.java
259:        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
260:        trustManagerFactory.init((KeyStore) null);
261:        TrustManager[] trustManagers = trustManagerFactory.getTrustManagers();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p185m3/C8585b.java
27:            KeyStore keyStore = KeyStore.getInstance("AndroidKeyStore");
42:            KeyStore keyStore = KeyStore.getInstance("AndroidKeyStore");

[!] QuickNote:
    - It is recommended to implement Certificate Pinning appropriately, if observed. Please note that the application should use its own certificate store, or pins the endpoint certificate or public key. Further, it should not establish connections with endpoints that offer a different certificate or key, even if signed by a trusted CA.

[*] Reference:
    - OWASP MASVS: MSTG-NETWORK-4 | CWE-295: Improper Certificate Validation
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x10-v5-network_communication_requirements

==>> The custom Trust Anchors...


==>> The Security Provider implementation...

[!] QuickNote:
    - It is recommended that applications based on the Android SDK should depend on GooglePlayServices, if not observed. Please note that, The ProviderInstaller class is called with either installIfNeeded or installIfNeededAsync to prevent SSL exploits.

[*] Reference:
    - OWASP MASVS: MSTG-NETWORK-6 | CWE-693: Protection Mechanism Failure
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x10-v5-network_communication_requirements


[+] Hunting begins based on "V6: Platform Interaction Requirements"
[+] ---------------------------------------------------------------

==>> The Permissions...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/resources/AndroidManifest.xml
13:    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>
14:    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MEDIA_PLAYBACK"/>
15:    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
16:    <uses-permission android:name="android.permission.INTERNET"/>
38:    <uses-permission android:name="android.permission.WAKE_LOCK"/>
39:    <uses-permission android:name="com.android.vending.BILLING"/>
40:    <uses-permission android:name="com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE"/>

[!] QuickNote:
    - It is recommended that the appropriate protectionLevel should be configured in the Permission declaration, if observed. Please note that, Dangerous permissions involve the user’s privacy.

[*] Reference:
    - OWASP MASVS: MSTG-PLATFORM-1 | CWE-276: Incorrect Default Permissions
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x11-v6-interaction_with_the_environment

==>> The Deprecated/Unsupprotive Permissions...


==>> The Custom Permissions...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/widget/C0768l.java
254:            return str == null || context.checkSelfPermission(str) == 0;

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5465v0.java
58:            int r5 = r5.checkSelfPermission(r8)

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/common/C6598g.java
113:        return context.checkCallingOrSelfPermission(str) == 0;

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p150j6/C7461b.java
26:        return this.f28879a.checkCallingOrSelfPermission(str);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p260s2/C9558d.java
143:            return this.f36734p.checkSelfPermission("android.permission.ACCESS_MEDIA_LOCATION") == 0;

[!] QuickNote:
    - It is recommended that Custom Permissions should be used appropriately, if observed. Please note that, The permissions provided programmatically are enforced in the manifest file, as those are more error-prone and can be bypassed more easily with, e.g., runtime instrumentation.

[*] Reference:
    - OWASP MASVS: MSTG-PLATFORM-1 | CWE-276: Incorrect Default Permissions
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x11-v6-interaction_with_the_environment

==>> The Exported service/activity/provider/receiver without permission set...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/resources/AndroidManifest.xml


==>> The potential SQL Injection instances...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/music/playback/model/C1931u.java
96:        sQLiteDatabase.execSQL(String.format("CREATE TABLE %s (%s INTEGER PRIMARY KEY, %s INTEGER, %s TEXT, %s INTEGER, %s TEXT, %s INTEGER, %s TEXT, %s TEXT, %s TEXT, %s TEXT, %s TEXT, %s TEXT, %s TEXT, %s INTEGER, %s INTEGER, %s INTEGER, %s INTEGER, %s INTEGER, %s INTEGER, %s INTEGER, %s INTEGER, %s INTEGER, %s INTEGER);", "media_item", "store_id", "type", "title", "album_id", "album_title", "artist_id", "artist_name", "album_artist_name", "url", "artwork_url", "asset_url", "genre_name", "composer_name", "duration", "available", "release_date", "album_track_number", "album_track_count", "album_disc_number", "album_disc_count", "explicit_content_rating", "lyrics_available", "media_should_bookmark_play_position"));
97:        sQLiteDatabase.execSQL(String.format("CREATE INDEX %s ON %s (%s);", "media_item_available", "media_item", "available"));
98:        sQLiteDatabase.execSQL(String.format("CREATE INDEX %s ON %s (%s);", "media_item_explicit_rating", "media_item", "explicit_content_rating"));
103:        sQLiteDatabase.execSQL(String.format("DROP INDEX IF EXISTS %s", "media_item_available"));
104:        sQLiteDatabase.execSQL(String.format("DROP INDEX IF EXISTS %s", "media_item_explicit_rating"));
105:        sQLiteDatabase.execSQL(String.format("DROP TABLE IF EXISTS %s;", "media_item"));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/music/playback/reporting/C1948d.java
123:        sQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS pafevents (_id INTEGER PRIMARY KEY, containerType INTEGER NOT NULL, containerAdamId INTEGER NOT NULL, containerCloudAlbumId TEXT, playlistCloudId INTEGER NOT NULL, playlistGlobalId TEXT, playlistVersionHash TEXT, stationId TEXT, stationHash TEXT, itemType INTEGER NOT NULL, itemMediaType INTEGER NOT NULL, itemCloudId INTEGER NOT NULL, itemPurchaseId INTEGER NOT NULL, itemSubscriptionId INTEGER NOT NULL, itemLyricsId TEXT, itemDuration INTEGER NOT NULL, itemStartPosition INTEGER NOT NULL, itemEndPosition INTEGER NOT NULL, eventType INTEGER NOT NULL, eventEndReasonType INTEGER NOT NULL, eventReasonHintType INTEGER NOT NULL, offline INTEGER NOT NULL, subscriptionEnabled INTEGER NOT NULL, featureName TEXT, storeFrontId TEXT, persistentId INTEGER NOT NULL, universalId BLOB, timestamp INTEGER NOT NULL, timeZoneOffset INTEGER NOT NULL, privateEnabled INTEGER NOT NULL, recommendationId TEXT, timedMetadata BLOB, trackInfo BLOB, clientAppPackageName TEXT, clientAppVersion TEXT );");
128:        sQLiteDatabase.execSQL("DROP TABLE IF EXISTS pafevents");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/datatransport/runtime/scheduling/persistence/C3507m0.java
165:        m15997m1(sQLiteDatabase.rawQuery("SELECT COUNT(*), transport_name FROM events WHERE timestamp_ms < ? GROUP BY transport_name", strArr), new b() { // from class: com.google.android.datatransport.runtime.scheduling.persistence.r
214:        return (C3444f) m15997m1(sQLiteDatabase.rawQuery("SELECT last_metrics_upload_ms FROM global_log_event_state LIMIT 1", new String[0]), new b() { // from class: com.google.android.datatransport.runtime.scheduling.persistence.d0
237:        return m15944B0 == null ? Boolean.FALSE : (Boolean) m15997m1(m16015w0().rawQuery("SELECT 1 FROM events WHERE context_id = ? LIMIT 1", new String[]{m15944B0.toString()}), new b() { // from class: com.google.android.datatransport.runtime.scheduling.persistence.z
248:        return (List) m15997m1(sQLiteDatabase.rawQuery("SELECT distinct t._id, t.backend_name, t.priority, t.extras FROM transport_contexts AS t, events AS e WHERE e.context_id = t._id", new String[0]), new b() { // from class: com.google.android.datatransport.runtime.scheduling.persistence.k0
306:        return (C3439a) m15997m1(sQLiteDatabase.rawQuery(str, new String[0]), new b() { // from class: com.google.android.datatransport.runtime.scheduling.persistence.b0
429:        m15997m1(sQLiteDatabase.rawQuery(str2, null), new b() { // from class: com.google.android.datatransport.runtime.scheduling.persistence.x
450:        if (((Boolean) m15997m1(sQLiteDatabase.rawQuery("SELECT 1 FROM log_event_dropped WHERE log_source = ? AND reason = ?", new String[]{str, Integer.toString(bVar.getNumber())}), new b() { // from class: com.google.android.datatransport.runtime.scheduling.persistence.v
458:            sQLiteDatabase.execSQL("UPDATE log_event_dropped SET events_dropped_count = events_dropped_count + " + j10 + " WHERE log_source = ? AND reason = ?", new String[]{str, Integer.toString(bVar.getNumber())});
719:        return ((Long) m15997m1(m16015w0().rawQuery("SELECT next_request_ms FROM transport_contexts WHERE backend_name = ? and priority = ?", new String[]{abstractC3453o.mo15751b(), String.valueOf(C9186a.m41236a(abstractC3453o.mo15753d()))}), new b() { // from class: com.google.android.datatransport.runtime.scheduling.persistence.f0

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/datatransport/runtime/scheduling/persistence/C3521t0.java
72:                sQLiteDatabase.execSQL("ALTER TABLE events ADD COLUMN payload_encoding TEXT");
105:        sQLiteDatabase.execSQL("ALTER TABLE events ADD COLUMN inline BOOLEAN NOT NULL DEFAULT 1");
106:        sQLiteDatabase.execSQL("DROP TABLE IF EXISTS event_payloads");
107:        sQLiteDatabase.execSQL("CREATE TABLE event_payloads (sequence_num INTEGER NOT NULL, event_id INTEGER NOT NULL, bytes BLOB NOT NULL,FOREIGN KEY (event_id) REFERENCES events(_id) ON DELETE CASCADE,PRIMARY KEY (sequence_num, event_id))");
113:        sQLiteDatabase.execSQL("DROP TABLE IF EXISTS log_event_dropped");
114:        sQLiteDatabase.execSQL("DROP TABLE IF EXISTS global_log_event_state");
115:        sQLiteDatabase.execSQL("CREATE TABLE log_event_dropped (log_source VARCHAR(45) NOT NULL,reason INTEGER NOT NULL,events_dropped_count BIGINT NOT NULL,PRIMARY KEY(log_source, reason))");
116:        sQLiteDatabase.execSQL("CREATE TABLE global_log_event_state (last_metrics_upload_ms BIGINT PRIMARY KEY)");
117:        sQLiteDatabase.execSQL(f15042r);
150:        sQLiteDatabase.execSQL("CREATE TABLE events (_id INTEGER PRIMARY KEY, context_id INTEGER NOT NULL, transport_name TEXT NOT NULL, timestamp_ms INTEGER NOT NULL, uptime_ms INTEGER NOT NULL, payload BLOB NOT NULL, code INTEGER, num_attempts INTEGER NOT NULL,FOREIGN KEY (context_id) REFERENCES transport_contexts(_id) ON DELETE CASCADE)");
151:        sQLiteDatabase.execSQL("CREATE TABLE event_metadata (_id INTEGER PRIMARY KEY, event_id INTEGER NOT NULL, name TEXT NOT NULL, value TEXT NOT NULL,FOREIGN KEY (event_id) REFERENCES events(_id) ON DELETE CASCADE)");
152:        sQLiteDatabase.execSQL("CREATE TABLE transport_contexts (_id INTEGER PRIMARY KEY, backend_name TEXT NOT NULL, priority INTEGER NOT NULL, next_request_ms INTEGER NOT NULL)");
153:        sQLiteDatabase.execSQL("CREATE INDEX events_backend_id on events(context_id)");
154:        sQLiteDatabase.execSQL("CREATE UNIQUE INDEX contexts_backend_priority on transport_contexts(backend_name, priority)");
160:        sQLiteDatabase.execSQL("ALTER TABLE transport_contexts ADD COLUMN extras BLOB");
161:        sQLiteDatabase.execSQL("CREATE UNIQUE INDEX contexts_backend_priority_extras on transport_contexts(backend_name, priority, extras)");
162:        sQLiteDatabase.execSQL("DROP INDEX contexts_backend_priority");
168:        sQLiteDatabase.rawQuery("PRAGMA busy_timeout=0;", new String[0]).close();
179:        sQLiteDatabase.execSQL("DROP TABLE events");
180:        sQLiteDatabase.execSQL("DROP TABLE event_metadata");
181:        sQLiteDatabase.execSQL("DROP TABLE transport_contexts");
182:        sQLiteDatabase.execSQL("DROP TABLE IF EXISTS event_payloads");
183:        sQLiteDatabase.execSQL("DROP TABLE IF EXISTS log_event_dropped");
184:        sQLiteDatabase.execSQL("DROP TABLE IF EXISTS global_log_event_state");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5852l.java
83:                Cursor rawQuery = m24788P().rawQuery(str, strArr);
107:                cursor = m24788P().rawQuery(str, strArr);
161:                        rawQuery = m24788P.rawQuery("select app_id, metadata_fingerprint from raw_events where " + str4 + "app_id in (select app_id from apps where config_fetched_time >= ?) order by rowid limit 1;", strArr2);
175:                        rawQuery = m24788P.rawQuery("select metadata_fingerprint from raw_events where app_id = ?" + str4 + " order by rowid limit 1;", strArr3);
390:            android.database.Cursor r1 = r1.rawQuery(r4, r2)     // Catch: java.lang.Throwable -> Lbc android.database.sqlite.SQLiteException -> Lbe
743:            android.database.Cursor r0 = r0.rawQuery(r2, r1)     // Catch: java.lang.Throwable -> L20 android.database.sqlite.SQLiteException -> L22
917:                m24788P().execSQL("UPDATE queue SET retry_count = IFNULL(retry_count, 0) + 1 WHERE rowid IN " + str + " AND (retry_count IS NULL OR retry_count < 2147483647)");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5884n9.java
847:                cursor = c5852l.m24788P().rawQuery("select consent_state from consent_settings where app_id=? limit 1;", new String[]{str});

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p173l2/C8508a.java
26:        sQLiteDatabase.execSQL(String.format("CREATE TABLE %s (%s INTEGER, %s INTEGER, %s INTEGER, FOREIGN KEY (%s) REFERENCES %s(%s));", "provider_media_item", "provider_id", "position", "media_item_id", "media_item_id", "media_item", "store_id"));
27:        sQLiteDatabase.execSQL(String.format("CREATE INDEX %s ON %s (%s, %s, %s);", "provider_media_item_provider_id_position", "provider_media_item", "provider_id", "position", "media_item_id"));
32:        sQLiteDatabase.execSQL(String.format("DROP INDEX IF EXISTS %s;", "provider_media_item_provider_id_position"));
33:        sQLiteDatabase.execSQL(String.format("DROP TABLE IF EXISTS %s;", "provider_media_item"));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p173l2/C8510c.java
49:            return this.f32698a.mo10643l().rawQuery(String.format("SELECT %1$s.* FROM %2$s, %1$s WHERE %2$s.%3$s = :providerId AND %1$s.%4$s = %2$s.%5$s ORDER BY %2$s.%6$s ASC", "media_item", "provider_media_item", "provider_id", "store_id", "media_item_id", "position"), new String[]{Integer.toString(interfaceC1935a.mo10570a())});

[!] QuickNote:
    - It is recommended that Prepared Statements are used or methods have been used securely to perform any sensitive tasks related to the databases, if observed.

[*] Reference:
    - OWASP MASVS: MSTG-PLATFORM-2 | CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x11-v6-interaction_with_the_environment

==>> The potential Cross-Site Scripting flaws...


==>> The potential Code Execution flaws...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/engine/executor/C2026b.java
11:        return Runtime.getRuntime().availableProcessors();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/play_billing/C5552b0.java
18:    public static final int f21891a = Runtime.getRuntime().availableProcessors();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/common/C6606k.java
473:        return AbstractC6636c0.b.m28900c(C6598g.m28425l(), Build.MODEL, Runtime.getRuntime().availableProcessors(), C6598g.m28432s(), statFs.getBlockCount() * statFs.getBlockSize(), C6598g.m28437x(), C6598g.m28426m(), Build.MANUFACTURER, Build.PRODUCT);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/common/C6614o.java
184:        int availableProcessors = Runtime.getRuntime().availableProcessors();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/common/C6625u.java
107:        Runtime.getRuntime().addShutdownHook(new Thread(new b(str, executorService, j10, timeUnit), "Crashlytics Shutdown Hook for " + str));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/perf/session/gauges/C6791i.java
34:        this(Runtime.getRuntime(), context);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/perf/session/gauges/C6794l.java
38:        this(Executors.newSingleThreadScheduledExecutor(), Runtime.getRuntime());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/kotlinx/coroutines/internal/C8374z.java
12:    private static final int f32303a = Runtime.getRuntime().availableProcessors();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okio/C8835w.java
30:        int highestOneBit = Integer.highestOneBit((Runtime.getRuntime().availableProcessors() * 2) - 1);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/Pointer.java
222:        long maxMemory = Runtime.getRuntime().maxMemory();
232:        long maxMemory2 = Runtime.getRuntime().maxMemory() * 2;

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p346z1/AbstractC10197a.java
179:            return Runtime.getRuntime().exec("/system/bin/ping -c 1 captive.apple.com").waitFor() == 0;

[!] QuickNote:
    - It is recommended not to execute the commands directly on the Operating System or to never use calls to native commands, if observed.

[*] Reference:
    - OWASP MASVS: MSTG-PLATFORM-2 | CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x11-v6-interaction_with_the_environment

==>> The Fragment Injection instances...


==>> The EnableSafeBrowsing setting...


==>> The instances of URL Loading in WebViews...


==>> The Custom URL Schemes...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/resources/AndroidManifest.xml
22:            <action android:name="android.media.action.IMAGE_CAPTURE"/>
25:            <action android:name="android.intent.action.VIEW"/>
26:            <data android:scheme="https"/>
29:            <action android:name="android.support.customtabs.action.CustomTabsService"/>
35:            <action android:name="com.android.vending.billing.InAppBillingService.BIND"/>
73:            <intent-filter>
74:                <action android:name="android.intent.action.MAIN"/>
81:            <intent-filter>
82:                <action android:name="android.intent.action.SEARCH"/>
94:            <intent-filter>
95:                <action android:name="android.intent.action.VIEW"/>
98:                <data android:scheme="carolinegirvan"/>
130:            <intent-filter>
131:                <action android:name="android.intent.action.VIEW"/>

[!] QuickNote:
    - It is recommended that custom URL schemes should be configured with android:autoVerify=true, if observed.

[*] Reference:
    - OWASP MASVS: MSTG-PLATFORM-3 | CWE-927: Use of Implicit Intent for Sensitive Communication
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x11-v6-interaction_with_the_environment

==>> The Implicit intents used for broadcast...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/mediarouter/app/MediaRouteButton.java
353:        Intent putExtra = new Intent().setAction("com.android.settings.panel.action.MEDIA_OUTPUT").putExtra("com.android.settings.panel.extra.PACKAGE_NAME", context.getPackageName()).putExtra("key_media_session_token", this.f5029p.m6345k());
386:        Intent putExtra = new Intent().setAction("com.android.systemui.action.LAUNCH_MEDIA_OUTPUT_DIALOG").setPackage("com.android.systemui").putExtra("package_name", context.getPackageName()).putExtra("key_media_session_token", this.f5029p.m6345k());
391:                context.sendBroadcast(putExtra);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/android/billingclient/api/ProxyBillingActivity.java
30:        Intent intent = new Intent("com.android.vending.billing.ALTERNATIVE_BILLING");
32:        intent.putExtra("ALTERNATIVE_BILLING_USER_CHOICE_DATA", str);
38:        Intent intent = new Intent("com.android.vending.billing.PURCHASES_UPDATED");
99:            startIntentSenderForResult(pendingIntent.getIntentSender(), i10, new Intent(), 0, 0, 0);
112:                        m10168b.putExtra("IS_FIRST_PARTY_PURCHASE", true);
114:                    m10168b.putExtra("RESPONSE_CODE", 6);
115:                    m10168b.putExtra("DEBUG_MESSAGE", "An internal error occurred.");
116:                    sendBroadcast(m10168b);
129:            m10168b.putExtra("RESPONSE_CODE", 1);
130:            m10168b.putExtra("DEBUG_MESSAGE", "Billing dialog closed.");
131:            sendBroadcast(m10168b);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5978w4.java
495:                if (!TextUtils.isEmpty(m43801L) && (queryIntentActivities = m25247N.f22669a.f22924a.getPackageManager().queryIntentActivities(new Intent("android.intent.action.VIEW", Uri.parse(m43801L)), 0)) != null && !queryIntentActivities.isEmpty()) {
509:                            m25247N2.f22669a.f22924a.sendBroadcast(new Intent("android.google.analytics.action.DEEPLINK_ACTION"));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p007a6/C0057o.java
135:            Intent intent = new Intent(str);
139:            context.sendBroadcast(intent);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p196n2/C8662a.java
72:                    Intent intent = new Intent("android.media.action.OPEN_AUDIO_EFFECT_CONTROL_SESSION");
73:                    intent.putExtra("android.media.extra.AUDIO_SESSION", C8663b.m39743c().m39746d().m39741d());
74:                    intent.putExtra("android.media.extra.PACKAGE_NAME", context.getPackageName());
75:                    context.sendBroadcast(intent);

[!] QuickNote:
    - It is recommended to not send the broadcast using an implicit intent, if observed. Use methods such as sendBroadcast, sendOrderedBroadcast, sendStickyBroadcast, etc. appropriately. Please note that, an attacker can intercept or hijack the sensitive data among components. Always use explicit intents for broadcast components or LocalBroadcastManager and use an appropriate permission.

[*] Reference:
    - OWASP MASVS: MSTG-PLATFORM-4 | CWE-927: Use of Implicit Intent for Sensitive Communication
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x11-v6-interaction_with_the_environment

==>> The Implicit intents used for activity...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/android/content/C1067b.java
125:                this.intent = new Intent();
129:            intent.setAction(action);
136:                this.intent = new Intent();
147:                this.intent = new Intent();
151:            intent.setData(data);
164:                this.intent = new Intent();
303:        Intent intent2 = new Intent(destination.getIntent());
319:                intent2.setData(Uri.parse(stringBuffer.toString()));
324:            intent2.addFlags(((c) navigatorExtras).getFlags());
327:            intent2.addFlags(268435456);
330:            intent2.addFlags(536870912);
334:            intent2.putExtra("android-support-navigation:ActivityNavigator:source", intExtra);
336:        intent2.putExtra("android-support-navigation:ActivityNavigator:current", destination.getId());
342:                intent2.putExtra("android-support-navigation:ActivityNavigator:popEnterAnim", popEnterAnim);
343:                intent2.putExtra("android-support-navigation:ActivityNavigator:popExitAnim", popExitAnim);
353:                this.context.startActivity(intent2);
356:            this.context.startActivity(intent2);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/android/view/ComponentActivity.java
137:                C0207b.this.m1003b(this.f696p, 0, new Intent().setAction("androidx.activity.result.contract.action.INTENT_SENDER_REQUEST").putExtra("androidx.activity.result.contract.extra.SEND_INTENT_EXCEPTION", this.f697q));
523:        if (this.mActivityResultRegistry.m1003b(i10, -1, new Intent().putExtra("androidx.activity.result.contract.extra.PERMISSIONS", strArr).putExtra("androidx.activity.result.contract.extra.PERMISSION_GRANT_RESULTS", iArr))) {
631:    public void startActivityForResult(@SuppressLint({"UnknownNullness"}) Intent intent, int i10) {
632:        super.startActivityForResult(intent, i10);
647:    public void startActivityForResult(@SuppressLint({"UnknownNullness"}) Intent intent, int i10, Bundle bundle) {
648:        super.startActivityForResult(intent, i10, bundle);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/view/menu/C0260i.java
460:                this.f1211n.m1443w().startActivity(this.f1204g);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/widget/SearchView.java
785:        Intent intent = new Intent(str);
786:        intent.addFlags(268435456);
788:            intent.setData(uri);
790:        intent.putExtra("user_query", this.f1445q0);
792:            intent.putExtra("query", str3);
795:            intent.putExtra("intent_extra_data_key", str2);
799:            intent.putExtra("app_data", bundle);
802:            intent.putExtra("action_key", i10);
803:            intent.putExtra("action_msg", str4);
844:        Intent intent2 = new Intent("android.intent.action.SEARCH");
852:        Intent intent3 = new Intent(intent);
858:        intent3.putExtra("android.speech.extra.LANGUAGE_MODEL", string);
859:        intent3.putExtra("android.speech.extra.PROMPT", string2);
860:        intent3.putExtra("android.speech.extra.LANGUAGE", string3);
861:        intent3.putExtra("android.speech.extra.MAX_RESULTS", voiceMaxResults);
862:        intent3.putExtra("calling_package", searchActivity != null ? searchActivity.flattenToShortString() : null);
863:        intent3.putExtra("android.speech.extra.RESULTS_PENDINGINTENT", activity);
864:        intent3.putExtra("android.speech.extra.RESULTS_PENDINGINTENT_BUNDLE", bundle);
870:        Intent intent2 = new Intent(intent);
872:        intent2.putExtra("calling_package", searchActivity == null ? null : searchActivity.flattenToShortString());
932:            getContext().startActivity(intent);
1085:        getContext().startActivity(m1589A("android.intent.action.SEARCH", null, null, str2, i10, str));
1202:                getContext().startActivity(m1592D(this.f1428W, searchableInfo));
1204:                getContext().startActivity(m1591C(this.f1429a0, searchableInfo));
1592:        Intent intent = new Intent("android.speech.action.WEB_SEARCH");
1594:        intent.addFlags(268435456);
1595:        intent.putExtra("android.speech.extra.LANGUAGE_MODEL", "web_search");
1596:        Intent intent2 = new Intent("android.speech.action.RECOGNIZE_SPEECH");
1598:        intent2.addFlags(268435456);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/app/C0475b.java
40:            activity.startActivityForResult(intent, i10, bundle);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/app/C0516v0.java
131:        intentArr[0] = new Intent(intentArr[0]).addFlags(268484608);
146:        intentArr[0] = new Intent(intentArr[0]).addFlags(268484608);
150:        Intent intent = new Intent(intentArr[intentArr.length - 1]);
151:        intent.addFlags(268435456);
152:        this.f3666q.startActivity(intent);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/content/C0524a.java
42:            context.startActivity(intent, bundle);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/fragment/app/ActivityC0892j.java
458:            fragment.startActivityForResult(intent, i10, bundle);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/fragment/app/Fragment.java
1839:    public void startActivity(@SuppressLint({"UnknownNullness"}) Intent intent) {
1840:        startActivity(intent, null);
1844:    public void startActivityForResult(@SuppressLint({"UnknownNullness"}) Intent intent, int i10) {
1845:        startActivityForResult(intent, i10, null);
2004:    public void startActivity(@SuppressLint({"UnknownNullness"}) Intent intent, Bundle bundle) {
2014:    public void startActivityForResult(@SuppressLint({"UnknownNullness"}) Intent intent, int i10, Bundle bundle) {

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/mediarouter/app/MediaRouteButton.java
353:        Intent putExtra = new Intent().setAction("com.android.settings.panel.action.MEDIA_OUTPUT").putExtra("com.android.settings.panel.extra.PACKAGE_NAME", context.getPackageName()).putExtra("key_media_session_token", this.f5029p.m6345k());
358:                context.startActivity(putExtra);
386:        Intent putExtra = new Intent().setAction("com.android.systemui.action.LAUNCH_MEDIA_OUTPUT_DIALOG").setPackage("com.android.systemui").putExtra("package_name", context.getPackageName()).putExtra("key_media_session_token", this.f5029p.m6345k());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/preference/Preference.java
219:                m7027d().startActivity(this.f5989x);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobile/client/activities/HostedUIRedirectActivity.java
14:        startActivity(CustomTabsManagerActivity.createResponseHandlingIntent(this, getIntent().getData()));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java
123:        List<ResolveInfo> queryIntentServices = this.context.getPackageManager().queryIntentServices(new Intent().setAction("android.support.customtabs.action.CustomTabsService"), 0);
143:        if (new Intent("android.intent.action.VIEW", Uri.parse("https://docs.amplify.aws/")).resolveActivity(this.context.getPackageManager()) == null) {
239:            this.mCustomTabsIntent.f1992a.setData(uri);
241:                activity.startActivityForResult(CustomTabsManagerActivity.createStartIntent(this.context, this.mCustomTabsIntent.f1992a), 49281);
245:            createStartIntent.addFlags(1342177280);
246:            this.context.startActivity(createStartIntent);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoauth/activities/CustomTabsManagerActivity.java
19:        return new Intent(context, (Class<?>) CustomTabsManagerActivity.class);
24:        createBaseIntent.setData(uri);
25:        createBaseIntent.addFlags(603979776);
31:        createBaseIntent.putExtra(CUSTOM_TABS_INTENT_KEY, intent);
75:            startActivity(this.customTabsIntent);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoauth/activities/CustomTabsRedirectActivity.java
11:        startActivity(CustomTabsManagerActivity.createResponseHandlingIntent(this, getIntent().getData()));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amplifyframework/auth/cognito/activities/HostedUIRedirectActivity.java
13:        startActivity(CustomTabsManagerActivity.createResponseHandlingIntent(this, getIntent().getData()));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amplifyframework/devmenu/DevMenuFileIssueFragment.java
29:        startActivity(new Intent("android.intent.action.VIEW", Uri.parse(NEW_ISSUE_URL).buildUpon().appendQueryParameter("title", HttpUrl.FRAGMENT_ENCODE_SET).appendQueryParameter("body", issueBody).build()));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amplifyframework/devmenu/DeveloperMenu.java
111:        Intent intent = new Intent(this.context, (Class<?>) DeveloperMenuActivity.class);
112:        intent.setAction("android.intent.action.MAIN");
113:        intent.setFlags(268435456);
114:        this.context.startActivity(intent);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/sdk/authentication/C1950a.java
37:        Intent intent = new Intent("android.intent.action.VIEW", Uri.parse(str2));
39:        activity.startActivityForResult(intent, 2024);
44:        Intent intent = new Intent(activity, (Class<?>) SDKUriHandlerActivity.class);
45:        intent.putExtra("developer_token", str);
46:        intent.putExtra("contextual_upsell_id", str2);
47:        intent.putExtra("custom_params", hashMap);
48:        activity.startActivityForResult(intent, 2021);
55:            Intent intent = new Intent("android.intent.action.VIEW");
56:            intent.setData(Uri.parse(str2));
60:                activity.startActivityForResult(intent, 2022);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/carolinegirvan/mobile/features/discovery/VideoPlayerFragment.java
276:                window.addFlags(128);
2532:                startActivity(launchIntentForPackage);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/carolinegirvan/mobile/util/C3368f0.java
120:                context.startActivity(new Intent("android.intent.action.VIEW", Uri.parse(str)));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/auth/api/signin/internal/SignInHubActivity.java
47:        Intent intent = new Intent();
48:        intent.putExtra("googleSignInStatus", status);
56:        Intent intent = new Intent(str);
62:        intent.putExtra("config", this.f19514q);
64:            startActivityForResult(intent, 40962);
95:                intent.putExtra("googleSignInAccount", m20604f0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/api/internal/InterfaceC4461i.java
18:    void startActivityForResult(Intent intent, int i10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/api/internal/RunnableC4508x1.java
30:                abstractDialogInterfaceOnCancelListenerC4511y1.f20279p.startActivityForResult(GoogleApiActivity.m21283a(abstractDialogInterfaceOnCancelListenerC4511y1.m21362b(), (PendingIntent) C4585p.m21784j(m21560b.m21589o0()), this.f20474p.m21559a(), false), 1);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/internal/C4547c0.java
30:            this.f20564q.startActivityForResult(intent, this.f20565r);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/internal/C4550d0.java
26:            this.f20585q.startActivityForResult(intent, 2);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/play/core/missingsplits/PlayCoreMissingSplitsActivity.java
27:            startActivity(new Intent("android.intent.action.VIEW").setData(Uri.parse(sb2.toString())).setPackage("com.android.vending"));

[!] QuickNote:
    - It is recommended to not start the activity using an implicit intent, if observed. Please note that, an attacker can hijack the activity and sometimes it may lead to sensitive information disclosure. Always use explicit intents to start activities using the setComponent, setPackage, setClass or setClassName methods of the Intent class.

[*] Reference:
    - OWASP MASVS: MSTG-PLATFORM-4 | CWE-927: Use of Implicit Intent for Sensitive Communication
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x11-v6-interaction_with_the_environment

==>> The instances of JavaScript Execution in WebViews...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/carolinegirvan/mobile/util/C3363d.java
15:import android.webkit.WebView;
63:    @Metadata(m33421d1 = {"\u0000®\u0001\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000e\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u000b\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010 \n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\b\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0005\b\u0086\u0003\u0018\u00002\u00020\u0001B\t\b\u0002¢\u0006\u0004\bL\u0010MJ\u0018\u0010\u0007\u001a\u00020\u00062\u0006\u0010\u0003\u001a\u00020\u00022\u0006\u0010\u0005\u001a\u00020\u0004H\u0002J\u001c\u0010\f\u001a\u00020\u000b2\b\u0010\t\u001a\u0004\u0018\u00010\b2\b\u0010\n\u001a\u0004\u0018\u00010\u0004H\u0007J(\u0010\u000f\u001a\u00020\u000b2\b\u0010\t\u001a\u0004\u0018\u00010\b2\b\u0010\n\u001a\u0004\u0018\u00010\u00042\n\b\u0002\u0010\u000e\u001a\u0004\u0018\u00010\rH\u0007J\u0018\u0010\u0013\u001a\u00020\u000b2\u0006\u0010\t\u001a\u00020\u00102\u0006\u0010\u0012\u001a\u00020\u0011H\u0007J \u0010\u0018\u001a\u00020\u000b2\u0006\u0010\u0015\u001a\u00020\u00142\u000e\u0010\u0017\u001a\n\u0012\u0004\u0012\u00020\u0001\u0018\u00010\u0016H\u0007J(\u0010\u001a\u001a\u00020\u000b2\u0006\u0010\u0015\u001a\u00020\u00142\u000e\u0010\u0017\u001a\n\u0012\u0004\u0012\u00020\u0001\u0018\u00010\u00162\u0006\u0010\u0019\u001a\u00020\u0011H\u0007J\u0018\u0010\u001e\u001a\u00020\u000b2\u0006\u0010\u001c\u001a\u00020\u001b2\u0006\u0010\u001d\u001a\u00020\u0004H\u0007J\u0018\u0010 \u001a\u00020\u000b2\u0006\u0010\u001c\u001a\u00020\u001b2\u0006\u0010\u001f\u001a\u00020\u0011H\u0007J \u0010#\u001a\u00020\u000b2\u0006\u0010\t\u001a\u00020\u00102\u000e\u0010\"\u001a\n\u0012\u0004\u0012\u00020!\u0018\u00010\u0016H\u0007J\u001a\u0010(\u001a\u00020\u000b2\u0006\u0010%\u001a\u00020$2\b\u0010'\u001a\u0004\u0018\u00010&H\u0007J\u0018\u0010*\u001a\u00020\u000b2\u0006\u0010\t\u001a\u00020\u00102\u0006\u0010)\u001a\u00020\u0011H\u0007J8\u00102\u001a\u00020\u000b2\u0006\u0010,\u001a\u00020+2\b\u0010-\u001a\u0004\u0018\u00010\u00042\b\u0010.\u001a\u0004\u0018\u00010\u00042\b\u00100\u001a\u0004\u0018\u00010/2\b\u00101\u001a\u0004\u0018\u00010\u0004H\u0007J \u00106\u001a\u00020\u000b2\u0006\u0010,\u001a\u00020+2\u0006\u00104\u001a\u0002032\u0006\u00105\u001a\u00020\u0004H\u0007J \u0010:\u001a\u00020\u000b2\u0006\u0010,\u001a\u00020+2\u0006\u00108\u001a\u0002072\u0006\u00109\u001a\u000203H\u0007J$\u0010@\u001a\u00020\u000b2\u0006\u0010<\u001a\u00020;2\b\u0010>\u001a\u0004\u0018\u00010=2\b\u0010?\u001a\u0004\u0018\u00010=H\u0007J\u0018\u0010D\u001a\u00020\u000b2\u0006\u0010B\u001a\u00020A2\u0006\u0010C\u001a\u00020\u0011H\u0007J\u001a\u0010H\u001a\u00020\u000b2\u0006\u0010F\u001a\u00020E2\b\u0010G\u001a\u0004\u0018\u00010\u0004H\u0007J\u001a\u0010K\u001a\u00020\u000b2\u0006\u0010B\u001a\u00020A2\b\u0010J\u001a\u0004\u0018\u00010IH\u0007¨\u0006N"}, m33422d2 = {"Lcom/carolinegirvan/mobile/util/d$a;", HttpUrl.FRAGMENT_ENCODE_SET, "Landroid/content/Context;", "context", HttpUrl.FRAGMENT_ENCODE_SET, "name", "Lcom/google/android/material/chip/Chip;", "c", "Landroid/widget/ImageView;", "view", "imageUrl", "Lp9/c0;", "f", "Landroid/graphics/drawable/Drawable;", "placeHolder", "e", "Landroid/view/View;", HttpUrl.FRAGMENT_ENCODE_SET, "shouldBeVisible", "o", "Landroidx/recyclerview/widget/RecyclerView;", "recyclerView", HttpUrl.FRAGMENT_ENCODE_SET, "list", "q", "resetList", "r", "Lcom/carolinegirvan/mobile/features/account/views/TextSwitchView;", "textSwitchView", "text", "m", "isChecked", "d", "Lcom/carolinegirvan/mobile/data/model/discovery/DiscoveryTag;", "items", "h", "Lcom/google/android/material/chip/ChipGroup;", "chipGroup", "Lcom/carolinegirvan/mobile/data/model/discovery/DiscoveryItemDetail;", "itemDetails", "l", "isSelected", "j", "Lcom/google/android/material/textview/MaterialTextView;", "textView", "commentText", "userName", "Lcom/carolinegirvan/mobile/data/model/discovery/TaggedUser;", "taggedUser", "mentionColor", "g", HttpUrl.FRAGMENT_ENCODE_SET, "appendNumber", "formatText", "a", "Lcom/carolinegirvan/mobile/data/model/discovery/MutableComment;", "comment", "count", "n", "Lcom/google/android/material/button/MaterialButton;", "button", "Lcom/carolinegirvan/mobile/data/model/discovery/ButtonColour;", "buttonColors", "buttonTextColors", "b", "Landroidx/appcompat/widget/AppCompatImageView;", "imageView", "isGrayscale", "i", "Landroid/webkit/WebView;", "webView", "content", "p", "Lcom/carolinegirvan/mobile/data/model/notifications/NotificationsData;", "notificationData", "k", "<init>", "()V", "CarolineGirvan_2024-04-12_16-11_a8d40f3b_prodRelease"}, m33423k = 1, m33424mv = {1, 7, 1})
465:        public final void m15414p(WebView webView, String str) {
466:            C0128r.m611f(webView, "webView");
467:            webView.getSettings().setJavaScriptEnabled(true);
468:            webView.setWebChromeClient(new WebChromeClient());
469:            Context context = webView.getContext();
476:            webView.loadDataWithBaseURL("file:///android_asset/", sb2.toString(), "text/html", "UTF-8", null);
572:    public static final void m15396o(WebView webView, String str) {
573:        INSTANCE.m15414p(webView, str);

[!] QuickNote:
    - It is recommended to implement JavaScript execution in WebViews securely, if observed. Please note that, depending on the permissions of the application, it may allow an attacker to interact with the different functionalities of the device.

[*] Reference:
    - OWASP MASVS: MSTG-PLATFORM-5 | CWE-749: Exposed Dangerous Method or Function
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x11-v6-interaction_with_the_environment

==>> The instances of Remote/Local URL load in WebViews...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/carolinegirvan/mobile/util/C3363d.java
476:            webView.loadDataWithBaseURL("file:///android_asset/", sb2.toString(), "text/html", "UTF-8", null);

[!] QuickNote:
    - It is recommended to implement Remote/Local URL load in WebViews securely, if observed.

[*] Reference:
    - OWASP MASVS: MSTG-PLATFORM-6 | CWE-940: Improper Verification of Source of a Communication Channel
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x11-v6-interaction_with_the_environment

==>> The Hard-coded links...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/android/content/C1089o.java
274:                sb2.append("http[s]?://");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/android/content/C1092r.java
108:            return "android-app://androidx.navigation/" + route;

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/widget/ViewOnClickListenerC0371y0.java
239:            String str2 = "android.resource://" + this.f1909C.getPackageName() + "/" + parseInt;

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/browser/customtabs/C0380c.java
239:        Intent intent = new Intent("android.intent.action.VIEW", Uri.parse("http://"));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/content/res/C0546l.java
122:        return xmlPullParser.getAttributeValue("http://schemas.android.com/apk/res/android", str) != null;

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/databinding/ViewDataBinding.java
506:        throw new IllegalArgumentException("The provided bindingComponent parameter must be an instance of DataBindingComponent. See  https://issuetracker.google.com/issues/116541301 for details of why this parameter is not defined as DataBindingComponent");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/AmazonWebServiceClient.java
112:        if (!str.contains("://")) {
113:            str = this.clientConfiguration.getProtocol().toString() + "://" + str;
267:            int indexOf = format.indexOf("://");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java
143:        if (new Intent("android.intent.action.VIEW", Uri.parse("https://docs.amplify.aws/")).resolveActivity(this.context.getPackageManager()) == null) {

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/regions/RegionMetadata.java
26:        return URI.create("http://" + str).getHost();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/regions/RegionUtils.java
73:            return new URI("http://" + str);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/util/RuntimeHttpUtils.java
50:            if (!str.contains("://")) {
51:                str = protocol.toString() + "://" + str;

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amplifyframework/AmplifyException.java
8:    public static final String REPORT_BUG_TO_AWS_SUGGESTION = "There is a possibility that there is a bug if this error persists. Please take a look at \nhttps://github.com/aws-amplify/amplify-android/issues to see if there are any existing issues that \nmatch your scenario, and file an issue with the details of the bug if there isn't.";

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amplifyframework/devmenu/DevMenuFileIssueFragment.java
20:    private static final String NEW_ISSUE_URL = "https://github.com/aws-amplify/amplify-android/issues/new";

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/music/playback/p057c/p058c/AbstractHandlerC1893d.java
96:        if (!this.f10069t.mo44124s() && !this.f10069t.mo44126v("https://www.apple.com")) {

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/music/playback/queue/CatalogPlaybackQueueItemProvider.java
33:    private static final Uri f10295J = Uri.parse("https://api.music.apple.com/v1/catalog/");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/music/playback/reporting/C1949e.java
221:            httpURLConnection = (HttpURLConnection) new URL("https://universal-activity-service.itunes.apple.com/play").openConnection();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/sdk/authentication/C1950a.java
36:        String str2 = "market://details?id=com.apple.android.music&" + ("referrer=" + Uri.encode(str));
53:        String str2 = "musicsdk://applemusic/authenticate-v1?" + str;

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/model/C2072s.java
98:            return Uri.parse("android.resource://" + this.f11053b.getResourcePackageName(num.intValue()) + '/' + this.f11053b.getResourceTypeName(num.intValue()) + '/' + this.f11053b.getResourceEntryName(num.intValue()));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/carolinegirvan/mobile/util/C3363d.java
476:            webView.loadDataWithBaseURL("file:///android_asset/", sb2.toString(), "text/html", "UTF-8", null);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/C4180v0.java
922:            String m20042C = C4167p0.m20042C("Player is accessed on the wrong thread.\nCurrent thread: '%s'\nExpected thread: '%s'\nSee https://exoplayer.dev/issues/player-accessed-on-wrong-thread", Thread.currentThread().getName(), mo17632U().getThread().getName());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/drm/C3634f0.java
132:        String str = m19869B.substring(0, indexOf) + "<LA_URL>https://x</LA_URL>" + m19869B.substring(indexOf);
391:        if ("https://x".equals(defaultUrl)) {

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/drm/C3636g0.java
98:            hashMap.put("SOAPAction", "http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/metadata/emsg/C3832a.java
73:            case "https://aomedia.org/emsg/ID3":
74:            case "https://developer.apple.com/streaming/emsg-id3":

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/source/dash/C3937d.java
564:        return m18456x(list, "http://dashif.org/guidelines/trickmode");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/source/rtsp/C4009b0.java
157:        Uri parse2 = Uri.parse("rtsp://" + str);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/text/ttml/C4088c.java
148:        String attributeValue = xmlPullParser.getAttributeValue("http://www.w3.org/ns/ttml#parameter", "cellResolution");
208:        String attributeValue = xmlPullParser.getAttributeValue("http://www.w3.org/ns/ttml#parameter", "frameRate");
210:        String attributeValue2 = xmlPullParser.getAttributeValue("http://www.w3.org/ns/ttml#parameter", "frameRateMultiplier");
221:        String attributeValue3 = xmlPullParser.getAttributeValue("http://www.w3.org/ns/ttml#parameter", "subFrameRate");
226:        String attributeValue4 = xmlPullParser.getAttributeValue("http://www.w3.org/ns/ttml#parameter", "tickRate");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/upstream/RawResourceDataSource.java
55:        return Uri.parse("rawresource:///" + i10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/auth/api/signin/GoogleSignInOptions.java
93:        Scope scope = new Scope("https://www.googleapis.com/auth/games_lite");
95:        f19480G = new Scope("https://www.googleapis.com/auth/games");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/internal/C4607u1.java
18:        Uri parse = Uri.parse("https://plus.google.com/");
33:        Uri.Builder appendQueryParameter = Uri.parse("market://details").buildUpon().appendQueryParameter("id", "com.google.android.gms");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/fitness/data/DataType.java
214:        DataType dataType = new DataType("com.google.step_count.delta", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", c8597c);
216:        f20832u = new DataType("com.google.step_count.cumulative", 1, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", c8597c);
218:        f20834v = new DataType("com.google.step_count.cadence", 1, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", c8597c2);
219:        f20819i0 = new DataType("com.google.internal.goal", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", C8597c.f32996l0);
221:        f20836w = new DataType("com.google.activity.segment", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", c8597c3);
222:        f20838x = new DataType("com.google.sleep.segment", 2, "https://www.googleapis.com/auth/fitness.sleep.read", "https://www.googleapis.com/auth/fitness.sleep.write", C8597c.f33005t);
224:        DataType dataType2 = new DataType("com.google.calories.expended", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", c8597c4);
226:        f20842z = new DataType("com.google.calories.bmr", 1, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", c8597c4);
227:        f20784A = new DataType("com.google.power.sample", 1, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", C8597c.f32970L);
228:        f20820j0 = new DataType("com.google.sensor.events", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", C8597c.f32998n0, C8597c.f32999o0, C8597c.f33000p0);
229:        f20786B = new DataType("com.google.heart_rate.bpm", 1, "https://www.googleapis.com/auth/fitness.heart_rate.read", "https://www.googleapis.com/auth/fitness.heart_rate.write", C8597c.f33015y);
230:        f20821k0 = new DataType("com.google.respiratory_rate", 1, "https://www.googleapis.com/auth/fitness.respiratory_rate.read", "https://www.googleapis.com/auth/fitness.respiratory_rate.write", C8597c.f32995k0);
235:        f20787C = new DataType("com.google.location.sample", 1, "https://www.googleapis.com/auth/fitness.location.read", "https://www.googleapis.com/auth/fitness.location.write", c8597c5, c8597c6, c8597c7, c8597c8);
236:        f20788D = new DataType("com.google.location.track", 2, "https://www.googleapis.com/auth/fitness.location.read", "https://www.googleapis.com/auth/fitness.location.write", c8597c5, c8597c6, c8597c7, c8597c8);
237:        DataType dataType3 = new DataType("com.google.distance.delta", 2, "https://www.googleapis.com/auth/fitness.location.read", "https://www.googleapis.com/auth/fitness.location.write", C8597c.f32958D);
239:        f20790F = new DataType("com.google.speed", 1, "https://www.googleapis.com/auth/fitness.location.read", "https://www.googleapis.com/auth/fitness.location.write", C8597c.f32966H);
241:        f20791G = new DataType("com.google.cycling.wheel_revolution.cumulative", 1, "https://www.googleapis.com/auth/fitness.location.read", "https://www.googleapis.com/auth/fitness.location.write", c8597c9);
242:        f20792H = new DataType("com.google.cycling.wheel_revolution.rpm", 1, "https://www.googleapis.com/auth/fitness.location.read", "https://www.googleapis.com/auth/fitness.location.write", c8597c2);
243:        f20793I = new DataType("com.google.cycling.pedaling.cumulative", 1, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", c8597c9);
244:        f20794J = new DataType("com.google.cycling.pedaling.cadence", 1, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", c8597c2);
245:        f20795K = new DataType("com.google.height", 1, "https://www.googleapis.com/auth/fitness.body.read", "https://www.googleapis.com/auth/fitness.body.write", C8597c.f32960E);
246:        f20796L = new DataType("com.google.weight", 1, "https://www.googleapis.com/auth/fitness.body.read", "https://www.googleapis.com/auth/fitness.body.write", C8597c.f32962F);
247:        f20797M = new DataType("com.google.body.fat.percentage", 1, "https://www.googleapis.com/auth/fitness.body.read", "https://www.googleapis.com/auth/fitness.body.write", C8597c.f32964G);
250:        f20798N = new DataType("com.google.nutrition", 1, "https://www.googleapis.com/auth/fitness.nutrition.read", "https://www.googleapis.com/auth/fitness.nutrition.write", c8597c10, c8597c11, C8597c.f32973O);
251:        DataType dataType4 = new DataType("com.google.hydration", 1, "https://www.googleapis.com/auth/fitness.nutrition.read", "https://www.googleapis.com/auth/fitness.nutrition.write", C8597c.f32971M);
253:        f20800P = new DataType("com.google.activity.exercise", 1, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", C8597c.f32975Q, C8597c.f32976R, C8597c.f32992h0, C8597c.f32978T, C8597c.f32977S);
255:        DataType dataType5 = new DataType("com.google.active_minutes", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", c8597c12);
258:        f20822l0 = new DataType("com.google.device_on_body", 1, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", C8597c.f33002r0);
259:        f20803S = new DataType("com.google.activity.summary", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", c8597c3, c8597c12, C8597c.f32979U);
263:        f20804T = new DataType("com.google.calories.bmr.summary", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", c8597c13, c8597c14, c8597c15);
268:        f20808X = new DataType("com.google.heart_minutes", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", c8597c16);
269:        f20809Y = new DataType("com.google.heart_minutes.summary", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", c8597c16, c8597c12);
270:        f20810Z = new DataType("com.google.heart_rate.summary", 2, "https://www.googleapis.com/auth/fitness.heart_rate.read", "https://www.googleapis.com/auth/fitness.heart_rate.write", c8597c13, c8597c14, c8597c15);
271:        f20811a0 = new DataType("com.google.location.bounding_box", 2, "https://www.googleapis.com/auth/fitness.location.read", "https://www.googleapis.com/auth/fitness.location.write", C8597c.f32983Y, C8597c.f32984Z, C8597c.f32985a0, C8597c.f32986b0);
272:        f20812b0 = new DataType("com.google.power.summary", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", c8597c13, c8597c14, c8597c15);
273:        f20813c0 = new DataType("com.google.speed.summary", 2, "https://www.googleapis.com/auth/fitness.location.read", "https://www.googleapis.com/auth/fitness.location.write", c8597c13, c8597c14, c8597c15);
274:        f20814d0 = new DataType("com.google.body.fat.percentage.summary", 2, "https://www.googleapis.com/auth/fitness.body.read", "https://www.googleapis.com/auth/fitness.body.write", c8597c13, c8597c14, c8597c15);
275:        f20815e0 = new DataType("com.google.weight.summary", 2, "https://www.googleapis.com/auth/fitness.body.read", "https://www.googleapis.com/auth/fitness.body.write", c8597c13, c8597c14, c8597c15);
276:        f20816f0 = new DataType("com.google.height.summary", 2, "https://www.googleapis.com/auth/fitness.body.read", "https://www.googleapis.com/auth/fitness.body.write", c8597c13, c8597c14, c8597c15);
277:        f20817g0 = new DataType("com.google.nutrition.summary", 2, "https://www.googleapis.com/auth/fitness.nutrition.read", "https://www.googleapis.com/auth/fitness.nutrition.write", c8597c10, c8597c11);
279:        f20823m0 = new DataType("com.google.activity.samples", 1, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", C8597c.f33001q0);
280:        f20824n0 = new DataType("com.google.internal.sleep_attributes", 2, "https://www.googleapis.com/auth/fitness.sleep.read", "https://www.googleapis.com/auth/fitness.sleep.write", C8597c.f33004s0);
281:        f20825o0 = new DataType("com.google.internal.sleep_schedule", 1, "https://www.googleapis.com/auth/fitness.sleep.read", "https://www.googleapis.com/auth/fitness.sleep.write", C8597c.f33006t0);
282:        f20826p0 = new DataType("com.google.internal.paced_walking_attributes", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", C8597c.f33008u0);
283:        f20827q0 = new DataType("com.google.time_zone_change", 1, "https://www.googleapis.com/auth/fitness.location.read", "https://www.googleapis.com/auth/fitness.location.write", C8597c.f33010v0);
284:        f20828r0 = new DataType("com.google.internal.met", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", C8597c.f33012w0);
285:        f20829s0 = new DataType("com.google.internal.internal_device_temperature", 2, "https://www.googleapis.com/auth/fitness.body_temperature.read", "https://www.googleapis.com/auth/fitness.body_temperature.write", C8597c.f33014x0);
286:        f20831t0 = new DataType("com.google.internal.skin_temperature", 2, "https://www.googleapis.com/auth/fitness.body_temperature.read", "https://www.googleapis.com/auth/fitness.body_temperature.write", C8597c.f33016y0);
288:        f20833u0 = new DataType("com.google.internal.custom_heart_rate_zone", 1, "https://www.googleapis.com/auth/fitness.heart_rate.read", "https://www.googleapis.com/auth/fitness.heart_rate.write", C8597c.f33018z0, c8597c17, c8597c17);
289:        f20835v0 = new DataType("com.google.internal.active_minutes_combined", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", C8597c.f32953A0, C8597c.f32955B0, C8597c.f32957C0);
290:        f20837w0 = new DataType("com.google.internal.sedentary_time", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", C8597c.f32959D0);
291:        f20839x0 = new DataType("com.google.internal.custom_max_heart_rate", 1, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", C8597c.f32991g0);
292:        f20841y0 = new DataType("com.google.internal.momentary_stress_algorithm", 1, "https://www.googleapis.com/auth/fitness.heart_rate.read", "https://www.googleapis.com/auth/fitness.heart_rate.write", C8597c.f32961E0);
293:        f20843z0 = new DataType("com.google.internal.magnetic_field_presence", 2, "https://www.googleapis.com/auth/fitness.activity.read", "https://www.googleapis.com/auth/fitness.activity.write", C8597c.f32963F0);
294:        f20785A0 = new DataType("com.google.internal.momentary_stress_algorithm_windows", 2, "https://www.googleapis.com/auth/fitness.heart_rate.read", "https://www.googleapis.com/auth/fitness.heart_rate.write", C8597c.f32965G0);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5263i6.java
22:            Uri parse = Uri.parse("content://com.google.android.gms.phenotype/".concat(String.valueOf(Uri.encode("com.google.android.gms.measurement"))));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5301kc.java
165:        f21539L = m23465a.m23469e("measurement.upload.url", "https://app-measurement.com/a");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5406r5.java
24:    public static final Uri f21706a = Uri.parse("content://com.google.android.gsf.gservices");
27:    public static final Uri f21707b = Uri.parse("content://com.google.android.gsf.gservices/prefix");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5451u2.java
98:                Log.v(this.f21763a, "Deferring to Google Analytics for Firebase for event data collection. https://goo.gl/J1sWQy");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5823i3.java
406:        f22431r = m24751a("measurement.upload.url", "https://app-measurement.com/a", "https://app-measurement.com/a", new InterfaceC5788f3() { // from class: com.google.android.gms.measurement.internal.y2

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5958u6.java
38:                        String str = true != ("android-app://com.google.android.googlequicksearchbox/https/www.google.com".equals(stringExtra) || "https://www.google.com".equals(stringExtra) || "android-app://com.google.appcrawler".equals(stringExtra)) ? "auto" : "gs";

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5961u9.java
497:                this.f22669a.mo24870b().m25020s().m24966b("Invalid google_app_id. Firebase Analytics disabled. See https://goo.gl/NAOOOI. provided id", C5933s3.m25015z(str));
503:                this.f22669a.mo24870b().m25020s().m24965a("Missing google_app_id. Firebase Analytics disabled. See https://goo.gl/NAOOOI");
873:            String format = String.format("https://www.googleadservices.com/pagead/conversion/app/deeplink?id_type=adid&sdk_version=%s&rdid=%s&bundleid=%s&retry=%s", String.format("v%s.%s", 68000L, Integer.valueOf(m25164o0())), str2, str, Long.valueOf(j11));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/material/chip/C6132a.java
658:        if (attributeSet != null && attributeSet.getAttributeValue("http://schemas.android.com/apk/res-auto", "chipIconEnabled") != null && attributeSet.getAttributeValue("http://schemas.android.com/apk/res-auto", "chipIconVisible") == null) {
668:        if (attributeSet != null && attributeSet.getAttributeValue("http://schemas.android.com/apk/res-auto", "closeIconEnabled") != null && attributeSet.getAttributeValue("http://schemas.android.com/apk/res-auto", "closeIconVisible") == null) {
676:        if (attributeSet != null && attributeSet.getAttributeValue("http://schemas.android.com/apk/res-auto", "checkedIconEnabled") != null && attributeSet.getAttributeValue("http://schemas.android.com/apk/res-auto", "checkedIconVisible") == null) {

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/material/chip/Chip.java
306:        if (attributeSet.getAttributeValue("http://schemas.android.com/apk/res/android", "background") != null) {
309:        if (attributeSet.getAttributeValue("http://schemas.android.com/apk/res/android", "drawableLeft") != null) {
312:        if (attributeSet.getAttributeValue("http://schemas.android.com/apk/res/android", "drawableStart") != null) {
315:        if (attributeSet.getAttributeValue("http://schemas.android.com/apk/res/android", "drawableEnd") != null) {
318:        if (attributeSet.getAttributeValue("http://schemas.android.com/apk/res/android", "drawableRight") != null) {
321:        if (!attributeSet.getAttributeBooleanValue("http://schemas.android.com/apk/res/android", "singleLine", true) || attributeSet.getAttributeIntValue("http://schemas.android.com/apk/res/android", "lines", 1) != 1 || attributeSet.getAttributeIntValue("http://schemas.android.com/apk/res/android", "minLines", 1) != 1 || attributeSet.getAttributeIntValue("http://schemas.android.com/apk/res/android", "maxLines", 1) != 1) {
324:        if (attributeSet.getAttributeIntValue("http://schemas.android.com/apk/res/android", "gravity", 8388627) != 8388627) {

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/play/core/missingsplits/PlayCoreMissingSplitsActivity.java
23:        sb2.append("market://details?id=");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/settings/C6665f.java
97:        return new C6665f(context, new C6669j(str, c6627w.m28615h(), c6627w.m28616i(), c6627w.m28617j(), c6627w, C6598g.m28421h(C6598g.m28427n(context), str, str3, str2), str3, str2, EnumC6624t.determineFrom(m28614g).getId()), c6615o0, new C6666g(c6615o0), new C6660a(c8623g), new C6662c(String.format(Locale.US, "https://firebase-settings.crashlytics.com/spi/v2/platforms/android/gmp/%s/settings", str), c8539b), c6622s);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/installations/C6706f.java
353:        C4585p.m21781g(m29089l(), "Please set your Application ID. A valid Firebase App ID is required to communicate with Firebase server APIs: It identifies your application with Firebase.Please refer to https://firebase.google.com/support/privacy/init-options.");
354:        C4585p.m21781g(m29090r(), "Please set your Project ID. A valid Firebase Project ID is required to communicate with Firebase server APIs: It identifies your application with Firebase.Please refer to https://firebase.google.com/support/privacy/init-options.");
355:        C4585p.m21781g(m29088k(), "Please set a valid API key. A Firebase API key is required to communicate with Firebase server APIs: It authenticates your project with Google.Please refer to https://firebase.google.com/support/privacy/init-options.");
356:        C4585p.m21776b(C6718n.m29141h(m29089l()), "Please set your Application ID. A valid Firebase App ID is required to communicate with Firebase server APIs: It identifies your application with Firebase.Please refer to https://firebase.google.com/support/privacy/init-options.");
357:        C4585p.m21776b(C6718n.m29140g(m29088k()), "Please set a valid API key. A Firebase API key is required to communicate with Firebase server APIs: It authenticates your project with Google.Please refer to https://firebase.google.com/support/privacy/init-options.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/installations/remote/C6721c.java
122:            return new URL(String.format("https://%s/%s/%s", "firebaseinstallations.googleapis.com", "v1", str));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/remoteconfig/internal/ConfigFetchHttpClient.java
185:        return String.format("https://firebaseremoteconfig.googleapis.com/v1/projects/%s/namespaces/%s:fetch", str, str2);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/io/jsonwebtoken/SignatureAlgorithm.java
91:            throw new WeakKeyException("The " + keyType(z10) + " key's size is " + length + " bits which is not secure enough for the " + name() + " algorithm.  The JWT JWA Specification (RFC 7518, Section 3.2) states that keys used with " + name() + " MUST have a size >= " + this.minKeyLength + " bits (the key size must be greater than or equal to the hash output size).  Consider using the " + Keys.class.getName() + " class's 'secretKeyFor(SignatureAlgorithm." + name() + ")' method to create a key guaranteed to be secure enough for " + name() + ".  See https://tools.ietf.org/html/rfc7518#section-3.2 for more information.");
104:            throw new WeakKeyException("The " + keyType(z10) + " key's size (ECParameterSpec order) is " + bitLength + " bits which is not secure enough for the " + name() + " algorithm.  The JWT JWA Specification (RFC 7518, Section 3.4) states that keys used with " + name() + " MUST have a size >= " + this.minKeyLength + " bits.  Consider using the " + Keys.class.getName() + " class's 'keyPairFor(SignatureAlgorithm." + name() + ")' method to create a key pair guaranteed to be secure enough for " + name() + ".  See https://tools.ietf.org/html/rfc7518#section-3.4 for more information.");
112:            throw new WeakKeyException("The " + keyType(z10) + " key's size is " + bitLength2 + " bits which is not secure enough for the " + name() + " algorithm.  The JWT JWA Specification (RFC 7518, Section " + str + ") states that keys used with " + name() + " MUST have a size >= " + this.minKeyLength + " bits.  Consider using the " + Keys.class.getName() + " class's 'keyPairFor(SignatureAlgorithm." + name() + ")' method to create a key pair guaranteed to be secure enough for " + name() + ".  See https://tools.ietf.org/html/rfc7518#section-" + str + " for more information.");
140:            throw new WeakKeyException("The specified SecretKey is not strong enough to be used with JWT HMAC signature algorithms.  The JWT specification requires HMAC keys to be >= 256 bits long.  The specified key is " + length + " bits.  See https://tools.ietf.org/html/rfc7518#section-3.2 for more information.");
150:            throw new WeakKeyException("The specified Elliptic Curve signing key is not strong enough to be used with JWT ECDSA signature algorithms.  The JWT specification requires ECDSA keys to be >= 256 bits long.  The specified ECDSA key is " + bitLength + " bits.  See https://tools.ietf.org/html/rfc7518#section-3.4 for more information.");
168:        throw new WeakKeyException("The specified RSA signing key is not strong enough to be used with JWT RSA signature algorithms.  The JWT specification requires RSA keys to be >= 2048 bits long.  The specified RSA key is " + bitLength2 + " bits.  See https://tools.ietf.org/html/rfc7518#section-3.3 for more information.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/io/jsonwebtoken/impl/DefaultClaims.java
10:    private static final String CONVERSION_ERROR_MSG = "Cannot convert existing claim value of type '%s' to desired type '%s'. JJWT only converts simple String, Date, Long, Integer, Short and Byte types automatically. Anything more complex is expected to be already converted to your desired type by the JSON Deserializer implementation. You may specify a custom Deserializer for a JwtParser with the desired conversion configuration via the JwtParserBuilder.deserializeJsonWith() method. See https://github.com/jwtk/jjwt#custom-json-processor for more information. If using Jackson, you can specify custom claim POJO types as described in https://github.com/jwtk/jjwt#json-jackson-custom-types";

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/io/jsonwebtoken/impl/crypto/EllipticCurveProvider.java
60:        throw new InvalidKeyException("EllipticCurve key has a field size of " + byteSizeString(bitLength) + ", but " + signatureAlgorithm.name() + " requires a field size of " + byteSizeString(i10) + " per [RFC 7518, Section 3.4 (validation)](https://datatracker.ietf.org/doc/html/rfc7518#section-3.4).");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/io/jsonwebtoken/impl/crypto/EllipticCurveSignatureValidator.java
47:                throw new io.jsonwebtoken.security.SignatureException("Provided signature is " + EllipticCurveProvider.byteSizeString(bArr2.length) + " but " + this.alg.name() + " signatures must be exactly " + EllipticCurveProvider.byteSizeString(signatureByteArrayLength) + " per [RFC 7518, Section 3.4 (validation)](https://datatracker.ietf.org/doc/html/rfc7518#section-3.4).");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/io/jsonwebtoken/security/Keys.java
94:        throw new WeakKeyException("The specified key byte array is " + length + " bits which is not secure enough for any JWT HMAC-SHA algorithm.  The JWT JWA Specification (RFC 7518, Section 3.2) states that keys used with HMAC-SHA algorithms MUST have a size >= 256 bits (the key size must be greater than or equal to the hash output size).  Consider using the " + Keys.class.getName() + "#secretKeyFor(SignatureAlgorithm) method to create a key guaranteed to be secure enough for your preferred HMAC-SHA algorithm.  See https://tools.ietf.org/html/rfc7518#section-3.2 for more information.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/okhttp3/HttpUrl.java
827:                java.lang.String r1 = "://"

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/tools/Builder.java
149:        System.out.println("JavaCPP version " + implementationVersion + "\nCopyright (C) 2011-2018 Samuel Audet <samuel.audet@gmail.com>\nProject site: https://github.com/bytedeco/javacpp");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p001a0/C0002a.java
880:        f49u0 = "http://ns.adobe.com/xap/1.0/\u0000".getBytes(forName);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p024b9/C1316b.java
23:        return String.format("%s/project/%s/performance/app/android:%s", "https://console.firebase.google.com", str, str2);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p071d5/C7006d.java
277:            if (C6459b.m27676a("http://dashif.org/guidelines/last-segment-number", c7007e.f27437a)) {
1014:            if (C6459b.m27676a("http://dashif.org/guidelines/trickmode", list.get(i11).f27437a)) {

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p080e1/C7076a.java
74:        String attributeValue = xmlPullParser.getAttributeValue("http://www.w3.org/ns/ttml#parameter", "frameRate");
76:        String attributeValue2 = xmlPullParser.getAttributeValue("http://www.w3.org/ns/ttml#parameter", "frameRateMultiplier");
87:        String attributeValue3 = xmlPullParser.getAttributeValue("http://www.w3.org/ns/ttml#parameter", "subFrameRate");
92:        String attributeValue4 = xmlPullParser.getAttributeValue("http://www.w3.org/ns/ttml#parameter", "tickRate");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p097f5/C7129b.java
15:        return new C4130a(Uri.parse(C4167p0.m20042C("%s:%d", "rtp://0.0.0.0", Integer.valueOf(i10))));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p119h3/C7299x.java
40:        Object m42454b = new C9541t.b().m42462a(C7336c.m32373a(C3391z.m15578a(), MediaType.INSTANCE.get("application/json"))).m42463b("https://api.carolinegirvan.net/api/v1/").m42467f(okHttpClient).m42465d().m42454b(InterfaceC6986c.class);
50:        Object m42454b = new C9541t.b().m42462a(C7336c.m32373a(C3391z.m15578a(), MediaType.INSTANCE.get("application/json"))).m42463b("https://api.music.apple.com/v1/").m42467f(okHttpClient).m42465d().m42454b(InterfaceC6984a.class);
117:        Object m42454b = new C9541t.b().m42462a(C7336c.m32373a(C3391z.m15578a(), MediaType.INSTANCE.get("application/json"))).m42463b("https://www.amazon.com").m42467f(okHttpClient).m42465d().m42454b(InterfaceC6985b.class);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p146j2/C7442g.java
24:            newPullParser.setFeature("http://xmlpull.org/v1/doc/features.html#process-namespaces", false);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p146j2/C7444i.java
21:            httpURLConnection = (HttpURLConnection) new URL("https://api.music.apple.com/v1/me/storefront").openConnection();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p177l6/C8525d.java
86:    public static final Scope f32725o = new Scope("https://www.googleapis.com/auth/fitness.activity.read");
89:    public static final Scope f32726p = new Scope("https://www.googleapis.com/auth/fitness.activity.write");
92:    public static final Scope f32727q = new Scope("https://www.googleapis.com/auth/fitness.location.read");
95:    public static final Scope f32728r = new Scope("https://www.googleapis.com/auth/fitness.location.write");
98:    public static final Scope f32729s = new Scope("https://www.googleapis.com/auth/fitness.body.read");
101:    public static final Scope f32730t = new Scope("https://www.googleapis.com/auth/fitness.body.write");
104:    public static final Scope f32731u = new Scope("https://www.googleapis.com/auth/fitness.nutrition.read");
107:    public static final Scope f32732v = new Scope("https://www.googleapis.com/auth/fitness.nutrition.write");
110:    public static final Scope f32733w = new Scope("https://www.googleapis.com/auth/fitness.heart_rate.read");
113:    public static final Scope f32734x = new Scope("https://www.googleapis.com/auth/fitness.heart_rate.write");
116:    public static final Scope f32735y = new Scope("https://www.googleapis.com/auth/fitness.respiratory_rate.read");
119:    public static final Scope f32736z = new Scope("https://www.googleapis.com/auth/fitness.respiratory_rate.write");
122:    public static final Scope f32708A = new Scope("https://www.googleapis.com/auth/fitness.sleep.read");
125:    public static final Scope f32709B = new Scope("https://www.googleapis.com/auth/fitness.sleep.write");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p188m6/C8598d.java
59:        f33022a = new DataType("com.google.blood_pressure", 1, "https://www.googleapis.com/auth/fitness.blood_pressure.read", "https://www.googleapis.com/auth/fitness.blood_pressure.write", C8599e.f33045a, C8599e.f33049e, c8597c, c8597c2);
64:        f33023b = new DataType("com.google.blood_glucose", 1, "https://www.googleapis.com/auth/fitness.blood_glucose.read", "https://www.googleapis.com/auth/fitness.blood_glucose.write", C8599e.f33055k, c8597c3, c8597c4, c8597c5, c8597c6);
68:        f33024c = new DataType("com.google.oxygen_saturation", 1, "https://www.googleapis.com/auth/fitness.oxygen_saturation.read", "https://www.googleapis.com/auth/fitness.oxygen_saturation.write", C8599e.f33059o, C8599e.f33063s, c8597c7, c8597c8, c8597c9);
71:        f33025d = new DataType("com.google.body.temperature", 1, "https://www.googleapis.com/auth/fitness.body_temperature.read", "https://www.googleapis.com/auth/fitness.body_temperature.write", c8597c10, c8597c11);
72:        f33026e = new DataType("com.google.body.temperature.basal", 1, "https://www.googleapis.com/auth/fitness.reproductive_health.read", "https://www.googleapis.com/auth/fitness.reproductive_health.write", c8597c10, c8597c11);
73:        f33027f = new DataType("com.google.cervical_mucus", 1, "https://www.googleapis.com/auth/fitness.reproductive_health.read", "https://www.googleapis.com/auth/fitness.reproductive_health.write", C8599e.f33038B, C8599e.f33039C);
74:        f33028g = new DataType("com.google.cervical_position", 1, "https://www.googleapis.com/auth/fitness.reproductive_health.read", "https://www.googleapis.com/auth/fitness.reproductive_health.write", C8599e.f33040D, C8599e.f33041E, C8599e.f33042F);
75:        f33029h = new DataType("com.google.menstruation", 1, "https://www.googleapis.com/auth/fitness.reproductive_health.read", "https://www.googleapis.com/auth/fitness.reproductive_health.write", C8599e.f33043G);
76:        f33030i = new DataType("com.google.ovulation_test", 1, "https://www.googleapis.com/auth/fitness.reproductive_health.read", "https://www.googleapis.com/auth/fitness.reproductive_health.write", C8599e.f33044H);
77:        f33031j = new DataType("com.google.vaginal_spotting", 1, "https://www.googleapis.com/auth/fitness.reproductive_health.read", "https://www.googleapis.com/auth/fitness.reproductive_health.write", C8597c.f32987c0);
78:        f33032k = new DataType("com.google.blood_pressure.summary", 2, "https://www.googleapis.com/auth/fitness.blood_pressure.read", "https://www.googleapis.com/auth/fitness.blood_pressure.write", C8599e.f33046b, C8599e.f33048d, C8599e.f33047c, C8599e.f33050f, C8599e.f33052h, C8599e.f33051g, c8597c, c8597c2);
82:        f33033l = new DataType("com.google.blood_glucose.summary", 2, "https://www.googleapis.com/auth/fitness.blood_glucose.read", "https://www.googleapis.com/auth/fitness.blood_glucose.write", c8597c12, c8597c13, c8597c14, c8597c3, c8597c4, c8597c5, c8597c6);
83:        f33034m = new DataType("com.google.oxygen_saturation.summary", 2, "https://www.googleapis.com/auth/fitness.oxygen_saturation.read", "https://www.googleapis.com/auth/fitness.oxygen_saturation.write", C8599e.f33060p, C8599e.f33062r, C8599e.f33061q, C8599e.f33064t, C8599e.f33066v, C8599e.f33065u, c8597c7, c8597c8, c8597c9);
84:        f33035n = new DataType("com.google.body.temperature.summary", 2, "https://www.googleapis.com/auth/fitness.body_temperature.read", "https://www.googleapis.com/auth/fitness.body_temperature.write", c8597c12, c8597c13, c8597c14, c8597c11);
85:        f33036o = new DataType("com.google.body.temperature.basal.summary", 2, "https://www.googleapis.com/auth/fitness.reproductive_health.read", "https://www.googleapis.com/auth/fitness.reproductive_health.write", c8597c12, c8597c13, c8597c14, c8597c11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p287u5/C9826b.java
20:        Uri.Builder buildUpon = Uri.parse("https://pagead2.googlesyndication.com/pagead/gen_204?id=gmob-apps").buildUpon();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p313w7/C10056a.java
59:        sb2.append(" (https://developer.android.com/reference/com/google/android/play/core/assetpacks/model/AssetPackErrorCode.html#");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p324x5/RunnableC10087f.java
45:            HttpURLConnection httpURLConnection = (HttpURLConnection) new URL("https://accounts.google.com/o/oauth2/revoke?token=" + this.f37882p).openConnection();

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p336y4/C10170a.java
113:            if (this.f38051g == null && "http://ns.adobe.com/xap/1.0/".equals(c4143d0.m19908x()) && (m19908x = c4143d0.m19908x()) != null) {

[+] Total file sources are: 65 & its total instances are: 184 

[!] QuickNote:
    - It is recommended that external/hard-coded links have been used wisely across the application, if observed.

[*] Reference:
    - OWASP MASVS: MSTG-PLATFORM-6 | CWE-200: Exposure of Sensitive Information to an Unauthorized Actor
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x11-v6-interaction_with_the_environment

==>> The instances of Resource Access permissions...


==>> The Remote WebView Debugging setting...


==>> The instances of Java Objects exposure through WebViews...


==>> The Object Persistence/Serialization instances...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/android/view/result/ActivityResultRegistry.java
248:        this.f724a = (Random) bundle.getSerializable("KEY_COMPONENT_ACTIVITY_RANDOM_OBJECT");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/sdk/authentication/SDKUriHandlerActivity.java
57:                C1950a.m10757e(this, intent.getStringExtra("developer_token"), intent.getStringExtra("contextual_upsell_id"), intent.hasExtra("custom_params") ? (HashMap) intent.getSerializableExtra("custom_params") : null);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/apple/android/sdk/authentication/StartAuthenticationActivity.java
129:                this.f10453t = (HashMap) extras.getSerializable("custom_params");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/carolinegirvan/mobile/util/C3357a.java
25:        return Build.VERSION.SDK_INT >= 33 ? (T) bundle.getSerializable(str, cls) : (T) bundle.getSerializable(str);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/text/C4071b.java
302:        Layout.Alignment alignment = (Layout.Alignment) bundle.getSerializable(m19422e(1));
306:        Layout.Alignment alignment2 = (Layout.Alignment) bundle.getSerializable(m19422e(2));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/cast/C4761f.java
13:        Map map = (Map) bundle.getSerializable(str);

[!] QuickNote:
    - It is recommended to use Serializable only when the serialized classes are stable, if observed. Reflection-based persistence should be avoided as the attacker might be able to manipulate it to execute business logic.

[*] Reference:
    - OWASP MASVS: MSTG-PLATFORM-8 | CWE-502: Deserialization of Untrusted Data
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x11-v6-interaction_with_the_environment

==>> The WebViews Cleanup implementation...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java
494:        LocalDataManager.clearCache(auth.awsKeyValueStore, this.context, auth.getAppId(), this.userId);

[!] QuickNote:
    - It seems that the application clears the data via some mechanism, if observed. Please note that, the application should clear all the WebView resources including any files stored locally, the RAM cache, and any loaded JavaScript when it accesses any sensitive data within a WebView.

[*] Reference:
    - OWASP MASVS V6: MSTG-PLATFORM-10 | CWE-200: Exposure of Sensitive Information to an Unauthorized Actor
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x11-v6-interaction_with_the_environment

==>> The Application Update mechanism...

[!] QuickNote:
    - It is recommended that applications should be forced to be updated. If a security update comes in, then AppUpdateType.IMMEDIATE flag should be used in order to make sure that the user cannot go forward with using the app without updating it. Please note that, newer versions of an application will not fix security issues that are living in the backends to which the app communicates.

[*] Reference:
    - OWASP MASVS V1: MSTG-ARCH-9 | CWE-1277: Firmware Not Updateable
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x06-v1-architecture_design_and_threat_modelling_requireme

==>> The potential third-party application installation mechanism...



[+] Hunting begins based on "V7: Code Quality and Build Setting Requirements"
[+] -------------------------------------------------------------------------

==>> The debuggable flag configuration...

    - android:debuggable="true" flag has not been observed in the AndroidManifest.xml file.

==>> The StrictMode Policy instances...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/graphics/C0584z.java
96:                    StrictMode.setThreadPolicy(allowThreadDiskWrites);
106:            StrictMode.setThreadPolicy(allowThreadDiskWrites);
112:            StrictMode.setThreadPolicy(allowThreadDiskWrites);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/engine/executor/ExecutorServiceC2025a.java
144:                    StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder().detectNetwork().penaltyDeath().build());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/C4639y.java
51:            StrictMode.setThreadPolicy(allowThreadDiskReads);
87:                StrictMode.setThreadPolicy(allowThreadDiskReads);
91:            StrictMode.setThreadPolicy(allowThreadDiskReads);
150:            StrictMode.setThreadPolicy(allowThreadDiskReads);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/internal/ServiceConnectionC4587p1.java
82:            StrictMode.setVmPolicy(permitUnsafeIntentLaunch.build());
109:            StrictMode.setVmPolicy(vmPolicy);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5471v6.java
33:                    StrictMode.setThreadPolicy(allowThreadDiskReads);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5502x5.java
115:                            StrictMode.setThreadPolicy(allowThreadDiskReads);
119:                        StrictMode.setThreadPolicy(allowThreadDiskReads);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p122h6/C7322o.java
54:                        StrictMode.setThreadPolicy(allowThreadDiskReads);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p247r2/C9249a.java
311:        StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder(threadPolicy).permitUnbufferedIo().build());
315:            StrictMode.setThreadPolicy(threadPolicy);
413:        StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder(threadPolicy).permitUnbufferedIo().build());
417:            StrictMode.setThreadPolicy(threadPolicy);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p325x6/C10109d.java
13:            StrictMode.setThreadPolicy(StrictMode.ThreadPolicy.LAX);
16:            StrictMode.setThreadPolicy(threadPolicy);

[!] QuickNote:
    - It is recommended that StrictMode should not be enabled in a production application, if observed. Please note that, It is designed for pre-production use only.

[*] Reference:
    - OWASP MASVS V7: MSTG-CODE-4 | CWE-749: Exposed Dangerous Method or Function
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x12-v7-code_quality_and_build_setting_requirements

==>> The Exception Handling instances...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/android/content/C1097w.java
308:                    throw new RuntimeException("Exception inflating " + resources.getResourceName(graphResId) + " line " + xml.getLineNumber(), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/appcompat/widget/LinearLayoutCompat.java
193:            throw new RuntimeException("mBaselineAlignedChildIndex of LinearLayout set to an index that is out of bounds.");
201:            throw new RuntimeException("mBaselineAlignedChildIndex of LinearLayout points to a View that doesn't know how to get its baseline.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/AbstractC0431s.java
65:            throw new RuntimeException("don't call for custom attribute call setPoint(pos, ConstraintAttribute)");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/motion/widget/AbstractC0432t.java
89:            throw new RuntimeException("don't call for custom attribute call setPoint(pos, ConstraintAttribute,...)");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/widget/C0450a.java
242:                throw new RuntimeException("Color does not have a single color to interpolate");
248:                throw new RuntimeException("Cannot interpolate String");
279:                throw new RuntimeException("Color does not have a single color to interpolate");
321:                    throw new RuntimeException("unable to interpolate strings " + this.f2848a);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/constraintlayout/widget/C0453d.java
1526:                throw new RuntimeException("All children of ConstraintLayout must have ids to use ConstraintSet");
1630:                    throw new RuntimeException("All children of ConstraintLayout must have ids to use ConstraintSet");
1668:                    throw new RuntimeException("All children of ConstraintLayout must have ids to use ConstraintSet");
1845:                throw new RuntimeException("All children of ConstraintLayout must have ids to use ConstraintSet");
1893:                throw new RuntimeException("All children of ConstraintLayout must have ids to use ConstraintSet");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/coordinatorlayout/widget/C0470a.java
32:            throw new RuntimeException("This graph contains cyclic dependencies");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/coordinatorlayout/widget/CoordinatorLayout.java
546:            throw new RuntimeException("Could not inflate Behavior subclass " + str, e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/graphics/C0563e.java
98:            throw new RuntimeException("Error in parsing " + str, e10);
206:            throw new RuntimeException("error in parsing \"" + str + "\"", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/graphics/C0582x.java
185:        throw new RuntimeException("Do not use this function in API 29 or later.");
212:        throw new RuntimeException("Do not use this function in API 29 or later.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/core/widget/AbstractViewOnTouchListenerC0757a.java
131:                throw new RuntimeException("Cannot compute scroll delta before calling start()");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/customview/widget/AbstractC0774a.java
276:            throw new RuntimeException("Callbacks must add text or a content description in populateEventForVirtualViewId()");
303:            throw new RuntimeException("Callbacks must add text or a content description in populateNodeForVirtualViewId()");
307:            throw new RuntimeException("Callbacks must set parent bounds in populateNodeForVirtualViewId()");
311:            throw new RuntimeException("Callbacks must not add ACTION_ACCESSIBILITY_FOCUS in populateNodeForVirtualViewId()");
314:            throw new RuntimeException("Callbacks must not add ACTION_CLEAR_ACCESSIBILITY_FOCUS in populateNodeForVirtualViewId()");
370:            throw new RuntimeException("Views cannot have both real and virtual children");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/databinding/library/baseAdapters/DataBinderMapperImpl.java
29:        throw new RuntimeException("view must have a tag");
38:        throw new RuntimeException("view must have a tag");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/emoji2/text/C0825i.java
137:                        throw new RuntimeException("fetchFonts failed (empty result)");
141:                throw new RuntimeException("fetchFonts failed (" + m5097b.m3777c() + ")");
143:                throw new RuntimeException("provider not found", e10);
204:                        throw new RuntimeException("fetchFonts result is not OK. (" + m3779b + ")");
211:                            throw new RuntimeException("Unable to open file.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/emoji2/text/EmojiCompatInitializer.java
91:                    throw new RuntimeException("EmojiCompat font provider not available on this device.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/lifecycle/C0929c.java
97:                throw new RuntimeException("Failed to call observer method", e11.getCause());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/lifecycle/C0944j0.java
63:            throw new RuntimeException("Failed to access " + cls, e10);
65:            throw new RuntimeException("A " + cls + " cannot be instantiated.", e11);
67:            throw new RuntimeException("An exception happened in constructor of " + cls, e12.getCause());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/lifecycle/C0952n0.java
113:                throw new RuntimeException("Cannot create an instance of " + modelClass, e10);
115:                throw new RuntimeException("Cannot create an instance of " + modelClass, e11);
248:                throw new RuntimeException("Cannot create an instance of " + modelClass, e10);
250:                throw new RuntimeException("Cannot create an instance of " + modelClass, e11);
252:                throw new RuntimeException("Cannot create an instance of " + modelClass, e12);
254:                throw new RuntimeException("Cannot create an instance of " + modelClass, e13);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/loader/content/AbstractC0974c.java
105:                throw new RuntimeException("An error occurred while executing doInBackground()", e11.getCause());
107:                throw new RuntimeException("An error occurred while executing doInBackground()", th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/recyclerview/widget/C1164f.java
366:            throw new RuntimeException("trying to unhide a view that was not hidden" + view);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/savedstate/Recreator.java
71:                    throw new RuntimeException("Failed to instantiate " + str, e10);
77:            throw new RuntimeException("Class " + str + " wasn't found", e12);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/androidx/versionedparcelable/VersionedParcel.java
126:            throw new RuntimeException("VersionedParcel encountered ClassNotFoundException", e10);
128:            throw new RuntimeException("VersionedParcel encountered IllegalAccessException", e11);
130:            throw new RuntimeException("VersionedParcel encountered NoSuchMethodException", e12);
133:                throw new RuntimeException("VersionedParcel encountered InvocationTargetException", e13);
200:            throw new RuntimeException("VersionedParcel encountered ClassNotFoundException", e10);
202:            throw new RuntimeException("VersionedParcel encountered IllegalAccessException", e11);
204:            throw new RuntimeException("VersionedParcel encountered NoSuchMethodException", e12);
209:            throw new RuntimeException("VersionedParcel encountered InvocationTargetException", e13);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/http/AmazonHttpClient.java
288:                    throw new RuntimeException("Unable to unmarshall response metadata. Response Code: " + httpResponse.getStatusCode() + ", Response Text: " + httpResponse.getStatusText());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobile/client/AWSMobileClient.java
254:                            this.val$callback.onError(new RuntimeException("Failed to initialize Cognito Identity; please check your awsconfiguration.json", e10));
283:                            this.val$callback.onError(new RuntimeException("Failed to initialize Cognito Userpool; please check your awsconfiguration.json", e11));
303:                            this.val$callback.onError(new RuntimeException("Failed to initialize OAuth, please check your awsconfiguration.json", e12));
308:                        this.val$callback.onError(new RuntimeException("Neither Cognito Identity or Cognito UserPool was used. At least one must be present to use AWSMobileClient."));
316:                    this.val$callback.onError(new RuntimeException("Failed to initialize AWSMobileClient; please check your awsconfiguration.json", e13));
450:                    throw new RuntimeException("Failed to construct tokens url for OAuth", e12);
453:                throw new RuntimeException("Failed to construct authorization url for OAuth", e13);
585:                throw new RuntimeException("Failed to construct HostedUI from awsconfiguration.json", e13);
893:                    callback.onError(new RuntimeException("Error in federating the token.", e11));
1117:                        callback.onError(new RuntimeException("Called showSignIn while user is already signed-in"));
1600:            throw new RuntimeException("Failed to retrieve user state.", e10);
1726:            throw new RuntimeException("Cognito Identity not configured");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobile/client/internal/InternalCallback.java
80:            Log.e(TAG, "Duplicate call to execute code.", new RuntimeException("Internal error, duplicate call"));
98:            Log.e(TAG, "Duplicate call to execute code.", new RuntimeException("Internal error, duplicate call"));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobile/client/results/Token.java
28:            throw new RuntimeException("Failed to get claim from token", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobile/config/AWSConfiguration.java
24:            throw new RuntimeException("Failed to read awsconfiguration.json please check that it is correctly formed.", e10);
38:            throw new RuntimeException("Failed to read awsconfiguration.json please check that it is correctly formed.", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/Hkdf.java
93:                throw new RuntimeException("Unexpected exception", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/regions/Region.java
37:            throw new RuntimeException("Couldn't instantiate instance of " + cls, e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/amazonaws/regions/RegionUtils.java
75:            throw new RuntimeException("Unable to parse service endpoint: " + e10.getMessage());
85:                    throw new RuntimeException("Couldn't find regions override file specified", e10);
92:                throw new RuntimeException("Failed to initialize the regions.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/load/engine/executor/ExecutorServiceC2025a.java
219:                    throw new RuntimeException("Request threw uncaught throwable", th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/bumptech/glide/request/C2152i.java
154:            this.f11304D = new RuntimeException("Glide request origin trace");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/carolinegirvan/mobile/DataBinderMapperImpl.java
720:            throw new RuntimeException("view must have a tag");
738:        throw new RuntimeException("view must have a tag");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/C3869n.java
114:                            throw new RuntimeException("Error instantiating FLAC extension", e10);
117:                        throw new RuntimeException("Error instantiating Opus extension", e11);
121:                throw new RuntimeException("Error instantiating MIDI extension", e12);
152:            throw new RuntimeException("Error instantiating FFmpeg extension", e13);
204:                throw new RuntimeException("Error instantiating VP9 extension", e10);
213:            throw new RuntimeException("Error instantiating AV1 extension", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/extractor/C3679h.java
129:                    throw new RuntimeException("Error instantiating extension", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser.java
676:            throw new RuntimeException("Couldn't create XmlPullParserFactory instance", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/exoplayer2/text/ttml/C4088c.java
114:            throw new RuntimeException("Couldn't create XmlPullParserFactory instance", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/common/internal/AbstractC4546c.java
514:            throw new RuntimeException("Failed to connect when checking package");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/cast/AbstractC4775fd.java
34:            throw new RuntimeException("Couldn't use Java reflection to implement protocol message reflection.", e10);
43:            throw new RuntimeException("Unexpected exception thrown by generated accessor method.", cause);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/cast/AbstractC5104yb.java
56:            throw new RuntimeException("Serializing " + getClass().getName() + " to a ByteString threw an IOException (should never happen).", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/cast/C4721cd.java
27:            throw new RuntimeException("Unable to get message info for ".concat(cls.getName()), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/cast/C4835j1.java
100:                        throw new RuntimeException("Serializing " + c4982r8.getClass().getName() + " to a byte array threw an IOException (should never happen).", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/cast/C4954pe.java
119:            throw new RuntimeException("Field " + str + " for " + cls.getName() + " not found. Known fields are " + Arrays.toString(declaredFields));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/AbstractC5248h7.java
78:            throw new RuntimeException("Serializing " + getClass().getName() + " to a ByteString threw an IOException (should never happen).", e10);
101:            throw new RuntimeException("Serializing " + getClass().getName() + " to a byte array threw an IOException (should never happen).", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/AbstractC5521y8.java
50:            throw new RuntimeException("Couldn't use Java reflection to implement protocol message reflection.", e10);
59:            throw new RuntimeException("Unexpected exception thrown by generated accessor method.", cause);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5235ga.java
2614:            throw new RuntimeException("Field " + str + " for " + cls.getName() + " not found. Known fields are " + Arrays.toString(declaredFields));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5441t8.java
27:            throw new RuntimeException("Unable to get message info for ".concat(cls.getName()), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/measurement/C5473v8.java
87:            throw new RuntimeException("Reading from byte array should not throw IOException.", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/play_billing/AbstractC5560c1.java
56:            throw new RuntimeException("Couldn't use Java reflection to implement protocol message reflection.", e10);
65:            throw new RuntimeException("Unexpected exception thrown by generated accessor method.", cause);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/play_billing/AbstractC5621l.java
24:            throw new RuntimeException("Serializing " + getClass().getName() + " to a ByteString threw an IOException (should never happen).", e10);
43:            throw new RuntimeException("Serializing " + getClass().getName() + " to a byte array threw an IOException (should never happen).", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/play_billing/C5596h2.java
1478:            throw new RuntimeException("Field " + str + " for " + cls.getName() + " not found. Known fields are " + Arrays.toString(declaredFields));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/internal/play_billing/C5703x0.java
27:            throw new RuntimeException("Unable to get message info for ".concat(cls.getName()), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/gms/measurement/internal/C5956u4.java
72:                c5945t42.setUncaughtExceptionHandler(this.f22840g);
172:                c5945t42.setUncaughtExceptionHandler(this.f22841h);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/android/material/textfield/C6262d.java
388:        throw new RuntimeException("EditText needs to be an AutoCompleteTextView if an Exposed Dropdown Menu is being used.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/common/C6606k.java
628:        Thread.setDefaultUncaughtExceptionHandler(c6618q);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/common/C6610m.java
182:                return C6042j.m25331d(new RuntimeException("Collection of crash reports disabled in Crashlytics settings."));
288:            this.f25639i.m28495x(c6596f, Thread.getDefaultUncaughtExceptionHandler(), interfaceC6668i);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/settings/C6662c.java
80:            throw new RuntimeException("An invalid data collection token was used.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/protobuf/AbstractC6907e.java
184:                    throw new RuntimeException("unsupported field type.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/protobuf/AbstractC6960x.java
300:            throw new RuntimeException("Couldn't use Java reflection to implement protocol message reflection.", e10);
309:            throw new RuntimeException("Unexpected exception thrown by generated accessor method.", cause);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/protobuf/C6922j.java
153:                throw new RuntimeException("unsupported field type.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/protobuf/C6952t.java
313:                throw new RuntimeException("There is no way to get here, but the compiler thinks otherwise.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/protobuf/C6953t0.java
611:            throw new RuntimeException("Field " + str + " for " + cls.getName() + " not found. Known fields are " + Arrays.toString(declaredFields));

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/protobuf/C6958w.java
27:            throw new RuntimeException("Unable to get message info for " + cls.getName(), e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/protobuf/EnumC6954u.java
315:                throw new RuntimeException("Unable to identify parameter type for List<T>");
342:                            throw new RuntimeException("Type array mismatch");
358:                            throw new RuntimeException("Unable to find replacement for " + type);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/kotlin/reflect/jvm/internal/impl/protobuf/AbstractC7951d.java
72:            throw new RuntimeException("UTF-8 not supported?", e10);
104:            throw new RuntimeException("UTF-8 not supported?", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/kotlin/reflect/jvm/internal/impl/protobuf/AbstractC7955h.java
314:            throw new RuntimeException("Couldn't use Java reflection to implement protocol message reflection.", e10);
323:            throw new RuntimeException("Unexpected exception thrown by generated accessor method.", cause);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/kotlin/reflect/jvm/internal/impl/protobuf/C7954g.java
237:                throw new RuntimeException("There is no way to get here, but the compiler thinks otherwise.");
379:                throw new RuntimeException("There is no way to get here, but the compiler thinks otherwise.");

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/kotlin/reflect/jvm/internal/impl/protobuf/C7956i.java
43:            throw new RuntimeException("UTF-8 not supported?", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/kotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream.java
54:            throw new RuntimeException("UTF-8 not supported.", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/kotlinx/coroutines/C8337h0.java
41:                currentThread.getUncaughtExceptionHandler().uncaughtException(currentThread, C8341i0.m38861b(th, th2));
53:        currentThread2.getUncaughtExceptionHandler().uncaughtException(currentThread2, th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/kotlinx/coroutines/C8341i0.java
31:        RuntimeException runtimeException = new RuntimeException("Exception while trying to handle coroutine exception", th2);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/kotlinx/coroutines/scheduling/ExecutorC8408a.java
302:                currentThread.getUncaughtExceptionHandler().uncaughtException(currentThread, th);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/BoolPointer.java
20:            throw new RuntimeException("No native JavaCPP library in memory. (Has Loader.load() been called?)", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/BooleanPointer.java
78:            throw new RuntimeException("No native JavaCPP library in memory. (Has Loader.load() been called?)", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/BytePointer.java
296:            throw new RuntimeException("No native JavaCPP library in memory. (Has Loader.load() been called?)", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/CLongPointer.java
20:            throw new RuntimeException("No native JavaCPP library in memory. (Has Loader.load() been called?)", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/CharPointer.java
121:            throw new RuntimeException("No native JavaCPP library in memory. (Has Loader.load() been called?)", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/DoublePointer.java
81:            throw new RuntimeException("No native JavaCPP library in memory. (Has Loader.load() been called?)", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/FloatPointer.java
81:            throw new RuntimeException("No native JavaCPP library in memory. (Has Loader.load() been called?)", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/IntPointer.java
128:            throw new RuntimeException("No native JavaCPP library in memory. (Has Loader.load() been called?)", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/LongPointer.java
81:            throw new RuntimeException("No native JavaCPP library in memory. (Has Loader.load() been called?)", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/PointerPointer.java
167:            throw new RuntimeException("No native JavaCPP library in memory. (Has Loader.load() been called?)", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/ShortPointer.java
81:            throw new RuntimeException("No native JavaCPP library in memory. (Has Loader.load() been called?)", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/SizeTPointer.java
20:            throw new RuntimeException("No native JavaCPP library in memory. (Has Loader.load() been called?)", e11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/org/bytedeco/javacpp/tools/Builder.java
115:                        throw new RuntimeException("Could not compile " + str + ": " + executeCommand);
650:                            throw new RuntimeException("URI: " + uri, e);
744:            throw new RuntimeException("Process exited with an error: " + i11);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p071d5/C7006d.java
106:            throw new RuntimeException("Couldn't create XmlPullParserFactory instance", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p080e1/C7076a.java
67:            throw new RuntimeException("Couldn't create XmlPullParserFactory instance", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p107g2/C7194e.java
261:                throw C1387d.m8912e(new RuntimeException("invalid openSLESEngine"), m8749g());

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p263s5/C9587n.java
164:                throw new RuntimeException("Error instantiating RTMP extension", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/p334y2/C10166d.java
82:        throw new RuntimeException("Unable to instantiate GlideModule implementation for " + cls, exc);
115:            throw new RuntimeException("Unable to find metadata to parse GlideModules", e10);

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/retrofit2/C9534m.java
341:            throw new RuntimeException("Unable to create request.", e10);

[!] QuickNote:
    - It is recommended that a well-designed and unified scheme to handle exceptions, if observed. Please note that, The application should not expose any sensitive data while handling exceptions in its UI or log-statements.

[*] Reference:
    - OWASP MASVS V7: MSTG-CODE-6 | CWE-755: Improper Handling of Exceptional Conditions
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x12-v7-code_quality_and_build_setting_requirements

==>> The Obfuscated Code blocks...

[!] QuickNote:
    - It is recommended that some basic obfuscation should be implemented to the release byte-code, if not observed. Please note that, Code obfuscation in the applications protects against reverse engineering, tampering, or other attacks.

[*] Reference:
    - OWASP MASVS V7: MSTG-CODE-9 | CWE-693: Protection Mechanism Failure
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x12-v7-code_quality_and_build_setting_requirements


[+] Hunting begins based on "V8: Resilience Requirements"
[+] -----------------------------------------------------

==>> The Root Detection implementation...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/common/C6598g.java
410:            return !m28437x && new File("/system/xbin/su").exists();

[!] QuickNote:
    - It seems that root detection mechanism has been implemented. Please note that, Multiple detection methods should be implemented. It is recommended to check it out manually as well for better clarity.

[*] Reference:
    - OWASP MASVS V8: MSTG-RESILIENCE-1 | CWE-250: Execution with Unnecessary Privileges
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x15-v8-resiliency_against_reverse_engineering_requirements

==>> The Anti-Debugging Detection implementation...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/common/C6598g.java
391:        return Debug.isDebuggerConnected() || Debug.waitingForDebugger();

[!] QuickNote:
    - It seems that Anti-Debugging detection mechanism has been implemented. Please note that, Multiple detection methods should be implemented. It is recommended to check it out manually as well for better clarity.

[*] Reference:
    - OWASP MASVS V8: MSTG-RESILIENCE-2 | CWE-693: Protection Mechanism Failure
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x15-v8-resiliency_against_reverse_engineering_requirements

==>> The File Integrity Checks implementation...

[!] QuickNote:
    - It is recommended to implement CRC checks on the app bytecode, native libraries, and important data files, if not observed. Please note that, reverse engineers can easily bypass APK code signature check by re-packaging and re-signing an app. The idea is to have additional controls in place so that the app only runs correctly in its unmodified state, even if the code signature is valid.

[*] Reference:
    - OWASP MASVS V8: MSTG-RESILIENCE-3 | CWE-693: Protection Mechanism Failure
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x15-v8-resiliency_against_reverse_engineering_requirements

==>> The Emulator Detection implementation...

/home/sap/Downloads/Dev/apk-download/apks/todo/com-carolinegirvan-mobile_SAST/sources/com/google/firebase/crashlytics/internal/common/C6598g.java
396:        if (!Build.PRODUCT.contains("sdk")) {

[!] QuickNote:
    - It seems that Emulator detection mechanism has been implemented. Please note that, Multiple detection methods should be implemented. It is recommended to check it out manually as well for better clarity.

[*] Reference:
    - OWASP MASVS V8: MSTG-RESILIENCE-5 | CWE-693: Protection Mechanism Failure
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x15-v8-resiliency_against_reverse_engineering_requirements

==>> The implementation of any Defence Mechanisms...

[!] QuickNote:
    - It is recommended to implement various defence mechanisms such as SafetyNet Attestation API, if not observed.

[*] Reference:
    - OWASP MASVS V8: MSTG-RESILIENCE-7 | CWE-693: Protection Mechanism Failure
    - https://mobile-security.gitbook.io/masvs/security-requirements/0x15-v8-resiliency_against_reverse_engineering_requirements

[+] Scan has been finished at: 2025-04-27 15:35:37.230226798 -0400 EDT m=+959.209550848

[+] Total time taken for hunting: 15m59.209055338s

[*] Thank you for using APKHunt! Made with <3 in India.

